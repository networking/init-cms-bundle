services:
    security.acl.permission.map:
        class: Networking\InitCmsBundle\Security\Acl\Permission\AdminPermissionMap

parameters:
    sonata.admin.security.mask.builder.class: Networking\InitCmsBundle\Security\Acl\Permission\MaskBuilder

security:
    access_decision_manager:
        # Strategy can be: affirmative, unanimous or consensus
        strategy: unanimous
    role_hierarchy:
        ROLE_SUPER_ADMIN: [ ROLE_SONATA_ADMIN, ROLE_ALLOWED_TO_SWITCH ]
    #        SONATA:
    #            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT  # if you are using acl then this line must be commented
    password_hashers:
        Sonata\UserBundle\Model\UserInterface: auto

    providers:
        sonata_user_bundle:
            id: sonata.user.security.user_provider

    enable_authenticator_manager: true
    firewalls:
        # -> custom firewall for the admin area of the URL
        admin:
            switch_user: true
            context: user
            pattern: /admin(.*)
            form_login:
                provider: sonata_user_bundle
                enable_csrf: true
                login_path: /admin/login
                use_forward: false
                check_path: /admin/login_check
                failure_path: null
                use_referer: true
                default_target_path: /admin/dashboard
            logout:
                path: /admin/logout
                target: /
                invalidate_session: true
            remember_me:
                secret: "%kernel.secret%"
                lifetime: 31536000 # 365 days in seconds
                path: /
                domain: ~
        # -> end custom configuration

        # defaut login area for standard users
        main:
            switch_user: true
            context: user
            pattern: .*
            form_login:
                provider:  sonata_user_bundle
                enable_csrf: true
                login_path: /login
                use_forward: false
                check_path: /login_check
                failure_path: null
            logout: true

    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/_wdt, role: PUBLIC_ACCESS }
        - { path: ^/_profiler, role: PUBLIC_ACCESS }
        - { path: ^/login$, role: PUBLIC_ACCESS }
        - { path: ^/login_$, role: PUBLIC_ACCESS }

        # -> custom access control for the admin area of the URL
        - { path: ^/admin/login$, role: PUBLIC_ACCESS }
        - { path: ^/admin/logout$, role: PUBLIC_ACCESS }
        - { path: ^/admin/login_check$, role: PUBLIC_ACCESS }
        - { path: ^/admin/request, role: PUBLIC_ACCESS }
        - { path: ^/admin/send-email, role: PUBLIC_ACCESS }
        - { path: ^/admin/check-email, role: PUBLIC_ACCESS }
        - { path: ^/admin/reset, role: PUBLIC_ACCESS }
        - { path: ^/admin/_initcms_admin_navbar/.*$, role: PUBLIC_ACCESS }
        # -> end

        - { path: ^/register, role: PUBLIC_ACCESS }
        - { path: ^/resetting, role: PUBLIC_ACCESS }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin$, role: [ ROLE_SONATA_ADMIN ] }
        - { path: ^/admin/.*, role: [ ROLE_SONATA_ADMIN ] }
        - { path: ^/.*, role: PUBLIC_ACCESS }
