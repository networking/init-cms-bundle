{"version":3,"file":"add-address.js","names":["KTModalAddAddress","submitButton","cancelButton","closeButton","validator","form","modal","init","bootstrap","Modal","document","querySelector","FormValidation","formValidation","fields","name","validators","notEmpty","message","country","address1","city","state","postcode","plugins","trigger","Trigger","Bootstrap5","rowSelector","eleInvalidClass","eleValidClass","$","on","revalidateField","addEventListener","e","preventDefault","validate","then","status","console","log","setAttribute","disabled","setTimeout","removeAttribute","Swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","result","isConfirmed","hide","showCancelButton","cancelButtonText","value","reset","dismiss","KTUtil","onDOMContentLoaded"],"sources":["apps/ecommerce/customers/details/add-address.js"],"mappings":"AAAA,aAGA,IAAIA,kBAAoB,WACpB,IAAIC,EACAC,EACHC,EACGC,EACAC,EACAC,EAyLJ,MAAO,CAEHC,KAAM,WAEFD,EAAQ,IAAIE,UAAUC,MAAMC,SAASC,cAAc,0BAEnDN,EAAOK,SAASC,cAAc,8BAC9BV,EAAeI,EAAKM,cAAc,gCAClCT,EAAeG,EAAKM,cAAc,gCAC3CR,EAAcE,EAAKM,cAAc,+BA7LlCP,EAAYQ,eAAeC,eAC1BR,EACA,CACCS,OAAQ,CACQC,KAAQ,CACtBC,WAAY,CACXC,SAAU,CACTC,QAAS,8BAIZC,QAAW,CACVH,WAAY,CACXC,SAAU,CACTC,QAAS,yBAIZE,SAAY,CACXJ,WAAY,CACXC,SAAU,CACTC,QAAS,2BAIZG,KAAQ,CACPL,WAAY,CACXC,SAAU,CACTC,QAAS,sBAIZI,MAAS,CACRN,WAAY,CACXC,SAAU,CACTC,QAAS,uBAIZK,SAAY,CACXP,WAAY,CACXC,SAAU,CACTC,QAAS,2BAKbM,QAAS,CACRC,QAAS,IAAIb,eAAeY,QAAQE,QACpClB,UAAW,IAAII,eAAeY,QAAQG,WAAW,CAChDC,YAAa,UACKC,gBAAiB,GACjBC,cAAe,QAO/BC,EAAE1B,EAAKM,cAAc,qBAAqBqB,GAAG,UAAU,WAEnD5B,EAAU6B,gBAAgB,UAC9B,IAGNhC,EAAaiC,iBAAiB,SAAS,SAAUC,GAChDA,EAAEC,iBAGEhC,GACHA,EAAUiC,WAAWC,MAAK,SAAUC,GACnCC,QAAQC,IAAI,cAEE,SAAVF,GACHtC,EAAayC,aAAa,oBAAqB,MAG/CzC,EAAa0C,UAAW,EAExBC,YAAW,WACV3C,EAAa4C,gBAAgB,qBAE7BC,KAAKC,KAAK,CACTC,KAAM,wCACNC,KAAM,UACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACZC,cAAe,qBAEdf,MAAK,SAAUgB,GACbA,EAAOC,cAEVjD,EAAMkD,OAGNvD,EAAa0C,UAAW,EAE1B,GACD,GAAG,MAEHG,KAAKC,KAAK,CACTC,KAAM,sEACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACZC,cAAe,oBAInB,GAEF,IAEMnD,EAAagC,iBAAiB,SAAS,SAAUC,GAC7CA,EAAEC,iBAEFU,KAAKC,KAAK,CACNC,KAAM,yCACNC,KAAM,UACNQ,kBAAkB,EAClBP,gBAAgB,EAChBC,kBAAmB,kBACnBO,iBAAkB,aAClBN,YAAa,CACTC,cAAe,kBACfnD,aAAc,0BAEnBoC,MAAK,SAAUgB,GACVA,EAAOK,OACPtD,EAAKuD,QACLtD,EAAMkD,QACoB,WAAnBF,EAAOO,SACdf,KAAKC,KAAK,CACNC,KAAM,qCACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,oBAI/B,GACJ,IAENlD,EAAY+B,iBAAiB,SAAS,SAASC,GAC9CA,EAAEC,iBAEOU,KAAKC,KAAK,CACNC,KAAM,yCACNC,KAAM,UACNQ,kBAAkB,EAClBP,gBAAgB,EAChBC,kBAAmB,kBACnBO,iBAAkB,aAClBN,YAAa,CACTC,cAAe,kBACfnD,aAAc,0BAEnBoC,MAAK,SAAUgB,GACVA,EAAOK,OACPtD,EAAKuD,QACLtD,EAAMkD,QACoB,WAAnBF,EAAOO,SACdf,KAAKC,KAAK,CACNC,KAAM,qCACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,oBAI/B,GACV,GAeM,EAER,CA7MwB,GAgNxBS,OAAOC,oBAAmB,WACzB/D,kBAAkBO,MACnB","sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTModalAddAddress = function () {\n    var submitButton;\n    var cancelButton;\n\tvar closeButton;\n    var validator;\n    var form;\n    var modal;\n\n    // Init form inputs\n    var handleForm = function () {\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n\t\tvalidator = FormValidation.formValidation(\n\t\t\tform,\n\t\t\t{\n\t\t\t\tfields: {\n                    'name': {\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'Address name is required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'country': {\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'Country is required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'address1': {\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'Address 1 is required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'city': {\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'City is required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'state': {\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'State is required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'postcode': {\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'Postcode is required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tplugins: {\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap5({\n\t\t\t\t\t\trowSelector: '.fv-row',\n                        eleInvalidClass: '',\n                        eleValidClass: ''\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t// Revalidate country field. For more info, plase visit the official plugin site: https://select2.org/\n        $(form.querySelector('[name=\"country\"]')).on('change', function() {\n            // Revalidate the field when an option is chosen\n            validator.revalidateField('country');\n        });\n\n\t\t// Action buttons\n\t\tsubmitButton.addEventListener('click', function (e) {\n\t\t\te.preventDefault();\n\n\t\t\t// Validate form before submit\n\t\t\tif (validator) {\n\t\t\t\tvalidator.validate().then(function (status) {\n\t\t\t\t\tconsole.log('validated!');\n\n\t\t\t\t\tif (status == 'Valid') {\n\t\t\t\t\t\tsubmitButton.setAttribute('data-kt-indicator', 'on');\n\n\t\t\t\t\t\t// Disable submit button whilst loading\n\t\t\t\t\t\tsubmitButton.disabled = true;\n\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tsubmitButton.removeAttribute('data-kt-indicator');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\t\t\ttext: \"Form has been successfully submitted!\",\n\t\t\t\t\t\t\t\ticon: \"success\",\n\t\t\t\t\t\t\t\tbuttonsStyling: false,\n\t\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\n\t\t\t\t\t\t\t\tcustomClass: {\n\t\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}).then(function (result) {\n\t\t\t\t\t\t\t\tif (result.isConfirmed) {\n\t\t\t\t\t\t\t\t\t// Hide modal\n\t\t\t\t\t\t\t\t\tmodal.hide();\n\n\t\t\t\t\t\t\t\t\t// Enable submit button after loading\n\t\t\t\t\t\t\t\t\tsubmitButton.disabled = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\t\t\t\t\t\t\t\n\t\t\t\t\t\t}, 2000);   \t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\t\ttext: \"Sorry, looks like there are some errors detected, please try again.\",\n\t\t\t\t\t\t\ticon: \"error\",\n\t\t\t\t\t\t\tbuttonsStyling: false,\n\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\n\t\t\t\t\t\t\tcustomClass: {\n\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n        cancelButton.addEventListener('click', function (e) {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Are you sure you would like to cancel?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: \"Yes, cancel it!\",\n                cancelButtonText: \"No, return\",\n                customClass: {\n                    confirmButton: \"btn btn-primary\",\n                    cancelButton: \"btn btn-active-light\"\n                }\n            }).then(function (result) {\n                if (result.value) {\n                    form.reset(); // Reset form\t\n                    modal.hide(); // Hide modal\t\t\t\t\n                } else if (result.dismiss === 'cancel') {\n                    Swal.fire({\n                        text: \"Your form has not been cancelled!.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn btn-primary\",\n                        }\n                    });\n                }\n            });\n        });\n\n\t\tcloseButton.addEventListener('click', function(e){\n\t\t\te.preventDefault();\n\n            Swal.fire({\n                text: \"Are you sure you would like to cancel?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: \"Yes, cancel it!\",\n                cancelButtonText: \"No, return\",\n                customClass: {\n                    confirmButton: \"btn btn-primary\",\n                    cancelButton: \"btn btn-active-light\"\n                }\n            }).then(function (result) {\n                if (result.value) {\n                    form.reset(); // Reset form\t\n                    modal.hide(); // Hide modal\t\t\t\t\n                } else if (result.dismiss === 'cancel') {\n                    Swal.fire({\n                        text: \"Your form has not been cancelled!.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn btn-primary\",\n                        }\n                    });\n                }\n            });\n\t\t})\n    }\n\n    return {\n        // Public functions\n        init: function () {\n            // Elements\n            modal = new bootstrap.Modal(document.querySelector('#kt_modal_add_address'));\n\n            form = document.querySelector('#kt_modal_add_address_form');\n            submitButton = form.querySelector('#kt_modal_add_address_submit');\n            cancelButton = form.querySelector('#kt_modal_add_address_cancel');\n\t\t\tcloseButton = form.querySelector('#kt_modal_add_address_close');\n\n            handleForm();\n        }\n    };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n\tKTModalAddAddress.init();\n});"]}