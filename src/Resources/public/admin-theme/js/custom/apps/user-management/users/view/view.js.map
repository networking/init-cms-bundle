{"version":3,"file":"view.js","names":["KTUsersViewMain","init","document","getElementById","addEventListener","e","preventDefault","Swal","fire","text","icon","showCancelButton","buttonsStyling","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","then","result","value","dismiss","querySelectorAll","forEach","button","deviceName","closest","innerText","remove","form","submitButton","querySelector","setAttribute","disabled","setTimeout","removeAttribute","reset","initEmailPreferenceForm","KTUtil","onDOMContentLoaded"],"sources":["apps/user-management/users/view/view.js"],"mappings":"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","sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTUsersViewMain = function () {\n\n    // Init login session button\n    var initLoginSession = () => {\n        const button = document.getElementById('kt_modal_sign_out_sesions');\n\n        button.addEventListener('click', e => {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Are you sure you would like sign out all sessions?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: \"Yes, sign out!\",\n                cancelButtonText: \"No, return\",\n                customClass: {\n                    confirmButton: \"btn btn-primary\",\n                    cancelButton: \"btn btn-active-light\"\n                }\n            }).then(function (result) {\n                if (result.value) {\n                    Swal.fire({\n                        text: \"You have signed out all sessions!.\",\n                        icon: \"success\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn btn-primary\",\n                        }\n                    });\n                } else if (result.dismiss === 'cancel') {\n                    Swal.fire({\n                        text: \"Your sessions are still preserved!.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn btn-primary\",\n                        }\n                    });\n                }\n            });\n        });\n    }\n\n\n    // Init sign out single user\n    var initSignOutUser = () => {\n        const signOutButtons = document.querySelectorAll('[data-kt-users-sign-out=\"single_user\"]');\n\n        signOutButtons.forEach(button => {\n            button.addEventListener('click', e => {\n                e.preventDefault();\n\n                const deviceName = button.closest('tr').querySelectorAll('td')[1].innerText;\n\n                Swal.fire({\n                    text: \"Are you sure you would like sign out \" + deviceName + \"?\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    buttonsStyling: false,\n                    confirmButtonText: \"Yes, sign out!\",\n                    cancelButtonText: \"No, return\",\n                    customClass: {\n                        confirmButton: \"btn btn-primary\",\n                        cancelButton: \"btn btn-active-light\"\n                    }\n                }).then(function (result) {\n                    if (result.value) {\n                        Swal.fire({\n                            text: \"You have signed out \" + deviceName + \"!.\",\n                            icon: \"success\",\n                            buttonsStyling: false,\n                            confirmButtonText: \"Ok, got it!\",\n                            customClass: {\n                                confirmButton: \"btn btn-primary\",\n                            }\n                        }).then(function(){\n                            button.closest('tr').remove();\n                        });\n                    } else if (result.dismiss === 'cancel') {\n                        Swal.fire({\n                            text: deviceName + \"'s session is still preserved!.\",\n                            icon: \"error\",\n                            buttonsStyling: false,\n                            confirmButtonText: \"Ok, got it!\",\n                            customClass: {\n                                confirmButton: \"btn btn-primary\",\n                            }\n                        });\n                    }\n                });\n            });\n        });\n\n\n    }\n\n    // Delete two step authentication handler\n    const initDeleteTwoStep = () => {\n        const deleteButton = document.getElementById('kt_users_delete_two_step');\n\n        deleteButton.addEventListener('click', e => {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Are you sure you would like remove this two-step authentication?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: \"Yes, remove it!\",\n                cancelButtonText: \"No, return\",\n                customClass: {\n                    confirmButton: \"btn btn-primary\",\n                    cancelButton: \"btn btn-active-light\"\n                }\n            }).then(function (result) {\n                if (result.value) {\n                    Swal.fire({\n                        text: \"You have removed this two-step authentication!.\",\n                        icon: \"success\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn btn-primary\",\n                        }\n                    });\n                } else if (result.dismiss === 'cancel') {\n                    Swal.fire({\n                        text: \"Your two-step authentication is still valid!.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn btn-primary\",\n                        }\n                    });\n                }\n            });\n        })\n    }\n\n    // Email preference form handler\n    const initEmailPreferenceForm = () => {\n        // Define variables\n        const form = document.getElementById('kt_users_email_notification_form');\n        const submitButton = form.querySelector('#kt_users_email_notification_submit');\n        const cancelButton = form.querySelector('#kt_users_email_notification_cancel');\n\n        // Submit action handler\n        submitButton.addEventListener('click', e => {\n            e.preventDefault();\n\n            // Show loading indication\n            submitButton.setAttribute('data-kt-indicator', 'on');\n\n            // Disable button to avoid multiple click \n            submitButton.disabled = true;\n\n            // Simulate form submission. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n            setTimeout(function () {\n                // Remove loading indication\n                submitButton.removeAttribute('data-kt-indicator');\n\n                // Enable button\n                submitButton.disabled = false;\n\n                // Show popup confirmation \n                Swal.fire({\n                    text: \"Form has been successfully submitted!\",\n                    icon: \"success\",\n                    buttonsStyling: false,\n                    confirmButtonText: \"Ok, got it!\",\n                    customClass: {\n                        confirmButton: \"btn btn-primary\"\n                    }\n                });\n\n                //form.submit(); // Submit form\n            }, 2000);\n        });\n\n        cancelButton.addEventListener('click', e => {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Are you sure you would like to cancel?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: \"Yes, cancel it!\",\n                cancelButtonText: \"No, return\",\n                customClass: {\n                    confirmButton: \"btn btn-primary\",\n                    cancelButton: \"btn btn-active-light\"\n                }\n            }).then(function (result) {\n                if (result.value) {\n                    form.reset(); // Reset form\t\t\t\t\n                } else if (result.dismiss === 'cancel') {\n                    Swal.fire({\n                        text: \"Your form has not been cancelled!.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn btn-primary\",\n                        }\n                    });\n                }\n            });\n        });\n    }\n\n\n    return {\n        // Public functions\n        init: function () {\n            initLoginSession();\n            initSignOutUser();\n            initDeleteTwoStep();\n            initEmailPreferenceForm();\n        }\n    };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTUsersViewMain.init();\n});"]}