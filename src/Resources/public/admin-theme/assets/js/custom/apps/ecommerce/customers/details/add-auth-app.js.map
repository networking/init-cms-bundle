{"version":3,"file":"add-auth-app.js","names":["KTUsersAddAuthApp","element","document","getElementById","modal","bootstrap","Modal","init","querySelector","addEventListener","e","preventDefault","Swal","fire","text","icon","showCancelButton","buttonsStyling","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","then","result","value","hide","qrCode","textCode","qrCodeButton","textCodeButton","qrCodeLabel","textCodeLabel","toggleClass","classList","toggle","initCodeSwap","KTUtil","onDOMContentLoaded"],"sources":["apps/ecommerce/customers/details/add-auth-app.js"],"mappings":"AAAA,aAGA,IAAIA,kBAAoB,WAEpB,MAAMC,EAAUC,SAASC,eAAe,yBAClCC,EAAQ,IAAIC,UAAUC,MAAML,GA8DlC,MAAO,CAEHM,KAAM,WA1DcN,EAAQO,cAAc,wCAC9BC,iBAAiB,SAASC,IAClCA,EAAEC,iBAEFC,KAAKC,KAAK,CACNC,KAAM,wCACNC,KAAM,UACNC,kBAAkB,EAClBC,gBAAgB,EAChBC,kBAAmB,iBACnBC,iBAAkB,aAClBC,YAAa,CACTC,cAAe,kBACfC,aAAc,0BAEnBC,MAAK,SAAUC,GACVA,EAAOC,OACPrB,EAAMsB,MAEd,GAAE,IAMS,MACf,MAAMC,EAAS1B,EAAQO,cAAc,wCAC/BoB,EAAW3B,EAAQO,cAAc,0CACjCqB,EAAe5B,EAAQO,cAAc,+CACrCsB,EAAiB7B,EAAQO,cAAc,iDACvCuB,EAAc9B,EAAQO,cAAc,8CACpCwB,EAAgB/B,EAAQO,cAAc,gDAEtCyB,EAAc,KAChBN,EAAOO,UAAUC,OAAO,UACxBN,EAAaK,UAAUC,OAAO,UAC9BJ,EAAYG,UAAUC,OAAO,UAC7BP,EAASM,UAAUC,OAAO,UAC1BL,EAAeI,UAAUC,OAAO,UAChCH,EAAcE,UAAUC,OAAO,SAAS,EAI5CL,EAAerB,iBAAiB,SAASC,IACrCA,EAAEC,iBAEFsB,GAAa,IAGjBJ,EAAapB,iBAAiB,SAASC,IACnCA,EAAEC,iBAEFsB,GAAa,GACf,EAOEG,EACJ,EAER,CAxEwB,GA2ExBC,OAAOC,oBAAmB,WACtBtC,kBAAkBO,MACtB","sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTUsersAddAuthApp = function () {\n    // Shared variables\n    const element = document.getElementById('kt_modal_add_auth_app');\n    const modal = new bootstrap.Modal(element);\n\n    // Init add schedule modal\n    var initAddAuthApp = () => {\n\n        // Close button handler\n        const closeButton = element.querySelector('[data-kt-users-modal-action=\"close\"]');\n        closeButton.addEventListener('click', e => {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Are you sure you would like to close?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: \"Yes, close it!\",\n                cancelButtonText: \"No, return\",\n                customClass: {\n                    confirmButton: \"btn btn-primary\",\n                    cancelButton: \"btn btn-active-light\"\n                }\n            }).then(function (result) {\n                if (result.value) {\n                    modal.hide(); // Hide modal\t\t\t\t\n                } \n            });\n        });\n\n    }\n\n    // QR code to text code swapper\n    var initCodeSwap = () => {\n        const qrCode = element.querySelector('[ data-kt-add-auth-action=\"qr-code\"]');\n        const textCode = element.querySelector('[ data-kt-add-auth-action=\"text-code\"]');\n        const qrCodeButton = element.querySelector('[ data-kt-add-auth-action=\"qr-code-button\"]');\n        const textCodeButton = element.querySelector('[ data-kt-add-auth-action=\"text-code-button\"]');\n        const qrCodeLabel = element.querySelector('[ data-kt-add-auth-action=\"qr-code-label\"]');\n        const textCodeLabel = element.querySelector('[ data-kt-add-auth-action=\"text-code-label\"]');\n\n        const toggleClass = () =>{\n            qrCode.classList.toggle('d-none');\n            qrCodeButton.classList.toggle('d-none');\n            qrCodeLabel.classList.toggle('d-none');\n            textCode.classList.toggle('d-none');\n            textCodeButton.classList.toggle('d-none');\n            textCodeLabel.classList.toggle('d-none');\n        }\n\n        // Swap to text code handler\n        textCodeButton.addEventListener('click', e =>{\n            e.preventDefault();\n\n            toggleClass();\n        });\n\n        qrCodeButton.addEventListener('click', e =>{\n            e.preventDefault();\n\n            toggleClass();\n        });\n    }\n\n    return {\n        // Public functions\n        init: function () {\n            initAddAuthApp();\n            initCodeSwap();\n        }\n    };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTUsersAddAuthApp.init();\n});"]}