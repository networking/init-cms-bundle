{"version":3,"file":"plugin.js","names":["CKEDITOR","plugins","add","requires","isSupportedEnvironment","env","ie","edge","init","editor","getHtmlToInsert","text","tools","htmlDecodeAttr","link","dom","element","value","replace","match","config","autolink_urlRegex","setText","setAttribute","linkData","parseLinkAttributes","attributes","getLinkAttributes","isEmpty","set","setAttributes","removed","length","removeAttributes","removeAttribute","getOuterHtml","matchCallback","offset","parts","slice","split","query","matchLink","start","lastIndexOf","end","autolink_emailRegex","this","on","evt","data","dataTransfer","getTransferType","DATA_TRANSFER_INTERNAL","dataValue","indexOf","type","mode","autolink_commitKeystrokes","keyCode","matched","textMatch","getSelection","getRanges","selection","startContainer","getAscendant","selectRanges","range","insertHtml","webkit","insertionRange","newRange","createRange","setStartAfter","insertLink"],"sources":["autolink/plugin.js"],"mappings":";;;;CAKA,WACC,aAEAA,SAASC,QAAQC,IAAK,WAAY,CACjCC,SAAU,2BAEVC,uBAAwB,WACvB,OAAQJ,SAASK,IAAIC,IAAMN,SAASK,IAAIE,IACzC,EAEAC,KAAM,SAAUC,GA4Df,SAASC,EAAiBC,GAGzBA,EAAOX,SAASY,MAAMC,eAAgBF,GAEtC,IAAIG,EAAO,IAAId,SAASe,IAAIC,QAAS,KACpCC,EAAQN,EAAKO,QAAS,KAAM,OAE7BD,EAAQA,EAAME,MAAOnB,SAASoB,OAAOC,mBAAsBJ,EAAQ,UAAYA,EAE/EH,EAAKQ,QAASX,GACdG,EAAKS,aAAc,OAAQN,GAG3B,IAAIO,EAAWxB,SAASC,QAAQa,KAAKW,oBAAqBhB,EAAQK,GACjEY,EAAa1B,SAASC,QAAQa,KAAKa,kBAAmBlB,EAAQe,GAY/D,OAVMxB,SAASY,MAAMgB,QAASF,EAAWG,MACxCf,EAAKgB,cAAeJ,EAAWG,KAG3BH,EAAWK,QAAQC,QACvBlB,EAAKmB,iBAAkBP,EAAWK,SAGnCjB,EAAKoB,gBAAiB,uBAEfpB,EAAKqB,cACb,CAEA,SAASC,EAAezB,EAAM0B,GAC7B,IAAIC,EAAQ3B,EAAK4B,MAAO,EAAGF,GACxBG,MAAO,OACTC,EAAQH,EAAOA,EAAMN,OAAS,GAE/B,OAAMS,GAIAC,EAAWD,GAIV,CAAEE,MAAOhC,EAAKiC,YAAaH,GAASI,IAAKR,GAPxC,IAQT,CAEA,SAASK,EAAWD,GACnB,OAAOA,EAAMtB,MAAOV,EAAOW,OAAOC,oBACjCoB,EAAMtB,MAAOV,EAAOW,OAAO0B,oBAC7B,CA1GMC,KAAK3C,2BAIXK,EAAOuC,GAAI,SAAS,SAAUC,GAC7B,GAAKA,EAAIC,KAAKC,aAAaC,gBAAiB3C,IAAYT,SAASqD,uBAAjE,CAIA,IAAIH,EAAOD,EAAIC,KAAKI,UAGfJ,EAAKK,QAAS,MAAS,GAIvBb,EAAWQ,KACfD,EAAIC,KAAKI,UAAY5C,EAAiBwC,GACtCD,EAAIC,KAAKM,KAAO,OAXjB,CAaD,IAGA/C,EAAOuC,GAAI,OAAO,SAAUC,GAC3B,GAAqB,YAAhBxC,EAAOgD,OAA8G,GAAxFzD,SAASY,MAAM2C,QAAS9C,EAAOW,OAAOsC,0BAA2BT,EAAIC,KAAKS,SAA5G,CAIA,IAAIC,EAAU5D,SAASC,QAAQ4D,UAAU1C,MAAOV,EAAOqD,eAAeC,YAAa,GAAK3B,GAEnFwB,GAMN,SAAqBzC,GACpB,IAAI6C,EAAYvD,EAAOqD,eAEvB,GAAKE,EAAUD,YAAa,GAAIE,eAAeC,aAAc,KAAK,GACjE,OAMD,GAHAF,EAAUG,aAAc,CAAEhD,EAAMiD,QAChC3D,EAAO4D,WAAY3D,EAAiBS,EAAMR,MAAQ,SAE5CX,SAASK,IAAIiE,OAAS,CAG3B,IAAIC,EAAiBP,EAAUD,YAAa,GAC3CS,EAAW/D,EAAOgE,cAEnBD,EAASE,cAAeH,EAAeN,gBACvCD,EAAUG,aAAc,CAAEK,GAC3B,CACD,CAxBEG,CAAYf,EALb,CAQD,IAyED,IAsBD5D,SAASoB,OAAOsC,0BAA4B,CAAE,GAAI,IASlD1D,SAASoB,OAAOC,kBAAoB,iEAUpCrB,SAASoB,OAAO0B,oBAAsB,uIAErC,CAnKF","sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n( function() {\n\t'use strict';\n\n\tCKEDITOR.plugins.add( 'autolink', {\n\t\trequires: 'clipboard,textmatch,link',\n\n\t\tisSupportedEnvironment: function() {\n\t\t\treturn !CKEDITOR.env.ie || CKEDITOR.env.edge;\n\t\t},\n\n\t\tinit: function( editor ) {\n\n\t\t\t// (#2208)\n\t\t\tif ( !this.isSupportedEnvironment() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditor.on( 'paste', function( evt ) {\n\t\t\t\tif ( evt.data.dataTransfer.getTransferType( editor ) == CKEDITOR.DATA_TRANSFER_INTERNAL ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar data = evt.data.dataValue;\n\n\t\t\t\t// If we found \"<\" it means that most likely there's some tag and we don't want to touch it.\n\t\t\t\tif ( data.indexOf( '<' ) > -1 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( matchLink( data ) ) {\n\t\t\t\t\tevt.data.dataValue = getHtmlToInsert( data );\n\t\t\t\t\tevt.data.type = 'html';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// (#3156)\n\t\t\teditor.on( 'key', function( evt ) {\n\t\t\t\tif ( editor.mode !== 'wysiwyg' || CKEDITOR.tools.indexOf( editor.config.autolink_commitKeystrokes, evt.data.keyCode ) == -1 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar matched = CKEDITOR.plugins.textMatch.match( editor.getSelection().getRanges()[ 0 ], matchCallback );\n\n\t\t\t\tif ( matched ) {\n\t\t\t\t\tinsertLink( matched );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tfunction insertLink( match ) {\n\t\t\t\tvar selection = editor.getSelection();\n\t\t\t\t// We don't want to insert a link if selection is already inside another link.\n\t\t\t\tif ( selection.getRanges()[ 0 ].startContainer.getAscendant( 'a', true ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tselection.selectRanges( [ match.range ] );\n\t\t\t\teditor.insertHtml( getHtmlToInsert( match.text ), 'text' );\n\n\t\t\t\tif ( !CKEDITOR.env.webkit ) {\n\t\t\t\t\t// Make sure that link cannot be modified right after insertion\n\t\t\t\t\t// by moving selection at the end of inserted node.\n\t\t\t\t\tvar insertionRange = selection.getRanges()[ 0 ],\n\t\t\t\t\t\tnewRange = editor.createRange();\n\n\t\t\t\t\tnewRange.setStartAfter( insertionRange.startContainer );\n\t\t\t\t\tselection.selectRanges( [ newRange ] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction getHtmlToInsert( text ) {\n\t\t\t\t// URL will be encoded later on with link.setAttribute method. Avoid\n\t\t\t\t// double encoding of special characters (#4858).\n\t\t\t\ttext = CKEDITOR.tools.htmlDecodeAttr( text );\n\n\t\t\t\tvar link = new CKEDITOR.dom.element( 'a' ),\n\t\t\t\t\tvalue = text.replace( /\"/g, '%22' );\n\n\t\t\t\tvalue = value.match( CKEDITOR.config.autolink_urlRegex ) ? value : 'mailto:' + value;\n\n\t\t\t\tlink.setText( text );\n\t\t\t\tlink.setAttribute( 'href', value );\n\n\t\t\t\t// (#1824)\n\t\t\t\tvar linkData = CKEDITOR.plugins.link.parseLinkAttributes( editor, link ),\n\t\t\t\t\tattributes = CKEDITOR.plugins.link.getLinkAttributes( editor, linkData );\n\n\t\t\t\tif ( !CKEDITOR.tools.isEmpty( attributes.set ) ) {\n\t\t\t\t\tlink.setAttributes( attributes.set );\n\t\t\t\t}\n\n\t\t\t\tif ( attributes.removed.length ) {\n\t\t\t\t\tlink.removeAttributes( attributes.removed );\n\t\t\t\t}\n\n\t\t\t\tlink.removeAttribute( 'data-cke-saved-href' );\n\n\t\t\t\treturn link.getOuterHtml();\n\t\t\t}\n\n\t\t\tfunction matchCallback( text, offset ) {\n\t\t\t\tvar parts = text.slice( 0, offset )\n\t\t\t\t\t\t.split( /\\s+/ ),\n\t\t\t\t\tquery = parts[ parts.length - 1 ];\n\n\t\t\t\tif ( !query ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif ( !matchLink( query ) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn { start: text.lastIndexOf( query ), end: offset };\n\t\t\t}\n\n\t\t\tfunction matchLink( query ) {\n\t\t\t\treturn query.match( editor.config.autolink_urlRegex ) ||\n\t\t\t\t\tquery.match( editor.config.autolink_emailRegex );\n\t\t\t}\n\t\t}\n\t} );\n\n\t/**\n\t * The [Auto Link](https://ckeditor.com/cke4/addon/autolink) plugin keystrokes used to finish link completion.\n\t *\n\t * ```javascript\n\t * // Default configuration (13 = Enter, 32 = space).\n\t * config.autolink_commitKeystrokes = [ 9, 13 ];\n\t * ```\n\t *\n\t * Commit keystrokes can be also disabled by setting it to an empty array.\n\t *\n\t * ```javascript\n\t * // Disable autolink commit keystrokes.\n\t * config.autolink_commitKeystrokes = [];\n\t * ```\n\t *\n\t * @since 4.11.0\n\t * @cfg {Number/Number[]} [autolink_commitKeystrokes=[ 13, 32 ]]\n\t * @member CKEDITOR.config\n\t */\n\tCKEDITOR.config.autolink_commitKeystrokes = [ 13, 32 ];\n\n\t/**\n\t * Regex used by the [Auto Link](https://ckeditor.com/cke4/addon/autolink) plugin to match URL adresses.\n\t *\n\t * @cfg {RegExp} [autolink_urlRegex]\n\t * @since 4.11.0\n\t * @member CKEDITOR.config\n\t */\n\tCKEDITOR.config.autolink_urlRegex = /^(https?|ftp):\\/\\/(-\\.)?([^\\s\\/?\\.#]\\.?)+(\\/[^\\s]*)?[^\\s\\.,]$/i;\n\t// Regex by Imme Emosol.\n\n\t/**\n\t * Regex used by the [Auto Link](https://ckeditor.com/cke4/addon/autolink) plugin to match email adresses.\n\t *\n\t * @cfg {RegExp} [autolink_emailRegex]\n\t * @since 4.11.0\n\t * @member CKEDITOR.config\n\t */\n\tCKEDITOR.config.autolink_emailRegex = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\t// Regex by (https://html.spec.whatwg.org/#e-mail-state-(type=email)).\n} )();\n"]}