{"version":3,"file":"media-admin.js","names":["CMSMediaAdmin","tagDialog","tagDialogContainer","tagsContainer","treeData","canSort","canDelete","inlineEditUrl","initializeTagDialog","document","querySelector","bootstrap","Modal","height","width","show","submitAjaxTagForm","event","preventDefault","form","target","axios","post","action","FormData","axiosConfig","then","response","headers","data","result","hide","CMSAdmin","createInitCmsMessageBox","status","message","reloadSortTree","json","objectId","innerHTML","addEventListener","initSpecialFields","catch","error","console","log","setUpEditable","links","$","unbind","editable","toggle","url","name","display","value","icon","this","html","append","on","e","params","updateTreeData","newValue","r","parent","closest","currentUrl","URL","window","location","href","searchParams","set","jQuery","now","search","toString","history","replaceState","time","id","jstree","get_json","replaceDataName","length","setUpSortTree","nodes","n","node","text","li_attr","children","plugins","push","tree","types","default","file","dnd","check_while_dragging","is_draggable","a_attr","class","sort","a","b","a1","get_node","b1","toLowerCase","core","themes","variant","check_callback","operation","node_parent","node_position","more","cb","new_instance","flatTree","getFlatTree","updateTree","tagTree","dataset","updateTreeUrl","parentId","depth","flatArray","apply","parent_id","refresh","refreshList","filters","key","Object","fromEntries","entries","get","refreshListUrl","animate","scrollTop","refreshFsLightbox","init","KTUtil","body","active","batchActions","querySelectorAll","forEach","item","checked","classList","add","remove","createBatchDialog","stopPropagation","link","getAttribute","fetch","method","createTagDialog","noLoad","tagId","pk","undefined","page","sort_order","sortOrder","sort_by","sortBy","tags","MediaDropZone","constructor","element","context","provider","uploadForm","uniqueId","previewNode","previewTemplate","parentNode","removeChild","that","fileDropzone","Dropzone","changeButtonRow","duplicate","oneuploader","thumbnailWidth","thumbnailHeight","parallelUploads","previewsContainer","clickable","progress","style","xhr","formData","opacity","onclick","removeAllFiles","editButton","previewElement","createElement","className","defaults","delete","noop","options","teardown","settings","find","call","redraw_node","obj","deep","callback","force_draw","hasClass","tmp","cloneNode","delete_link","insertBefore","childNodes","onDOMContentLoaded","dropzone"],"sources":["media-admin.js"],"mappings":"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","sourcesContent":["var CMSMediaAdmin = function () {\n    var tagDialog;\n    var tagDialogContainer;\n    var tagsContainer = null;\n    var treeData = [];\n    var canSort = true;\n    var canDelete = true;\n    var inlineEditUrl = '';\n\n    var createTagDialog = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        initializeTagDialog();\n\n        let link = event.target;\n\n        if(!link.getAttribute('href')) {\n            link = link.closest('a');\n        }\n\n\n        fetch(link.getAttribute('href'), {\n            method: 'GET',\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest',\n            },\n        }).then(response => {\n            return response.text()\n        }).then(html => {\n            document.querySelector('#tag_dialog').querySelector('.modal-content').innerHTML = html;\n            tagDialog.show();\n\n            tagDialogContainer.querySelector('form').addEventListener('submit', submitAjaxTagForm)\n        })\n    }\n    const initializeTagDialog = () => {\n        if (!tagDialog) {\n            tagDialogContainer = document.querySelector('#tag_dialog'),\n            tagDialog = new bootstrap.Modal(tagDialogContainer, { height:'auto', width:650, show:false})\n        }\n    }\n    const submitAjaxTagForm = (event) => {\n        event.preventDefault();\n\n        let form = event.target;\n\n        axios.post(form.action, new FormData(form), axiosConfig).then((response) => {\n            if(response.headers['content-type'] === 'application/json') {\n                if(response.data.result === 'ok') {\n                    tagDialog.hide();\n                    CMSAdmin.createInitCmsMessageBox(response.data.status, response.data.message);\n                    reloadSortTree(response.data.json, response.data.objectId);\n                }\n            }\n            tagDialogContainer.querySelector('.modal-content').innerHTML = response.data;\n            tagDialogContainer.querySelector('form').addEventListener('submit', submitAjaxTagForm)\n            CMSAdmin.initSpecialFields()\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n    const setUpEditable = () => {\n        let links = $('.tag_link');\n        links.unbind();\n        links.editable({\n            'toggle': 'manual',\n            'url': inlineEditUrl,\n            'name': 'name',\n            'display': function (value, response){\n                if(typeof response !== \"undefined\"){\n                    var icon = $('.jstree-icon', this);\n                    $(this).html(icon).append(value);\n                }\n            }\n        }).on('contextmenu', function (e) {\n            $(this).editable('show');\n            e.preventDefault();\n        }).on('save', function (event, params) {\n            updateTreeData(params.newValue, params.response.objectId);\n        }).on('hidden', function (e, r) {\n            if (r === 'save') {\n                var list = $(this).parent().closest('ul');\n                const currentUrl = new URL(window.location.href);\n                let searchParams = currentUrl.searchParams;\n                searchParams.set('time', jQuery.now());\n                currentUrl.search = searchParams.toString();\n                history.replaceState({time: jQuery.now()}, 'updated', currentUrl.toString());\n            }\n        });\n\n\n\n    }\n\n    const updateTreeData = (value, id) => {\n        var data = $(tagsContainer).jstree(true).get_json();\n        replaceDataName(data, value, id, data.length -1);\n        setUpSortTree()\n\n    }\n\n    const replaceDataName = (nodes, name, id, n) => {\n        if(n < 0){\n            return nodes;\n        }\n        var node = nodes[n];\n\n        if(typeof node.data !== \"undefined\" && node.data['id'] === id){\n            node.text = name;\n            node.li_attr['data-tag-name'] = name;\n        }\n        if(node.children.length > 0){\n            replaceDataName(node.children, name, id, node.children.length-1);\n        }\n\n        return replaceDataName(nodes, name, id, n-1);\n    }\n\n    const setUpSortTree = () => {\n\n        let plugins = [\n            \"sort\",\n            \"types\",\n            \"unique\"\n        ];\n        if (canSort) {\n            plugins.push(\"dnd\");\n        }\n\n        if (canDelete) {\n            plugins.push(\"delete\");\n        }\n\n        let tree = $(tagsContainer)\n\n        treeData = tree.data('tagsJson')\n\n        inlineEditUrl = tree.data('inlineEditUrl')\n\n        tree.jstree({\n            \"types\": {\n                \"default\": {\n                    \"icon\": \"fa fa-folder text-primary fs-2x\"\n                },\n                \"file\": {\n                    \"icon\": \"fa fa-file text-primary fs-2x\"\n                }\n            },\n            \"plugins\": plugins,\n            \"dnd\":\n                {\n                    \"check_while_dragging\": true,\n                    \"is_draggable\": (node) => {\n                        return node[0].a_attr.class !== \"show_all_media\"\n                    },\n                },\n            \"sort\": function (a, b) {\n                let a1 = this.get_node(a);\n                let b1 = this.get_node(b);\n                if (a1.data['show_first']) {\n                    return -1;\n                }\n\n                if (b1.data['show_first']) {\n                    return 1;\n                }\n                return (a1.text.toLowerCase() > b1.text.toLowerCase()) ? 1 : -1;\n            },\n            'core':\n                {\n                    \"themes\": {\n                            \"variant\":   \"large\"\n                    },\n                    \"check_callback\": function (operation, node, node_parent, node_position, more) {\n                        // operation can be 'create_node', 'rename_node', 'delete_node', 'move_node' or 'copy_node'\n                        // in case of 'rename_node' node_position is filled with the new node name\n\n                        if (operation === \"move_node\") {\n                            if (node_parent.a_attr) {\n                                return node_parent.a_attr.class !== \"show_all_media\"; //only allow dropping inside nodes of type 'Parent'\n                            }\n                        }\n                        return true;\n                    }\n\n                    ,\n                    data: function (node, cb) {\n                        cb(treeData)\n                    }\n                }\n        })\n\n        tree.on('refresh.jstree', function () {\n            setUpEditable();\n        })\n            .on('move_node.jstree', function (e, data) {\n\n                let nodes = data.new_instance.get_json()\n                var flatTree = getFlatTree(nodes, 0, 0, nodes.length-1, [])\n\n                updateTree(flatTree)\n                setUpEditable();\n            })\n            .on('after_open.jstree', function () {\n                setUpEditable();\n            })\n            .on('redraw.jstree', function () {\n                setUpEditable();\n            })\n        ;\n        tree.on('dragover', function (e) {\n\n            // if(!data.instance.is_leaf(data.node)){\n            //     data.instance.open_node(data.node)\n            // }\n        })\n    }\n\n    const deleteTag = (event) => {\n        event.preventDefault();\n        let node = event.target;\n        axios.get(node.data.delete_link, {...axiosConfig}).then(function (response) {\n            listDialog.html(response.data);\n            listDialog.modal('show');\n        });\n    }\n    const updateTree = (tagTree) => {\n\n        axios.post(tagsContainer.dataset.updateTreeUrl, {\"nodes\": tagTree}, axiosConfig)\n            .then(function (response) {\n                var data = response.data;\n                CMSAdmin.createInitCmsMessageBox(data.status, data.message);\n                const currentUrl = new URL(window.location.href);\n\n                let searchParams = currentUrl.searchParams;\n                searchParams.set('time', jQuery.now());\n                currentUrl.search = searchParams.toString();\n\n                // sortList(list);\n                history.replaceState({time: jQuery.now()}, 'updated', currentUrl.toString());\n            });\n\n    }\n\n    const getFlatTree = (nodes, parentId, depth, n, flatArray) => {\n        if(n < 0){\n            return flatArray;\n        }\n        var node = nodes[n];\n\n        if(node.children.length > 0){\n            flatArray.push.apply(getFlatTree(node.children, node.data['id'], depth+1, node.children.length-1, flatArray))\n        }\n        flatArray.push({id: node.data['id'], parent_id: parentId, name: node.text, depth: depth});\n\n        return getFlatTree(nodes, parentId, depth, n-1, flatArray);\n    }\n\n    const reloadSortTree = (data, id) => {\n        treeData = data;\n        $(tagsContainer).jstree(true).refresh();\n    }\n\n    const refreshList = (filters) => {\n        if (!filters) {\n            filters = []\n        }\n\n        let data = new FormData( document.querySelector('#search-form'))\n\n        for(const key in filters){\n            data.append(key, filters[key])\n        }\n\n        filters = Object.fromEntries(data.entries());\n\n\n\n\n        axios.get(tagsContainer.dataset.refreshListUrl, {...axiosConfig, params: filters})\n            .then(function (response) {\n                $('#item_list').html(response.data);\n                $(\"html, body\").animate({scrollTop: $('#item_list').scrollTop()}, \"slow\");\n\n                refreshFsLightbox();\n        })\n    }\n\n    return {\n        init: function () {\n            tagsContainer = document.querySelector('#tagsContainer');\n            canSort = tagsContainer.dataset.canSort\n            canDelete = tagsContainer.dataset.canDelete;\n            setUpSortTree();\n            initializeTagDialog();\n\n            KTUtil.on(document.body, 'a.delete_check_box', 'click', function (e) {\n                e.preventDefault();\n                let active = false\n                let batchActions = document.querySelector('.batch-actions');\n\n                document.querySelectorAll('.delete_check_box').forEach(function (item) {\n                    if (item.checked) {\n                        item.classList.add('ui-selected');\n                        active = true;\n                    } else {\n                        item.classList.remove('ui-selected');\n                    }\n                })\n\n                if (active) {\n                    return batchActions.classList.remove('d-none');\n                }\n                batchActions.classList.add('d-none');batchActions\n            })\n\n            KTUtil.on(document.body, 'a.batch', 'click', function (e) {\n                e.preventDefault();\n                document.querySelector(\"input[name='action']\").value = e.target.dataset.value;\n                createBatchDialog(e);\n            })\n\n            KTUtil.on(document.body, 'a.tag-dialog-link', 'click', function (e) {\n                e.preventDefault();\n                createTagDialog(e);\n            })\n\n            KTUtil.on(document.body, '.tag_link', 'click', function (e, noLoad) {\n                e.preventDefault();\n                var tagId = e.target.dataset.pk;\n                if (noLoad === undefined) {\n                    refreshList({'filter[tags][value]': tagId});\n                }\n            })\n\n            KTUtil.on(document.body, '.show_all_media', 'click', function (e, noLoad) {\n                e.preventDefault();\n                refreshList({'filter[_page]':  1,'filter[tags][value]': ''});\n            })\n\n            KTUtil.on(document.body, 'a.media-pager', 'click', function (e) {\n                e.preventDefault();\n                let page = e.target.dataset.page;\n                let sort_order = e.target.dataset.sortOrder;\n                let sort_by = e.target.dataset.sortBy;\n                let tags = e.target.dataset.tags;\n                let name = e.target.dataset.name;\n                refreshList({\n                    'filter[_page]': page,\n                    'filter[_sort_order]': sort_order,\n                    'filter[_sort_by]':sort_by,\n                    'filter[tags][value]': tags,\n                    'filter[name][value]': name,\n                });\n            })\n\n        },\n        refreshList: function (filters) {\n            refreshList(filters);\n        }\n    }\n}();\n\nclass MediaDropZone{\n    constructor(element) {\n        this.element = element;\n        this.context = this.element.dataset.context;\n        this.provider = this.element.dataset.provider;\n        this.uploadForm = this.element.querySelector('#upload-form');\n        const uniqueId = this.element.dataset.uniqueId;\n\n        let previewNode = this.element.querySelector(\".dropzone-item\");\n        previewNode.id = \"\";\n        let previewTemplate = previewNode.parentNode.innerHTML;\n        previewNode.parentNode.removeChild(previewNode);\n\n        const that = this\n\n\n\n        let fileDropzone = new Dropzone(this.element, {\n            init: function () {\n                this.on(\"success\", function (file, response) {\n                    that.changeButtonRow(file, response);\n                    CMSMediaAdmin.refreshList();\n                });\n                this.on('error', function (file, response) {\n                    if (response.duplicate) {\n                        that.changeButtonRow(file, response);\n                    }\n                });\n            },\n            url: this.uploadForm.action, // Set the url\n            params: {context: this.context, provider: this.provider, oneuploader: true},\n            thumbnailWidth: 80,\n            thumbnailHeight: 80,\n            parallelUploads: 20,\n            previewTemplate: previewTemplate,\n            previewsContainer: \"#previews\", // Define the container to display the previews\n            clickable: \".fileinput-zone\" // Define the element that should be used as click trigger to select files.\n        });\n\n\n        // Update the total progress bar\n        fileDropzone.on(\"totaluploadprogress\", function (progress) {\n            document.querySelector(\"#total-progress .progress-bar\").style.width = progress + \"%\";\n        });\n\n        fileDropzone.on(\"sending\", function (file, xhr, formData) {\n            let tags = document.querySelector('#'+uniqueId+'_tags').value;\n\n            formData.append(\"tags\", tags);\n            // Show the total progress bar when upload starts\n            document.querySelector(\"#total-progress\").style.opacity = \"1\";\n        });\n\n        // Hide the total progress bar when nothing's uploading anymore\n        fileDropzone.on(\"queuecomplete\", function (progress) {\n            document.querySelector(\"#total-progress\").style.opacity = \"0\";\n            // CMSMediaAdmin.refreshList({});\n        });\n\n        // Setup the buttons for all transfers\n        // The \"add files\" button doesn't need to be setup because the config\n        // `clickable` has already been specified.\n        document.querySelector(\"#actions .cancel\").onclick = function () {\n            fileDropzone.removeAllFiles(true);\n        };\n    }\n    changeButtonRow(file, response) {\n\n        console.log(file)\n        let editButton = file.previewElement.querySelector(\"[data-dz-url]\")\n        editButton.href = response.url;\n        editButton.classList.remove('d-none');\n        file.previewElement.querySelector(\".progress\").classList.add('d-none');\n    }\n}\n\n(function ($, undefined) {\n    \"use strict\";\n    var link = document.createElement('a');\n    link.className = \"delete-tag dialog-link float-end \";\n    link.innerHTML = '<i class=\"la la-trash fs-2 mx-3\"></i>';\n\n    $.jstree.defaults.delete = $.noop;\n    $.jstree.plugins.delete = function (options, parent) {\n        this.teardown = function () {\n            if (this.settings.delete) {\n                this.element.find(\".delete-tag\").remove();\n            }\n            parent.teardown.call(this);\n        };\n        this.redraw_node = function (obj, deep, callback, force_draw) {\n\n            obj = parent.redraw_node.call(this, obj, deep, callback, force_draw);\n\n            if (this.get_node(obj).children && this.get_node(obj).children.length) {\n                return obj;\n            }\n\n            if (obj && $(obj).hasClass('sortable-tag')) {\n\n                var tmp = link.cloneNode(true);\n                var node = this.get_node(obj);\n                tmp.href = node.data.delete_link;\n                obj.insertBefore(tmp, obj.childNodes[2]);\n            }\n            return obj;\n        };\n    };\n})($);\n\nKTUtil.onDOMContentLoaded(function () {\n    CMSMediaAdmin.init();\n    document.body.addEventListener('shown.bs.modal', function (event) {\n        let dropzone = event.target.querySelector('#dropzone_area');\n        if (dropzone) {\n            new MediaDropZone(dropzone);\n        }\n    })\n});"]}