{"version":3,"file":"admin.js","names":["window","axiosConfig","headers","CMSAdmin","listDialog","createLinkDialog","event","preventDefault","stopPropagation","initializeDialog","link","target","getAttribute","closest","fetch","method","then","response","text","html","document","querySelector","innerHTML","show","bootstrap","Modal","height","width","initializeDatePickers","querySelectorAll","forEach","element","dateFormat","dataset","locale","dateLanguage","flatpickr","allowInput","initializeDateTimePickers","enableTime","time_24hr","init","KTUtil","on","body","slice","call","map","$","e","Event","bubbles","dispatchEvent","initSpecialFields","this","createDatePickers","createDateTimePickers","createSelect2","createCkeditors","createInitCmsMessageBox","status","message","toastr","options","closeButton","debug","newestOnTop","progressBar","positionClass","preventDuplicates","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","success","warning","error","info","id","config","JSON","parse","plugins","templates","styles","filebrowser","CKEDITOR","instances","destroy","key","value","Object","entries","addExternal","path","filename","params","Routing","generate","filebrowserUploadRouteParameters","filebrowserImageBrowseRouteParameters","filebrowserBrowseRouteParameters","disableAutoInline","replace","evt","editor","getData","setAttribute","jQuery","fn","select2","dir","minimumResultsForSearch","Infinity","hasAttribute","parentEl","menu","KTMenu","item","removeAttribute","CMSMediaEntity","MediaEntity","constructor","fieldId","field","preview","createModal","listLink","addLink","removeLink","objectId","selectMediaEventId","searchMediaEventId","updatePreview","bind","removeListeners","initialize","addEventListener","createListDialog","removeSelectedElement","addMediaDialog","modal","createElement","appendChild","dialogContainer","dialog","setupTree","tagsContainer","tree","selected","treeData","data","jstree","types","default","icon","file","sort","a","b","a1","get_node","b1","toLowerCase","core","themes","variant","node","cb","off","addMediaEventId","addSearchListeners","clickLinkInDialog","searchMedia","addUploadListeners","uploadMedia","listURL","classList","contains","selectMedia","tagId","pk","refreshList","url","filters","FormData","append","set","fromEntries","axios","get","refreshListUrl","hide","form","URL","action","searchParams","toString","addURL","formData","post","result","catch","previewUrl","onDOMContentLoaded","module","exports"],"sources":["admin.js"],"mappings":"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","sourcesContent":["window.axiosConfig  = {headers: {'X-Requested-With': 'XMLHttpRequest'}}\n\n\n// Class definition\nvar CMSAdmin = function () {\n    // Define shared variables\n    var listDialog\n\n\n\n    var initLinkDialogs = () => {\n        KTUtil.on(document.body, '.dialog-link', 'click', createLinkDialog);\n    };\n\n    var createLinkDialog = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        initializeDialog();\n\n        let link = event.target;\n\n        if(!link.getAttribute('href')) {\n            link = link.closest('a');\n        }\n\n\n        fetch(link.getAttribute('href'), {\n            method: 'GET',\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest',\n            },\n        }).then(response => {\n            return response.text()\n        }).then(html => {\n            document.querySelector('#list_dialog').querySelector('.modal-content').innerHTML = html;\n            listDialog.show();\n        })\n    }\n\n    var initializeDialog = () => {\n        if (!listDialog) {\n            listDialog = new bootstrap.Modal(document.querySelector('#list_dialog', { height:'auto', width:650, show:false}))\n        }\n    }\n\n    var initializeDatePickers = () => {\n        document.querySelectorAll('[data-provider=\"datepicker\"]').forEach((element) => {\n            let dateFormat = element.dataset.dateFormat\n            let locale = element.dataset.dateLanguage\n            flatpickr(element, {dateFormat: dateFormat, locale: locale, allowInput: true})\n        })\n    }\n\n    var initializeDateTimePickers = () => {\n        document.querySelectorAll('[data-provider=\"datetimepicker\"]').forEach((element) => {\n            let dateFormat = element.dataset.dateFormat\n            let locale = element.dataset.dateLanguage\n            flatpickr(element, {\n                dateFormat: dateFormat,\n                locale: locale,\n                enableTime: true,\n                allowInput: true,\n                time_24hr: true})\n        })\n\n    }\n\n    var initSelect2 = () => {\n        var elements = [].slice.call(document.querySelectorAll('[data-control=\"select2\"], [data-kt-select2=\"true\"]'));\n\n        elements.map(function (element) {\n            $(element).on('select2:select', function (e) {\n                let event = new Event('change', {bubbles: true});\n                element.dispatchEvent(event);\n            });\n        });\n\n    }\n\n    var initCkeditor = () => {\n        var elements = [].slice.call(document.querySelectorAll('[data-control=\"ckeditor\"], [data-kt-ckeditor=\"true\"]'));\n        elements.map(function (element) {\n            if (element.getAttribute(\"data-kt-initialized\") === \"1\") {\n                return;\n            }\n            let id = element.getAttribute(\"id\")\n\n            let config = JSON.parse(element.dataset.config)\n            let plugins = JSON.parse(element.dataset.plugins)\n            let templates = JSON.parse(element.dataset.templates)\n            let styles = JSON.parse(element.dataset.styles)\n            let filebrowser = JSON.parse(element.dataset.filebrowser)\n            if (CKEDITOR.instances[id]) {\n                CKEDITOR.instances[id].destroy(true);\n                delete CKEDITOR.instances[id];\n            }\n\n            for(const [key, value] of Object.entries(plugins)) {\n\n                CKEDITOR.plugins.addExternal(key, value.path, value.filename);\n            }\n            let params = {}\n            for(const [key, value] of Object.entries(config)) {\n                if(key === 'filebrowserBrowseRoute') {\n                    params['filebrowserBrowseUrl'] = Routing.generate(value, config.filebrowserBrowseRouteParameters)\n                    continue;\n                }\n\n                if(key === 'filebrowserImageBrowseRoute') {\n                    params['filebrowserImageBrowseUrl'] = Routing.generate(value, config.filebrowserImageBrowseRouteParameters)\n                    continue;\n                }\n\n                if(key === 'filebrowserUploadRoute') {\n                    params['filebrowserUploadUrl'] = Routing.generate(value, config.filebrowserUploadRouteParameters)\n                    continue;\n                }\n\n                if(key === 'filebrowserBrowseRouteParameters' || key === 'filebrowserImageBrowseRouteParameters' || key === 'filebrowserUploadRouteParameters') {\n                    continue\n                }\n\n                params[key] = value\n            }\n            CKEDITOR.disableAutoInline = true\n            let editor = CKEDITOR.replace(id,params);\n\n            editor.on( 'change', function( evt ) {\n                element.value = evt.editor.getData();\n            });\n\n\n            element.setAttribute(\"data-kt-initialized\", \"1\");\n        });\n\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initLinkDialogs();\n            initializeDatePickers();\n            initializeDateTimePickers();\n            initSelect2();\n\n        },\n        initSpecialFields: function () {\n            this.createDatePickers();\n            this.createDateTimePickers();\n            this.createSelect2()\n            this.createCkeditors()\n        },\n        createInitCmsMessageBox: function(status, message) {\n            toastr.options = {\n                \"closeButton\": true,\n                \"debug\": false,\n                \"newestOnTop\": true,\n                \"progressBar\": false,\n                \"positionClass\": \"toastr-top-right\",\n                \"preventDuplicates\": true,\n                \"onclick\": null,\n                \"showDuration\": \"2000\",\n                \"hideDuration\": \"1000\",\n                \"timeOut\": \"5000\",\n                \"extendedTimeOut\": \"1000\",\n                \"showEasing\": \"linear\",\n                \"hideEasing\": \"linear\",\n                \"showMethod\": \"fadeIn\",\n                \"hideMethod\": \"fadeOut\"\n            };\n            if (status === 'success') {\n                toastr.success(message);\n            } else if (status === 'warning') {\n                toastr.warning(message);\n            } else if (status === 'error' || status === 'danger') {\n                toastr.error(message);\n            } else {\n                toastr.info(message);\n            }\n        },\n        createDatePickers: function () {\n            initializeDatePickers();\n        },\n        createDateTimePickers: function () {\n            initializeDateTimePickers();\n        },\n        createCkeditors: function () {\n            initCkeditor()\n        },\n        createSelect2: function () {\n            // Check if jQuery included\n            if (typeof jQuery == 'undefined') {\n                return;\n            }\n\n            // Check if select2 included\n            if (typeof $.fn.select2 === 'undefined') {\n                return;\n            }\n\n            var elements = [].slice.call(document.querySelectorAll('[data-control=\"select2\"], [data-kt-select2=\"true\"]'));\n\n\n\n            elements.map(function (element) {\n                if (element.getAttribute(\"data-kt-initialized\") === \"1\") {\n                    return;\n                }\n\n                var options = {\n                    dir: document.body.getAttribute('direction')\n                };\n\n                if (element.getAttribute('data-hide-search') === 'true') {\n                    options.minimumResultsForSearch = Infinity;\n                }\n\n                $(element).select2(options);\n                $(element).on('select2:select', function (e) {\n                    let event = new Event('change', {bubbles: true});\n                    element.dispatchEvent(event);\n                });\n\n                // Handle Select2's KTMenu parent case\n                if (element.hasAttribute('data-dropdown-parent') && element.hasAttribute('multiple')) {\n                    var parentEl = document.querySelector(element.getAttribute('data-dropdown-parent'));\n\n                    if (parentEl && parentEl.hasAttribute(\"data-kt-menu\")) {\n                        var menu = new KTMenu(parentEl);\n\n                        if (menu) {\n                            $(element).on('select2:unselect', function (e) {\n                                element.setAttribute(\"data-multiple-unselect\", \"1\");\n                            });\n\n                            menu.on(\"kt.menu.dropdown.hide\", function(item) {\n                                if (element.getAttribute(\"data-multiple-unselect\") === \"1\") {\n                                    element.removeAttribute(\"data-multiple-unselect\");\n                                    return false;\n                                }\n                            });\n                        }\n                    }\n                }\n                element.setAttribute(\"data-kt-initialized\", \"1\");\n            });\n        }\n    }\n}();\n\nvar CMSMediaEntity = function () {\n\n    var initMediaEntity = () => {\n        document.querySelectorAll('.media-entity').forEach((element) => {\n            let mediaEntity = new MediaEntity(element)\n\n        })\n    }\n\n    return {\n        init: function () {\n            initMediaEntity();\n        }\n    }\n}();\n\nclass MediaEntity{\n    constructor(element) {\n        this.element = element\n        this.id = element.dataset.fieldId\n        this.field = document.querySelector('#' + this.id)\n        this.preview = element.querySelector('#field_widget_' + this.id)\n        this.createModal()\n\n        this.listLink = element.querySelector('#field_list_link_' + this.id)\n        this.addLink = element.querySelector('#field_add_link_' + this.id)\n        this.removeLink = element.querySelector('#field_remove_link_' + this.id)\n        this.objectId = this.field.value\n        this.selectMediaEventId = ''\n        this.searchMediaEventId = ''\n\n        KTUtil.on(this.element, '#' + this.id, 'change', this.updatePreview.bind(this));\n        KTUtil.on(this.element, '#field_dialog_' + this.id, 'hide.bs.modal', this.removeListeners.bind(this));\n\n        this.initialize()\n\n    }\n    initialize() {\n        this.listLink.addEventListener('click', this.createListDialog.bind(this))\n        this.removeLink.addEventListener('click', this.removeSelectedElement.bind(this))\n        this.addLink.addEventListener('click', this.addMediaDialog.bind(this))\n    }\n    createModal() {\n        let modal = document.createElement('div')\n        modal.setAttribute('id', 'field_dialog_' + this.id)\n        modal.setAttribute('class', 'modal fade')\n        modal.setAttribute('tabindex', '-1')\n        modal.setAttribute('role', 'dialog')\n        modal.setAttribute('aria-hidden', 'true')\n        modal.innerHTML = `\n            <div class=\"modal-dialog mw-1000px\" role=\"document\">\n                <div class=\"modal-content\">\n                </div>\n            </div>\n        `\n        document.body.appendChild(modal)\n\n        this.dialogContainer = document.querySelector('#field_dialog_' + this.id)\n        this.dialog = new bootstrap.Modal(this.dialogContainer, {height:'auto', width:650, show:false})\n\n    }\n    setupTree(){\n        let tagsContainer = this.dialogContainer.querySelector('#tagsContainer')\n        let tree = $(tagsContainer)\n\n        var lastLink = tagsContainer.dataset.selected\n\n        let treeData = tree.data('tagsJson')\n        tree.jstree({\n            \"types\": {\n                \"default\": {\n                    \"icon\": \"fa fa-folder text-primary fs-2x\"\n                },\n                \"file\": {\n                    \"icon\": \"fa fa-file text-primary fs-2x\"\n                }\n            },\n            \"plugins\": [\"sort\", \"types\"],\n            \"sort\": function (a, b) {\n                let a1 = this.get_node(a);\n                let b1 = this.get_node(b);\n                if (a1.data['show_first']) {\n                    return -1;\n                }\n\n                if (b1.data['show_first']) {\n                    return 1;\n                }\n                return (a1.text.toLowerCase() > b1.text.toLowerCase()) ? 1 : -1;\n            },\n            'core':\n                {\n                    \"themes\": {\n                        \"variant\":   \"large\"\n                    },\n                    data: function (node, cb) {\n                        cb(treeData)\n                    }\n                }\n        })\n    }\n    removeListeners() {\n        KTUtil.off(this.dialogContainer, 'click', this.selectMediaEventId);\n        KTUtil.off(this.dialogContainer, 'submit', this.searchMediaEventId);\n        KTUtil.off(this.dialogContainer, 'submit', this.addMediaEventId);\n    }\n    addSearchListeners() {\n        if(this.selectMediaEventId !== '') {\n            this.removeListeners()\n        }\n        this.selectMediaEventId = KTUtil.on(this.dialogContainer, 'a', 'click', this.clickLinkInDialog.bind(this));\n        this.searchMediaEventId = KTUtil.on(this.dialogContainer, 'form', 'submit', this.searchMedia.bind(this));\n    }\n    addUploadListeners() {\n        if(this.addMediaEventId !== '') {\n            this.removeListeners()\n        }\n        this.addMediaEventId = KTUtil.on(this.dialogContainer, 'form', 'submit', this.uploadMedia.bind(this));\n    }\n    createListDialog(event) {\n        event.preventDefault();\n        let listURL = this.listLink.getAttribute('href')\n        fetch(listURL, {\n            method: 'GET',\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest',\n            }\n        }).then(response => {\n            return response.text()\n        }).then(html => {\n\n            this.dialogContainer.querySelector('.modal-content').innerHTML = html;\n            this.addSearchListeners()\n            this.dialog.show();\n            this.setupTree()\n        })\n    }\n    clickLinkInDialog(event) {\n        event.preventDefault();\n        let link = event.target\n        if(link.classList.contains('select-media')) {\n            this.selectMedia(event)\n            return\n        }\n        if(link.classList.contains('tag_link')) {\n            var tagId = link.dataset.pk;\n            this.refreshList({'filter[tags][value]': tagId});\n            return\n        }\n        if(link.classList.contains('show_all_media')) {\n            this.refreshList({'filter[tags][value]': ''});\n            return\n        }\n        let url = link.getAttribute('href')\n\n        if(!url || url === '#') {\n            return\n        }\n\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest',\n            }\n        }).then(response => {\n            return response.text()\n        }).then(html => {\n            this.dialogContainer.querySelector('.modal-content').innerHTML = html;\n            this.addSearchListeners()\n            this.setupTree()\n        })\n    }\n    refreshList(filters) {\n        if (!filters) {\n            filters = {}\n        }\n        let data = new FormData( document.querySelector('#search-form'))\n        for(const key in filters){\n            data.append(key, filters[key])\n        }\n\n        data.set('galleryMode', 'gallery'),\n\n        filters = Object.fromEntries(data.entries());\n\n        axios.get(tagsContainer.dataset.refreshListUrl, {...axiosConfig, params: filters})\n            .then(function (response) {\n                document.querySelector('#item_list').innerHTML = response.data\n            })\n    }\n    selectMedia(event) {\n        event.preventDefault();\n        let link = event.target\n        this.field.value = link.dataset.objectId\n        this.updatePreview()\n        this.dialog.hide();\n    }\n    searchMedia(event) {\n        event.preventDefault();\n        let form = event.target\n        let url = new URL(form.action)\n        let data = Object.fromEntries(new FormData(form).entries());\n        for(const key in data){\n            url.searchParams.append(key, data[key])\n        }\n\n        axios.get(url.toString(), {...axiosConfig})\n            .then(response => {\n\n            this.dialogContainer.querySelector('.modal-content').innerHTML = response.data;\n            this.addSearchListeners()\n            this.setupTree()\n        })\n\n    }\n    addMediaDialog(event) {\n        event.preventDefault();\n        let addURL = this.addLink.getAttribute('href')\n        fetch(addURL, {\n            method: 'GET',\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest',\n            }\n        }).then(response => {\n            return response.text()\n        }).then(html => {\n\n            this.dialogContainer.querySelector('.modal-content').innerHTML = html;\n            this.addUploadListeners()\n            this.dialog.show();\n        })\n    }\n    uploadMedia(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        let form = event.target\n\n        let formData = new FormData(form);\n\n        axios.post(form.getAttribute('action'), formData, {...axiosConfig})\n            .then(response => {\n                if(response.data.result == 'ok') {\n                    this.field.value = response.data.objectId\n                    this.updatePreview()\n                    this.dialog.hide()\n                    return\n                }\n                this.dialogContainer.querySelector('.modal-content').innerHTML = response.data;\n                this.addUploadListeners()\n                CMSAdmin.createSelect2()\n\n            }).catch(error => {\n\n        })\n    }\n    updatePreview() {\n        if(this.field.value === '') {\n            this.preview.innerHTML = ''\n            return\n        }\n        let url = this.preview.dataset.previewUrl.replace('__objectId__', this.field.value)\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest',\n            }\n        }).then(response => {\n            return response.text()\n        }).then(html => {\n            this.preview.innerHTML = html;\n        })\n    }\n    removeSelectedElement(event) {\n        event.preventDefault();\n\n        if(this.field.options){\n            var elements = this.field.options;\n\n            elements.map((element) => {\n                element.selected = false;\n            })\n        }\n        this.field.value = ''\n        this.updatePreview()\n    }\n}\n\n\n\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    CMSAdmin.init();\n    CMSMediaEntity.init();\n    window.CMSAdmin = CMSAdmin;\n\n    document.body.addEventListener('shown.bs.modal', function (e) {\n        CMSAdmin.initSpecialFields()\n    })\n    document.body.addEventListener('fields:added', function (e) {\n        CMSAdmin.initSpecialFields()\n    })\n});\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = CMSAdmin;\n}"]}