/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/admin-theme/plugins/custom/sortablejs/sortablejs.bundle.js":
/*!***************************************************************************!*\
  !*** ./assets/admin-theme/plugins/custom/sortablejs/sortablejs.bundle.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**!
 * Sortable 1.15.0
 * @author	RubaXa   <trash@rubaxa.org>
 * @author	owenm    <owen23355@gmail.com>
 * @license MIT
 */
function ownKeys(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,n)}return o}function _objectSpread2(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(Object(o),!0).forEach((function(e){_defineProperty(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):ownKeys(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function _typeof(t){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_typeof(t)}function _defineProperty(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}function _extends(){return _extends=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var o=arguments[e];for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(t[n]=o[n])}return t},_extends.apply(this,arguments)}function _objectWithoutPropertiesLoose(t,e){if(null==t)return{};var o,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)o=l[n],e.indexOf(o)>=0||(r[o]=t[o]);return r}function _objectWithoutProperties(t,e){if(null==t)return{};var o,n,r=_objectWithoutPropertiesLoose(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)o=l[n],e.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(t,o)&&(r[o]=t[o])}return r}function _toConsumableArray(t){return _arrayWithoutHoles(t)||_iterableToArray(t)||_unsupportedIterableToArray(t)||_nonIterableSpread()}function _arrayWithoutHoles(t){if(Array.isArray(t))return _arrayLikeToArray(t)}function _iterableToArray(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}function _unsupportedIterableToArray(t,e){if(t){if("string"==typeof t)return _arrayLikeToArray(t,e);var o=Object.prototype.toString.call(t).slice(8,-1);return"Object"===o&&t.constructor&&(o=t.constructor.name),"Map"===o||"Set"===o?Array.from(t):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?_arrayLikeToArray(t,e):void 0}}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var o=0,n=new Array(e);o<e;o++)n[o]=t[o];return n}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var version="1.15.0";function userAgent(t){if("undefined"!=typeof window&&window.navigator)return!!navigator.userAgent.match(t)}var IE11OrLess=userAgent(/(?:Trident.*rv[ :]?11\.|msie|iemobile|Windows Phone)/i),Edge=userAgent(/Edge/i),FireFox=userAgent(/firefox/i),Safari=userAgent(/safari/i)&&!userAgent(/chrome/i)&&!userAgent(/android/i),IOS=userAgent(/iP(ad|od|hone)/i),ChromeForAndroid=userAgent(/chrome/i)&&userAgent(/android/i),captureMode={capture:!1,passive:!1};function on(t,e,o){t.addEventListener(e,o,!IE11OrLess&&captureMode)}function off(t,e,o){t.removeEventListener(e,o,!IE11OrLess&&captureMode)}function matches(t,e){if(e){if(">"===e[0]&&(e=e.substring(1)),t)try{if(t.matches)return t.matches(e);if(t.msMatchesSelector)return t.msMatchesSelector(e);if(t.webkitMatchesSelector)return t.webkitMatchesSelector(e)}catch(t){return!1}return!1}}function getParentOrHost(t){return t.host&&t!==document&&t.host.nodeType?t.host:t.parentNode}function closest(t,e,o,n){if(t){o=o||document;do{if(null!=e&&(">"===e[0]?t.parentNode===o&&matches(t,e):matches(t,e))||n&&t===o)return t;if(t===o)break}while(t=getParentOrHost(t))}return null}var _throttleTimeout,R_SPACE=/\s+/g;function toggleClass(t,e,o){if(t&&e)if(t.classList)t.classList[o?"add":"remove"](e);else{var n=(" "+t.className+" ").replace(R_SPACE," ").replace(" "+e+" "," ");t.className=(n+(o?" "+e:"")).replace(R_SPACE," ")}}function css(t,e,o){var n=t&&t.style;if(n){if(void 0===o)return document.defaultView&&document.defaultView.getComputedStyle?o=document.defaultView.getComputedStyle(t,""):t.currentStyle&&(o=t.currentStyle),void 0===e?o:o[e];e in n||-1!==e.indexOf("webkit")||(e="-webkit-"+e),n[e]=o+("string"==typeof o?"":"px")}}function matrix(t,e){var o="";if("string"==typeof t)o=t;else do{var n=css(t,"transform");n&&"none"!==n&&(o=n+" "+o)}while(!e&&(t=t.parentNode));var r=window.DOMMatrix||window.WebKitCSSMatrix||window.CSSMatrix||window.MSCSSMatrix;return r&&new r(o)}function find(t,e,o){if(t){var n=t.getElementsByTagName(e),r=0,l=n.length;if(o)for(;r<l;r++)o(n[r],r);return n}return[]}function getWindowScrollingElement(){var t=document.scrollingElement;return t||document.documentElement}function getRect(t,e,o,n,r){if(t.getBoundingClientRect||t===window){var l,a,i,s,c,d,u;if(t!==window&&t.parentNode&&t!==getWindowScrollingElement()?(a=(l=t.getBoundingClientRect()).top,i=l.left,s=l.bottom,c=l.right,d=l.height,u=l.width):(a=0,i=0,s=window.innerHeight,c=window.innerWidth,d=window.innerHeight,u=window.innerWidth),(e||o)&&t!==window&&(r=r||t.parentNode,!IE11OrLess))do{if(r&&r.getBoundingClientRect&&("none"!==css(r,"transform")||o&&"static"!==css(r,"position"))){var g=r.getBoundingClientRect();a-=g.top+parseInt(css(r,"border-top-width")),i-=g.left+parseInt(css(r,"border-left-width")),s=a+l.height,c=i+l.width;break}}while(r=r.parentNode);if(n&&t!==window){var h=matrix(r||t),p=h&&h.a,f=h&&h.d;h&&(s=(a/=f)+(d/=f),c=(i/=p)+(u/=p))}return{top:a,left:i,bottom:s,right:c,width:u,height:d}}}function isScrolledPast(t,e,o){for(var n=getParentAutoScrollElement(t,!0),r=getRect(t)[e];n;){var l=getRect(n)[o];if(!("top"===o||"left"===o?r>=l:r<=l))return n;if(n===getWindowScrollingElement())break;n=getParentAutoScrollElement(n,!1)}return!1}function getChild(t,e,o,n){for(var r=0,l=0,a=t.children;l<a.length;){if("none"!==a[l].style.display&&a[l]!==Sortable.ghost&&(n||a[l]!==Sortable.dragged)&&closest(a[l],o.draggable,t,!1)){if(r===e)return a[l];r++}l++}return null}function lastChild(t,e){for(var o=t.lastElementChild;o&&(o===Sortable.ghost||"none"===css(o,"display")||e&&!matches(o,e));)o=o.previousElementSibling;return o||null}function index(t,e){var o=0;if(!t||!t.parentNode)return-1;for(;t=t.previousElementSibling;)"TEMPLATE"===t.nodeName.toUpperCase()||t===Sortable.clone||e&&!matches(t,e)||o++;return o}function getRelativeScrollOffset(t){var e=0,o=0,n=getWindowScrollingElement();if(t)do{var r=matrix(t),l=r.a,a=r.d;e+=t.scrollLeft*l,o+=t.scrollTop*a}while(t!==n&&(t=t.parentNode));return[e,o]}function indexOfObject(t,e){for(var o in t)if(t.hasOwnProperty(o))for(var n in e)if(e.hasOwnProperty(n)&&e[n]===t[o][n])return Number(o);return-1}function getParentAutoScrollElement(t,e){if(!t||!t.getBoundingClientRect)return getWindowScrollingElement();var o=t,n=!1;do{if(o.clientWidth<o.scrollWidth||o.clientHeight<o.scrollHeight){var r=css(o);if(o.clientWidth<o.scrollWidth&&("auto"==r.overflowX||"scroll"==r.overflowX)||o.clientHeight<o.scrollHeight&&("auto"==r.overflowY||"scroll"==r.overflowY)){if(!o.getBoundingClientRect||o===document.body)return getWindowScrollingElement();if(n||e)return o;n=!0}}}while(o=o.parentNode);return getWindowScrollingElement()}function extend(t,e){if(t&&e)for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o]);return t}function isRectEqual(t,e){return Math.round(t.top)===Math.round(e.top)&&Math.round(t.left)===Math.round(e.left)&&Math.round(t.height)===Math.round(e.height)&&Math.round(t.width)===Math.round(e.width)}function throttle(t,e){return function(){if(!_throttleTimeout){var o=arguments;1===o.length?t.call(this,o[0]):t.apply(this,o),_throttleTimeout=setTimeout((function(){_throttleTimeout=void 0}),e)}}}function cancelThrottle(){clearTimeout(_throttleTimeout),_throttleTimeout=void 0}function scrollBy(t,e,o){t.scrollLeft+=e,t.scrollTop+=o}function clone(t){var e=window.Polymer,o=window.jQuery||window.Zepto;return e&&e.dom?e.dom(t).cloneNode(!0):o?o(t).clone(!0)[0]:t.cloneNode(!0)}function setRect(t,e){css(t,"position","absolute"),css(t,"top",e.top),css(t,"left",e.left),css(t,"width",e.width),css(t,"height",e.height)}function unsetRect(t){css(t,"position",""),css(t,"top",""),css(t,"left",""),css(t,"width",""),css(t,"height","")}var expando="Sortable"+(new Date).getTime();function AnimationStateManager(){var t,e=[];return{captureAnimationState:function(){(e=[],this.options.animation)&&[].slice.call(this.el.children).forEach((function(t){if("none"!==css(t,"display")&&t!==Sortable.ghost){e.push({target:t,rect:getRect(t)});var o=_objectSpread2({},e[e.length-1].rect);if(t.thisAnimationDuration){var n=matrix(t,!0);n&&(o.top-=n.f,o.left-=n.e)}t.fromRect=o}}))},addAnimationState:function(t){e.push(t)},removeAnimationState:function(t){e.splice(indexOfObject(e,{target:t}),1)},animateAll:function(o){var n=this;if(!this.options.animation)return clearTimeout(t),void("function"==typeof o&&o());var r=!1,l=0;e.forEach((function(t){var e=0,o=t.target,a=o.fromRect,i=getRect(o),s=o.prevFromRect,c=o.prevToRect,d=t.rect,u=matrix(o,!0);u&&(i.top-=u.f,i.left-=u.e),o.toRect=i,o.thisAnimationDuration&&isRectEqual(s,i)&&!isRectEqual(a,i)&&(d.top-i.top)/(d.left-i.left)==(a.top-i.top)/(a.left-i.left)&&(e=calculateRealTime(d,s,c,n.options)),isRectEqual(i,a)||(o.prevFromRect=a,o.prevToRect=i,e||(e=n.options.animation),n.animate(o,d,i,e)),e&&(r=!0,l=Math.max(l,e),clearTimeout(o.animationResetTimer),o.animationResetTimer=setTimeout((function(){o.animationTime=0,o.prevFromRect=null,o.fromRect=null,o.prevToRect=null,o.thisAnimationDuration=null}),e),o.thisAnimationDuration=e)})),clearTimeout(t),r?t=setTimeout((function(){"function"==typeof o&&o()}),l):"function"==typeof o&&o(),e=[]},animate:function(t,e,o,n){if(n){css(t,"transition",""),css(t,"transform","");var r=matrix(this.el),l=r&&r.a,a=r&&r.d,i=(e.left-o.left)/(l||1),s=(e.top-o.top)/(a||1);t.animatingX=!!i,t.animatingY=!!s,css(t,"transform","translate3d("+i+"px,"+s+"px,0)"),this.forRepaintDummy=repaint(t),css(t,"transition","transform "+n+"ms"+(this.options.easing?" "+this.options.easing:"")),css(t,"transform","translate3d(0,0,0)"),"number"==typeof t.animated&&clearTimeout(t.animated),t.animated=setTimeout((function(){css(t,"transition",""),css(t,"transform",""),t.animated=!1,t.animatingX=!1,t.animatingY=!1}),n)}}}}function repaint(t){return t.offsetWidth}function calculateRealTime(t,e,o,n){return Math.sqrt(Math.pow(e.top-t.top,2)+Math.pow(e.left-t.left,2))/Math.sqrt(Math.pow(e.top-o.top,2)+Math.pow(e.left-o.left,2))*n.animation}var plugins=[],defaults={initializeByDefault:!0},PluginManager={mount:function(t){for(var e in defaults)defaults.hasOwnProperty(e)&&!(e in t)&&(t[e]=defaults[e]);plugins.forEach((function(e){if(e.pluginName===t.pluginName)throw"Sortable: Cannot mount plugin ".concat(t.pluginName," more than once")})),plugins.push(t)},pluginEvent:function(t,e,o){var n=this;this.eventCanceled=!1,o.cancel=function(){n.eventCanceled=!0};var r=t+"Global";plugins.forEach((function(n){e[n.pluginName]&&(e[n.pluginName][r]&&e[n.pluginName][r](_objectSpread2({sortable:e},o)),e.options[n.pluginName]&&e[n.pluginName][t]&&e[n.pluginName][t](_objectSpread2({sortable:e},o)))}))},initializePlugins:function(t,e,o,n){for(var r in plugins.forEach((function(n){var r=n.pluginName;if(t.options[r]||n.initializeByDefault){var l=new n(t,e,t.options);l.sortable=t,l.options=t.options,t[r]=l,_extends(o,l.defaults)}})),t.options)if(t.options.hasOwnProperty(r)){var l=this.modifyOption(t,r,t.options[r]);void 0!==l&&(t.options[r]=l)}},getEventProperties:function(t,e){var o={};return plugins.forEach((function(n){"function"==typeof n.eventProperties&&_extends(o,n.eventProperties.call(e[n.pluginName],t))})),o},modifyOption:function(t,e,o){var n;return plugins.forEach((function(r){t[r.pluginName]&&r.optionListeners&&"function"==typeof r.optionListeners[e]&&(n=r.optionListeners[e].call(t[r.pluginName],o))})),n}};function dispatchEvent(t){var e=t.sortable,o=t.rootEl,n=t.name,r=t.targetEl,l=t.cloneEl,a=t.toEl,i=t.fromEl,s=t.oldIndex,c=t.newIndex,d=t.oldDraggableIndex,u=t.newDraggableIndex,g=t.originalEvent,h=t.putSortable,p=t.extraEventProperties;if(e=e||o&&o[expando]){var f,m=e.options,v="on"+n.charAt(0).toUpperCase()+n.substr(1);!window.CustomEvent||IE11OrLess||Edge?(f=document.createEvent("Event")).initEvent(n,!0,!0):f=new CustomEvent(n,{bubbles:!0,cancelable:!0}),f.to=a||o,f.from=i||o,f.item=r||o,f.clone=l,f.oldIndex=s,f.newIndex=c,f.oldDraggableIndex=d,f.newDraggableIndex=u,f.originalEvent=g,f.pullMode=h?h.lastPutMode:void 0;var E=_objectSpread2(_objectSpread2({},p),PluginManager.getEventProperties(n,e));for(var b in E)f[b]=E[b];o&&o.dispatchEvent(f),m[v]&&m[v].call(e,f)}}var _excluded=["evt"],pluginEvent=function(t,e){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=o.evt,r=_objectWithoutProperties(o,_excluded);PluginManager.pluginEvent.bind(Sortable)(t,e,_objectSpread2({dragEl:dragEl,parentEl:parentEl,ghostEl:ghostEl,rootEl:rootEl,nextEl:nextEl,lastDownEl:lastDownEl,cloneEl:cloneEl,cloneHidden:cloneHidden,dragStarted:moved,putSortable:putSortable,activeSortable:Sortable.active,originalEvent:n,oldIndex:oldIndex,oldDraggableIndex:oldDraggableIndex,newIndex:newIndex,newDraggableIndex:newDraggableIndex,hideGhostForTarget:_hideGhostForTarget,unhideGhostForTarget:_unhideGhostForTarget,cloneNowHidden:function(){cloneHidden=!0},cloneNowShown:function(){cloneHidden=!1},dispatchSortableEvent:function(t){_dispatchEvent({sortable:e,name:t,originalEvent:n})}},r))};function _dispatchEvent(t){dispatchEvent(_objectSpread2({putSortable:putSortable,cloneEl:cloneEl,targetEl:dragEl,rootEl:rootEl,oldIndex:oldIndex,oldDraggableIndex:oldDraggableIndex,newIndex:newIndex,newDraggableIndex:newDraggableIndex},t))}var dragEl,parentEl,ghostEl,rootEl,nextEl,lastDownEl,cloneEl,cloneHidden,oldIndex,newIndex,oldDraggableIndex,newDraggableIndex,activeGroup,putSortable,tapEvt,touchEvt,lastDx,lastDy,tapDistanceLeft,tapDistanceTop,moved,lastTarget,lastDirection,targetMoveDistance,ghostRelativeParent,awaitingDragStarted=!1,ignoreNextClick=!1,sortables=[],pastFirstInvertThresh=!1,isCircumstantialInvert=!1,ghostRelativeParentInitialScroll=[],_silent=!1,savedInputChecked=[],documentExists="undefined"!=typeof document,PositionGhostAbsolutely=IOS,CSSFloatProperty=Edge||IE11OrLess?"cssFloat":"float",supportDraggable=documentExists&&!ChromeForAndroid&&!IOS&&"draggable"in document.createElement("div"),supportCssPointerEvents=function(){if(documentExists){if(IE11OrLess)return!1;var t=document.createElement("x");return t.style.cssText="pointer-events:auto","auto"===t.style.pointerEvents}}(),_detectDirection=function(t,e){var o=css(t),n=parseInt(o.width)-parseInt(o.paddingLeft)-parseInt(o.paddingRight)-parseInt(o.borderLeftWidth)-parseInt(o.borderRightWidth),r=getChild(t,0,e),l=getChild(t,1,e),a=r&&css(r),i=l&&css(l),s=a&&parseInt(a.marginLeft)+parseInt(a.marginRight)+getRect(r).width,c=i&&parseInt(i.marginLeft)+parseInt(i.marginRight)+getRect(l).width;if("flex"===o.display)return"column"===o.flexDirection||"column-reverse"===o.flexDirection?"vertical":"horizontal";if("grid"===o.display)return o.gridTemplateColumns.split(" ").length<=1?"vertical":"horizontal";if(r&&a.float&&"none"!==a.float){var d="left"===a.float?"left":"right";return!l||"both"!==i.clear&&i.clear!==d?"horizontal":"vertical"}return r&&("block"===a.display||"flex"===a.display||"table"===a.display||"grid"===a.display||s>=n&&"none"===o[CSSFloatProperty]||l&&"none"===o[CSSFloatProperty]&&s+c>n)?"vertical":"horizontal"},_dragElInRowColumn=function(t,e,o){var n=o?t.left:t.top,r=o?t.right:t.bottom,l=o?t.width:t.height,a=o?e.left:e.top,i=o?e.right:e.bottom,s=o?e.width:e.height;return n===a||r===i||n+l/2===a+s/2},_detectNearestEmptySortable=function(t,e){var o;return sortables.some((function(n){var r=n[expando].options.emptyInsertThreshold;if(r&&!lastChild(n)){var l=getRect(n),a=t>=l.left-r&&t<=l.right+r,i=e>=l.top-r&&e<=l.bottom+r;return a&&i?o=n:void 0}})),o},_prepareGroup=function(t){function e(t,o){return function(n,r,l,a){var i=n.options.group.name&&r.options.group.name&&n.options.group.name===r.options.group.name;if(null==t&&(o||i))return!0;if(null==t||!1===t)return!1;if(o&&"clone"===t)return t;if("function"==typeof t)return e(t(n,r,l,a),o)(n,r,l,a);var s=(o?n:r).options.group.name;return!0===t||"string"==typeof t&&t===s||t.join&&t.indexOf(s)>-1}}var o={},n=t.group;n&&"object"==_typeof(n)||(n={name:n}),o.name=n.name,o.checkPull=e(n.pull,!0),o.checkPut=e(n.put),o.revertClone=n.revertClone,t.group=o},_hideGhostForTarget=function(){!supportCssPointerEvents&&ghostEl&&css(ghostEl,"display","none")},_unhideGhostForTarget=function(){!supportCssPointerEvents&&ghostEl&&css(ghostEl,"display","")};documentExists&&!ChromeForAndroid&&document.addEventListener("click",(function(t){if(ignoreNextClick)return t.preventDefault(),t.stopPropagation&&t.stopPropagation(),t.stopImmediatePropagation&&t.stopImmediatePropagation(),ignoreNextClick=!1,!1}),!0);var nearestEmptyInsertDetectEvent=function(t){if(dragEl){t=t.touches?t.touches[0]:t;var e=_detectNearestEmptySortable(t.clientX,t.clientY);if(e){var o={};for(var n in t)t.hasOwnProperty(n)&&(o[n]=t[n]);o.target=o.rootEl=e,o.preventDefault=void 0,o.stopPropagation=void 0,e[expando]._onDragOver(o)}}},_checkOutsideTargetEl=function(t){dragEl&&dragEl.parentNode[expando]._isOutsideThisEl(t.target)};function Sortable(t,e){if(!t||!t.nodeType||1!==t.nodeType)throw"Sortable: `el` must be an HTMLElement, not ".concat({}.toString.call(t));this.el=t,this.options=e=_extends({},e),t[expando]=this;var o={group:null,sort:!0,disabled:!1,store:null,handle:null,draggable:/^[uo]l$/i.test(t.nodeName)?">li":">*",swapThreshold:1,invertSwap:!1,invertedSwapThreshold:null,removeCloneOnHide:!0,direction:function(){return _detectDirection(t,this.options)},ghostClass:"sortable-ghost",chosenClass:"sortable-chosen",dragClass:"sortable-drag",ignore:"a, img",filter:null,preventOnFilter:!0,animation:0,easing:null,setData:function(t,e){t.setData("Text",e.textContent)},dropBubble:!1,dragoverBubble:!1,dataIdAttr:"data-id",delay:0,delayOnTouchOnly:!1,touchStartThreshold:(Number.parseInt?Number:window).parseInt(window.devicePixelRatio,10)||1,forceFallback:!1,fallbackClass:"sortable-fallback",fallbackOnBody:!1,fallbackTolerance:0,fallbackOffset:{x:0,y:0},supportPointer:!1!==Sortable.supportPointer&&"PointerEvent"in window&&!Safari,emptyInsertThreshold:5};for(var n in PluginManager.initializePlugins(this,t,o),o)!(n in e)&&(e[n]=o[n]);for(var r in _prepareGroup(e),this)"_"===r.charAt(0)&&"function"==typeof this[r]&&(this[r]=this[r].bind(this));this.nativeDraggable=!e.forceFallback&&supportDraggable,this.nativeDraggable&&(this.options.touchStartThreshold=1),e.supportPointer?on(t,"pointerdown",this._onTapStart):(on(t,"mousedown",this._onTapStart),on(t,"touchstart",this._onTapStart)),this.nativeDraggable&&(on(t,"dragover",this),on(t,"dragenter",this)),sortables.push(this.el),e.store&&e.store.get&&this.sort(e.store.get(this)||[]),_extends(this,AnimationStateManager())}function _globalDragOver(t){t.dataTransfer&&(t.dataTransfer.dropEffect="move"),t.cancelable&&t.preventDefault()}function _onMove(t,e,o,n,r,l,a,i){var s,c,d=t[expando],u=d.options.onMove;return!window.CustomEvent||IE11OrLess||Edge?(s=document.createEvent("Event")).initEvent("move",!0,!0):s=new CustomEvent("move",{bubbles:!0,cancelable:!0}),s.to=e,s.from=t,s.dragged=o,s.draggedRect=n,s.related=r||e,s.relatedRect=l||getRect(e),s.willInsertAfter=i,s.originalEvent=a,t.dispatchEvent(s),u&&(c=u.call(d,s,a)),c}function _disableDraggable(t){t.draggable=!1}function _unsilent(){_silent=!1}function _ghostIsFirst(t,e,o){var n=getRect(getChild(o.el,0,o.options,!0));return e?t.clientX<n.left-10||t.clientY<n.top&&t.clientX<n.right:t.clientY<n.top-10||t.clientY<n.bottom&&t.clientX<n.left}function _ghostIsLast(t,e,o){var n=getRect(lastChild(o.el,o.options.draggable));return e?t.clientX>n.right+10||t.clientX<=n.right&&t.clientY>n.bottom&&t.clientX>=n.left:t.clientX>n.right&&t.clientY>n.top||t.clientX<=n.right&&t.clientY>n.bottom+10}function _getSwapDirection(t,e,o,n,r,l,a,i){var s=n?t.clientY:t.clientX,c=n?o.height:o.width,d=n?o.top:o.left,u=n?o.bottom:o.right,g=!1;if(!a)if(i&&targetMoveDistance<c*r){if(!pastFirstInvertThresh&&(1===lastDirection?s>d+c*l/2:s<u-c*l/2)&&(pastFirstInvertThresh=!0),pastFirstInvertThresh)g=!0;else if(1===lastDirection?s<d+targetMoveDistance:s>u-targetMoveDistance)return-lastDirection}else if(s>d+c*(1-r)/2&&s<u-c*(1-r)/2)return _getInsertDirection(e);return(g=g||a)&&(s<d+c*l/2||s>u-c*l/2)?s>d+c/2?1:-1:0}function _getInsertDirection(t){return index(dragEl)<index(t)?1:-1}function _generateId(t){for(var e=t.tagName+t.className+t.src+t.href+t.textContent,o=e.length,n=0;o--;)n+=e.charCodeAt(o);return n.toString(36)}function _saveInputCheckedState(t){savedInputChecked.length=0;for(var e=t.getElementsByTagName("input"),o=e.length;o--;){var n=e[o];n.checked&&savedInputChecked.push(n)}}function _nextTick(t){return setTimeout(t,0)}function _cancelNextTick(t){return clearTimeout(t)}Sortable.prototype={constructor:Sortable,_isOutsideThisEl:function(t){this.el.contains(t)||t===this.el||(lastTarget=null)},_getDirection:function(t,e){return"function"==typeof this.options.direction?this.options.direction.call(this,t,e,dragEl):this.options.direction},_onTapStart:function(t){if(t.cancelable){var e=this,o=this.el,n=this.options,r=n.preventOnFilter,l=t.type,a=t.touches&&t.touches[0]||t.pointerType&&"touch"===t.pointerType&&t,i=(a||t).target,s=t.target.shadowRoot&&(t.path&&t.path[0]||t.composedPath&&t.composedPath()[0])||i,c=n.filter;if(_saveInputCheckedState(o),!dragEl&&!(/mousedown|pointerdown/.test(l)&&0!==t.button||n.disabled)&&!s.isContentEditable&&(this.nativeDraggable||!Safari||!i||"SELECT"!==i.tagName.toUpperCase())&&!((i=closest(i,n.draggable,o,!1))&&i.animated||lastDownEl===i)){if(oldIndex=index(i),oldDraggableIndex=index(i,n.draggable),"function"==typeof c){if(c.call(this,t,i,this))return _dispatchEvent({sortable:e,rootEl:s,name:"filter",targetEl:i,toEl:o,fromEl:o}),pluginEvent("filter",e,{evt:t}),void(r&&t.cancelable&&t.preventDefault())}else if(c&&(c=c.split(",").some((function(n){if(n=closest(s,n.trim(),o,!1))return _dispatchEvent({sortable:e,rootEl:n,name:"filter",targetEl:i,fromEl:o,toEl:o}),pluginEvent("filter",e,{evt:t}),!0}))))return void(r&&t.cancelable&&t.preventDefault());n.handle&&!closest(s,n.handle,o,!1)||this._prepareDragStart(t,a,i)}}},_prepareDragStart:function(t,e,o){var n,r=this,l=r.el,a=r.options,i=l.ownerDocument;if(o&&!dragEl&&o.parentNode===l){var s=getRect(o);if(rootEl=l,parentEl=(dragEl=o).parentNode,nextEl=dragEl.nextSibling,lastDownEl=o,activeGroup=a.group,Sortable.dragged=dragEl,tapEvt={target:dragEl,clientX:(e||t).clientX,clientY:(e||t).clientY},tapDistanceLeft=tapEvt.clientX-s.left,tapDistanceTop=tapEvt.clientY-s.top,this._lastX=(e||t).clientX,this._lastY=(e||t).clientY,dragEl.style["will-change"]="all",n=function(){pluginEvent("delayEnded",r,{evt:t}),Sortable.eventCanceled?r._onDrop():(r._disableDelayedDragEvents(),!FireFox&&r.nativeDraggable&&(dragEl.draggable=!0),r._triggerDragStart(t,e),_dispatchEvent({sortable:r,name:"choose",originalEvent:t}),toggleClass(dragEl,a.chosenClass,!0))},a.ignore.split(",").forEach((function(t){find(dragEl,t.trim(),_disableDraggable)})),on(i,"dragover",nearestEmptyInsertDetectEvent),on(i,"mousemove",nearestEmptyInsertDetectEvent),on(i,"touchmove",nearestEmptyInsertDetectEvent),on(i,"mouseup",r._onDrop),on(i,"touchend",r._onDrop),on(i,"touchcancel",r._onDrop),FireFox&&this.nativeDraggable&&(this.options.touchStartThreshold=4,dragEl.draggable=!0),pluginEvent("delayStart",this,{evt:t}),!a.delay||a.delayOnTouchOnly&&!e||this.nativeDraggable&&(Edge||IE11OrLess))n();else{if(Sortable.eventCanceled)return void this._onDrop();on(i,"mouseup",r._disableDelayedDrag),on(i,"touchend",r._disableDelayedDrag),on(i,"touchcancel",r._disableDelayedDrag),on(i,"mousemove",r._delayedDragTouchMoveHandler),on(i,"touchmove",r._delayedDragTouchMoveHandler),a.supportPointer&&on(i,"pointermove",r._delayedDragTouchMoveHandler),r._dragStartTimer=setTimeout(n,a.delay)}}},_delayedDragTouchMoveHandler:function(t){var e=t.touches?t.touches[0]:t;Math.max(Math.abs(e.clientX-this._lastX),Math.abs(e.clientY-this._lastY))>=Math.floor(this.options.touchStartThreshold/(this.nativeDraggable&&window.devicePixelRatio||1))&&this._disableDelayedDrag()},_disableDelayedDrag:function(){dragEl&&_disableDraggable(dragEl),clearTimeout(this._dragStartTimer),this._disableDelayedDragEvents()},_disableDelayedDragEvents:function(){var t=this.el.ownerDocument;off(t,"mouseup",this._disableDelayedDrag),off(t,"touchend",this._disableDelayedDrag),off(t,"touchcancel",this._disableDelayedDrag),off(t,"mousemove",this._delayedDragTouchMoveHandler),off(t,"touchmove",this._delayedDragTouchMoveHandler),off(t,"pointermove",this._delayedDragTouchMoveHandler)},_triggerDragStart:function(t,e){e=e||"touch"==t.pointerType&&t,!this.nativeDraggable||e?this.options.supportPointer?on(document,"pointermove",this._onTouchMove):on(document,e?"touchmove":"mousemove",this._onTouchMove):(on(dragEl,"dragend",this),on(rootEl,"dragstart",this._onDragStart));try{document.selection?_nextTick((function(){document.selection.empty()})):window.getSelection().removeAllRanges()}catch(t){}},_dragStarted:function(t,e){if(awaitingDragStarted=!1,rootEl&&dragEl){pluginEvent("dragStarted",this,{evt:e}),this.nativeDraggable&&on(document,"dragover",_checkOutsideTargetEl);var o=this.options;!t&&toggleClass(dragEl,o.dragClass,!1),toggleClass(dragEl,o.ghostClass,!0),Sortable.active=this,t&&this._appendGhost(),_dispatchEvent({sortable:this,name:"start",originalEvent:e})}else this._nulling()},_emulateDragOver:function(){if(touchEvt){this._lastX=touchEvt.clientX,this._lastY=touchEvt.clientY,_hideGhostForTarget();for(var t=document.elementFromPoint(touchEvt.clientX,touchEvt.clientY),e=t;t&&t.shadowRoot&&(t=t.shadowRoot.elementFromPoint(touchEvt.clientX,touchEvt.clientY))!==e;)e=t;if(dragEl.parentNode[expando]._isOutsideThisEl(t),e)do{if(e[expando]){if(e[expando]._onDragOver({clientX:touchEvt.clientX,clientY:touchEvt.clientY,target:t,rootEl:e})&&!this.options.dragoverBubble)break}t=e}while(e=e.parentNode);_unhideGhostForTarget()}},_onTouchMove:function(t){if(tapEvt){var e=this.options,o=e.fallbackTolerance,n=e.fallbackOffset,r=t.touches?t.touches[0]:t,l=ghostEl&&matrix(ghostEl,!0),a=ghostEl&&l&&l.a,i=ghostEl&&l&&l.d,s=PositionGhostAbsolutely&&ghostRelativeParent&&getRelativeScrollOffset(ghostRelativeParent),c=(r.clientX-tapEvt.clientX+n.x)/(a||1)+(s?s[0]-ghostRelativeParentInitialScroll[0]:0)/(a||1),d=(r.clientY-tapEvt.clientY+n.y)/(i||1)+(s?s[1]-ghostRelativeParentInitialScroll[1]:0)/(i||1);if(!Sortable.active&&!awaitingDragStarted){if(o&&Math.max(Math.abs(r.clientX-this._lastX),Math.abs(r.clientY-this._lastY))<o)return;this._onDragStart(t,!0)}if(ghostEl){l?(l.e+=c-(lastDx||0),l.f+=d-(lastDy||0)):l={a:1,b:0,c:0,d:1,e:c,f:d};var u="matrix(".concat(l.a,",").concat(l.b,",").concat(l.c,",").concat(l.d,",").concat(l.e,",").concat(l.f,")");css(ghostEl,"webkitTransform",u),css(ghostEl,"mozTransform",u),css(ghostEl,"msTransform",u),css(ghostEl,"transform",u),lastDx=c,lastDy=d,touchEvt=r}t.cancelable&&t.preventDefault()}},_appendGhost:function(){if(!ghostEl){var t=this.options.fallbackOnBody?document.body:rootEl,e=getRect(dragEl,!0,PositionGhostAbsolutely,!0,t),o=this.options;if(PositionGhostAbsolutely){for(ghostRelativeParent=t;"static"===css(ghostRelativeParent,"position")&&"none"===css(ghostRelativeParent,"transform")&&ghostRelativeParent!==document;)ghostRelativeParent=ghostRelativeParent.parentNode;ghostRelativeParent!==document.body&&ghostRelativeParent!==document.documentElement?(ghostRelativeParent===document&&(ghostRelativeParent=getWindowScrollingElement()),e.top+=ghostRelativeParent.scrollTop,e.left+=ghostRelativeParent.scrollLeft):ghostRelativeParent=getWindowScrollingElement(),ghostRelativeParentInitialScroll=getRelativeScrollOffset(ghostRelativeParent)}toggleClass(ghostEl=dragEl.cloneNode(!0),o.ghostClass,!1),toggleClass(ghostEl,o.fallbackClass,!0),toggleClass(ghostEl,o.dragClass,!0),css(ghostEl,"transition",""),css(ghostEl,"transform",""),css(ghostEl,"box-sizing","border-box"),css(ghostEl,"margin",0),css(ghostEl,"top",e.top),css(ghostEl,"left",e.left),css(ghostEl,"width",e.width),css(ghostEl,"height",e.height),css(ghostEl,"opacity","0.8"),css(ghostEl,"position",PositionGhostAbsolutely?"absolute":"fixed"),css(ghostEl,"zIndex","100000"),css(ghostEl,"pointerEvents","none"),Sortable.ghost=ghostEl,t.appendChild(ghostEl),css(ghostEl,"transform-origin",tapDistanceLeft/parseInt(ghostEl.style.width)*100+"% "+tapDistanceTop/parseInt(ghostEl.style.height)*100+"%")}},_onDragStart:function(t,e){var o=this,n=t.dataTransfer,r=o.options;pluginEvent("dragStart",this,{evt:t}),Sortable.eventCanceled?this._onDrop():(pluginEvent("setupClone",this),Sortable.eventCanceled||((cloneEl=clone(dragEl)).removeAttribute("id"),cloneEl.draggable=!1,cloneEl.style["will-change"]="",this._hideClone(),toggleClass(cloneEl,this.options.chosenClass,!1),Sortable.clone=cloneEl),o.cloneId=_nextTick((function(){pluginEvent("clone",o),Sortable.eventCanceled||(o.options.removeCloneOnHide||rootEl.insertBefore(cloneEl,dragEl),o._hideClone(),_dispatchEvent({sortable:o,name:"clone"}))})),!e&&toggleClass(dragEl,r.dragClass,!0),e?(ignoreNextClick=!0,o._loopId=setInterval(o._emulateDragOver,50)):(off(document,"mouseup",o._onDrop),off(document,"touchend",o._onDrop),off(document,"touchcancel",o._onDrop),n&&(n.effectAllowed="move",r.setData&&r.setData.call(o,n,dragEl)),on(document,"drop",o),css(dragEl,"transform","translateZ(0)")),awaitingDragStarted=!0,o._dragStartId=_nextTick(o._dragStarted.bind(o,e,t)),on(document,"selectstart",o),moved=!0,Safari&&css(document.body,"user-select","none"))},_onDragOver:function(t){var e,o,n,r,l=this.el,a=t.target,i=this.options,s=i.group,c=Sortable.active,d=activeGroup===s,u=i.sort,g=putSortable||c,h=this,p=!1;if(!_silent){if(void 0!==t.preventDefault&&t.cancelable&&t.preventDefault(),a=closest(a,i.draggable,l,!0),A("dragOver"),Sortable.eventCanceled)return p;if(dragEl.contains(t.target)||a.animated&&a.animatingX&&a.animatingY||h._ignoreWhileAnimating===a)return M(!1);if(ignoreNextClick=!1,c&&!i.disabled&&(d?u||(n=parentEl!==rootEl):putSortable===this||(this.lastPutMode=activeGroup.checkPull(this,c,dragEl,t))&&s.checkPut(this,c,dragEl,t))){if(r="vertical"===this._getDirection(t,a),e=getRect(dragEl),A("dragOverValid"),Sortable.eventCanceled)return p;if(n)return parentEl=rootEl,P(),this._hideClone(),A("revert"),Sortable.eventCanceled||(nextEl?rootEl.insertBefore(dragEl,nextEl):rootEl.appendChild(dragEl)),M(!0);var f=lastChild(l,i.draggable);if(!f||_ghostIsLast(t,r,this)&&!f.animated){if(f===dragEl)return M(!1);if(f&&l===t.target&&(a=f),a&&(o=getRect(a)),!1!==_onMove(rootEl,l,dragEl,e,a,o,t,!!a))return P(),f&&f.nextSibling?l.insertBefore(dragEl,f.nextSibling):l.appendChild(dragEl),parentEl=l,R(),M(!0)}else if(f&&_ghostIsFirst(t,r,this)){var m=getChild(l,0,i,!0);if(m===dragEl)return M(!1);if(o=getRect(a=m),!1!==_onMove(rootEl,l,dragEl,e,a,o,t,!1))return P(),l.insertBefore(dragEl,m),parentEl=l,R(),M(!0)}else if(a.parentNode===l){o=getRect(a);var v,E,b,S=dragEl.parentNode!==l,D=!_dragElInRowColumn(dragEl.animated&&dragEl.toRect||e,a.animated&&a.toRect||o,r),w=r?"top":"left",_=isScrolledPast(a,"top","top")||isScrolledPast(dragEl,"top","top"),y=_?_.scrollTop:void 0;if(lastTarget!==a&&(E=o[w],pastFirstInvertThresh=!1,isCircumstantialInvert=!D&&i.invertSwap||S),0!==(v=_getSwapDirection(t,a,o,r,D?1:i.swapThreshold,null==i.invertedSwapThreshold?i.swapThreshold:i.invertedSwapThreshold,isCircumstantialInvert,lastTarget===a))){var x=index(dragEl);do{x-=v,b=parentEl.children[x]}while(b&&("none"===css(b,"display")||b===ghostEl))}if(0===v||b===a)return M(!1);lastTarget=a,lastDirection=v;var C=a.nextElementSibling,I=!1,T=_onMove(rootEl,l,dragEl,e,a,o,t,I=1===v);if(!1!==T)return 1!==T&&-1!==T||(I=1===T),_silent=!0,setTimeout(_unsilent,30),P(),I&&!C?l.appendChild(dragEl):a.parentNode.insertBefore(dragEl,I?C:a),_&&scrollBy(_,0,y-_.scrollTop),parentEl=dragEl.parentNode,void 0===E||isCircumstantialInvert||(targetMoveDistance=Math.abs(E-getRect(a)[w])),R(),M(!0)}if(l.contains(dragEl))return M(!1)}return!1}function A(i,s){pluginEvent(i,h,_objectSpread2({evt:t,isOwner:d,axis:r?"vertical":"horizontal",revert:n,dragRect:e,targetRect:o,canSort:u,fromSortable:g,target:a,completed:M,onMove:function(o,n){return _onMove(rootEl,l,dragEl,e,o,getRect(o),t,n)},changed:R},s))}function P(){A("dragOverAnimationCapture"),h.captureAnimationState(),h!==g&&g.captureAnimationState()}function M(e){return A("dragOverCompleted",{insertion:e}),e&&(d?c._hideClone():c._showClone(h),h!==g&&(toggleClass(dragEl,putSortable?putSortable.options.ghostClass:c.options.ghostClass,!1),toggleClass(dragEl,i.ghostClass,!0)),putSortable!==h&&h!==Sortable.active?putSortable=h:h===Sortable.active&&putSortable&&(putSortable=null),g===h&&(h._ignoreWhileAnimating=a),h.animateAll((function(){A("dragOverAnimationComplete"),h._ignoreWhileAnimating=null})),h!==g&&(g.animateAll(),g._ignoreWhileAnimating=null)),(a===dragEl&&!dragEl.animated||a===l&&!a.animated)&&(lastTarget=null),i.dragoverBubble||t.rootEl||a===document||(dragEl.parentNode[expando]._isOutsideThisEl(t.target),!e&&nearestEmptyInsertDetectEvent(t)),!i.dragoverBubble&&t.stopPropagation&&t.stopPropagation(),p=!0}function R(){newIndex=index(dragEl),newDraggableIndex=index(dragEl,i.draggable),_dispatchEvent({sortable:h,name:"change",toEl:l,newIndex:newIndex,newDraggableIndex:newDraggableIndex,originalEvent:t})}},_ignoreWhileAnimating:null,_offMoveEvents:function(){off(document,"mousemove",this._onTouchMove),off(document,"touchmove",this._onTouchMove),off(document,"pointermove",this._onTouchMove),off(document,"dragover",nearestEmptyInsertDetectEvent),off(document,"mousemove",nearestEmptyInsertDetectEvent),off(document,"touchmove",nearestEmptyInsertDetectEvent)},_offUpEvents:function(){var t=this.el.ownerDocument;off(t,"mouseup",this._onDrop),off(t,"touchend",this._onDrop),off(t,"pointerup",this._onDrop),off(t,"touchcancel",this._onDrop),off(document,"selectstart",this)},_onDrop:function(t){var e=this.el,o=this.options;newIndex=index(dragEl),newDraggableIndex=index(dragEl,o.draggable),pluginEvent("drop",this,{evt:t}),parentEl=dragEl&&dragEl.parentNode,newIndex=index(dragEl),newDraggableIndex=index(dragEl,o.draggable),Sortable.eventCanceled||(awaitingDragStarted=!1,isCircumstantialInvert=!1,pastFirstInvertThresh=!1,clearInterval(this._loopId),clearTimeout(this._dragStartTimer),_cancelNextTick(this.cloneId),_cancelNextTick(this._dragStartId),this.nativeDraggable&&(off(document,"drop",this),off(e,"dragstart",this._onDragStart)),this._offMoveEvents(),this._offUpEvents(),Safari&&css(document.body,"user-select",""),css(dragEl,"transform",""),t&&(moved&&(t.cancelable&&t.preventDefault(),!o.dropBubble&&t.stopPropagation()),ghostEl&&ghostEl.parentNode&&ghostEl.parentNode.removeChild(ghostEl),(rootEl===parentEl||putSortable&&"clone"!==putSortable.lastPutMode)&&cloneEl&&cloneEl.parentNode&&cloneEl.parentNode.removeChild(cloneEl),dragEl&&(this.nativeDraggable&&off(dragEl,"dragend",this),_disableDraggable(dragEl),dragEl.style["will-change"]="",moved&&!awaitingDragStarted&&toggleClass(dragEl,putSortable?putSortable.options.ghostClass:this.options.ghostClass,!1),toggleClass(dragEl,this.options.chosenClass,!1),_dispatchEvent({sortable:this,name:"unchoose",toEl:parentEl,newIndex:null,newDraggableIndex:null,originalEvent:t}),rootEl!==parentEl?(newIndex>=0&&(_dispatchEvent({rootEl:parentEl,name:"add",toEl:parentEl,fromEl:rootEl,originalEvent:t}),_dispatchEvent({sortable:this,name:"remove",toEl:parentEl,originalEvent:t}),_dispatchEvent({rootEl:parentEl,name:"sort",toEl:parentEl,fromEl:rootEl,originalEvent:t}),_dispatchEvent({sortable:this,name:"sort",toEl:parentEl,originalEvent:t})),putSortable&&putSortable.save()):newIndex!==oldIndex&&newIndex>=0&&(_dispatchEvent({sortable:this,name:"update",toEl:parentEl,originalEvent:t}),_dispatchEvent({sortable:this,name:"sort",toEl:parentEl,originalEvent:t})),Sortable.active&&(null!=newIndex&&-1!==newIndex||(newIndex=oldIndex,newDraggableIndex=oldDraggableIndex),_dispatchEvent({sortable:this,name:"end",toEl:parentEl,originalEvent:t}),this.save())))),this._nulling()},_nulling:function(){pluginEvent("nulling",this),rootEl=dragEl=parentEl=ghostEl=nextEl=cloneEl=lastDownEl=cloneHidden=tapEvt=touchEvt=moved=newIndex=newDraggableIndex=oldIndex=oldDraggableIndex=lastTarget=lastDirection=putSortable=activeGroup=Sortable.dragged=Sortable.ghost=Sortable.clone=Sortable.active=null,savedInputChecked.forEach((function(t){t.checked=!0})),savedInputChecked.length=lastDx=lastDy=0},handleEvent:function(t){switch(t.type){case"drop":case"dragend":this._onDrop(t);break;case"dragenter":case"dragover":dragEl&&(this._onDragOver(t),_globalDragOver(t));break;case"selectstart":t.preventDefault()}},toArray:function(){for(var t,e=[],o=this.el.children,n=0,r=o.length,l=this.options;n<r;n++)closest(t=o[n],l.draggable,this.el,!1)&&e.push(t.getAttribute(l.dataIdAttr)||_generateId(t));return e},sort:function(t,e){var o={},n=this.el;this.toArray().forEach((function(t,e){var r=n.children[e];closest(r,this.options.draggable,n,!1)&&(o[t]=r)}),this),e&&this.captureAnimationState(),t.forEach((function(t){o[t]&&(n.removeChild(o[t]),n.appendChild(o[t]))})),e&&this.animateAll()},save:function(){var t=this.options.store;t&&t.set&&t.set(this)},closest:function(t,e){return closest(t,e||this.options.draggable,this.el,!1)},option:function(t,e){var o=this.options;if(void 0===e)return o[t];var n=PluginManager.modifyOption(this,t,e);o[t]=void 0!==n?n:e,"group"===t&&_prepareGroup(o)},destroy:function(){pluginEvent("destroy",this);var t=this.el;t[expando]=null,off(t,"mousedown",this._onTapStart),off(t,"touchstart",this._onTapStart),off(t,"pointerdown",this._onTapStart),this.nativeDraggable&&(off(t,"dragover",this),off(t,"dragenter",this)),Array.prototype.forEach.call(t.querySelectorAll("[draggable]"),(function(t){t.removeAttribute("draggable")})),this._onDrop(),this._disableDelayedDragEvents(),sortables.splice(sortables.indexOf(this.el),1),this.el=t=null},_hideClone:function(){if(!cloneHidden){if(pluginEvent("hideClone",this),Sortable.eventCanceled)return;css(cloneEl,"display","none"),this.options.removeCloneOnHide&&cloneEl.parentNode&&cloneEl.parentNode.removeChild(cloneEl),cloneHidden=!0}},_showClone:function(t){if("clone"===t.lastPutMode){if(cloneHidden){if(pluginEvent("showClone",this),Sortable.eventCanceled)return;dragEl.parentNode!=rootEl||this.options.group.revertClone?nextEl?rootEl.insertBefore(cloneEl,nextEl):rootEl.appendChild(cloneEl):rootEl.insertBefore(cloneEl,dragEl),this.options.group.revertClone&&this.animate(dragEl,cloneEl),css(cloneEl,"display",""),cloneHidden=!1}}else this._hideClone()}},documentExists&&on(document,"touchmove",(function(t){(Sortable.active||awaitingDragStarted)&&t.cancelable&&t.preventDefault()})),Sortable.utils={on:on,off:off,css:css,find:find,is:function(t,e){return!!closest(t,e,t,!1)},extend:extend,throttle:throttle,closest:closest,toggleClass:toggleClass,clone:clone,index:index,nextTick:_nextTick,cancelNextTick:_cancelNextTick,detectDirection:_detectDirection,getChild:getChild},Sortable.get=function(t){return t[expando]},Sortable.mount=function(){for(var t=arguments.length,e=new Array(t),o=0;o<t;o++)e[o]=arguments[o];e[0].constructor===Array&&(e=e[0]),e.forEach((function(t){if(!t.prototype||!t.prototype.constructor)throw"Sortable: Mounted plugin must be a constructor function, not ".concat({}.toString.call(t));t.utils&&(Sortable.utils=_objectSpread2(_objectSpread2({},Sortable.utils),t.utils)),PluginManager.mount(t)}))},Sortable.create=function(t,e){return new Sortable(t,e)},Sortable.version=version;var scrollEl,scrollRootEl,lastAutoScrollX,lastAutoScrollY,touchEvt$1,pointerElemChangedInterval,autoScrolls=[],scrolling=!1;function AutoScrollPlugin(){function t(){for(var t in this.defaults={scroll:!0,forceAutoScrollFallback:!1,scrollSensitivity:30,scrollSpeed:10,bubbleScroll:!0},this)"_"===t.charAt(0)&&"function"==typeof this[t]&&(this[t]=this[t].bind(this))}return t.prototype={dragStarted:function(t){var e=t.originalEvent;this.sortable.nativeDraggable?on(document,"dragover",this._handleAutoScroll):this.options.supportPointer?on(document,"pointermove",this._handleFallbackAutoScroll):e.touches?on(document,"touchmove",this._handleFallbackAutoScroll):on(document,"mousemove",this._handleFallbackAutoScroll)},dragOverCompleted:function(t){var e=t.originalEvent;this.options.dragOverBubble||e.rootEl||this._handleAutoScroll(e)},drop:function(){this.sortable.nativeDraggable?off(document,"dragover",this._handleAutoScroll):(off(document,"pointermove",this._handleFallbackAutoScroll),off(document,"touchmove",this._handleFallbackAutoScroll),off(document,"mousemove",this._handleFallbackAutoScroll)),clearPointerElemChangedInterval(),clearAutoScrolls(),cancelThrottle()},nulling:function(){touchEvt$1=scrollRootEl=scrollEl=scrolling=pointerElemChangedInterval=lastAutoScrollX=lastAutoScrollY=null,autoScrolls.length=0},_handleFallbackAutoScroll:function(t){this._handleAutoScroll(t,!0)},_handleAutoScroll:function(t,e){var o=this,n=(t.touches?t.touches[0]:t).clientX,r=(t.touches?t.touches[0]:t).clientY,l=document.elementFromPoint(n,r);if(touchEvt$1=t,e||this.options.forceAutoScrollFallback||Edge||IE11OrLess||Safari){autoScroll(t,this.options,l,e);var a=getParentAutoScrollElement(l,!0);!scrolling||pointerElemChangedInterval&&n===lastAutoScrollX&&r===lastAutoScrollY||(pointerElemChangedInterval&&clearPointerElemChangedInterval(),pointerElemChangedInterval=setInterval((function(){var l=getParentAutoScrollElement(document.elementFromPoint(n,r),!0);l!==a&&(a=l,clearAutoScrolls()),autoScroll(t,o.options,l,e)}),10),lastAutoScrollX=n,lastAutoScrollY=r)}else{if(!this.options.bubbleScroll||getParentAutoScrollElement(l,!0)===getWindowScrollingElement())return void clearAutoScrolls();autoScroll(t,this.options,getParentAutoScrollElement(l,!1),!1)}}},_extends(t,{pluginName:"scroll",initializeByDefault:!0})}function clearAutoScrolls(){autoScrolls.forEach((function(t){clearInterval(t.pid)})),autoScrolls=[]}function clearPointerElemChangedInterval(){clearInterval(pointerElemChangedInterval)}var lastSwapEl,autoScroll=throttle((function(t,e,o,n){if(e.scroll){var r,l=(t.touches?t.touches[0]:t).clientX,a=(t.touches?t.touches[0]:t).clientY,i=e.scrollSensitivity,s=e.scrollSpeed,c=getWindowScrollingElement(),d=!1;scrollRootEl!==o&&(scrollRootEl=o,clearAutoScrolls(),scrollEl=e.scroll,r=e.scrollFn,!0===scrollEl&&(scrollEl=getParentAutoScrollElement(o,!0)));var u=0,g=scrollEl;do{var h=g,p=getRect(h),f=p.top,m=p.bottom,v=p.left,E=p.right,b=p.width,S=p.height,D=void 0,w=void 0,_=h.scrollWidth,y=h.scrollHeight,x=css(h),C=h.scrollLeft,I=h.scrollTop;h===c?(D=b<_&&("auto"===x.overflowX||"scroll"===x.overflowX||"visible"===x.overflowX),w=S<y&&("auto"===x.overflowY||"scroll"===x.overflowY||"visible"===x.overflowY)):(D=b<_&&("auto"===x.overflowX||"scroll"===x.overflowX),w=S<y&&("auto"===x.overflowY||"scroll"===x.overflowY));var T=D&&(Math.abs(E-l)<=i&&C+b<_)-(Math.abs(v-l)<=i&&!!C),A=w&&(Math.abs(m-a)<=i&&I+S<y)-(Math.abs(f-a)<=i&&!!I);if(!autoScrolls[u])for(var P=0;P<=u;P++)autoScrolls[P]||(autoScrolls[P]={});autoScrolls[u].vx==T&&autoScrolls[u].vy==A&&autoScrolls[u].el===h||(autoScrolls[u].el=h,autoScrolls[u].vx=T,autoScrolls[u].vy=A,clearInterval(autoScrolls[u].pid),0==T&&0==A||(d=!0,autoScrolls[u].pid=setInterval(function(){n&&0===this.layer&&Sortable.active._onTouchMove(touchEvt$1);var e=autoScrolls[this.layer].vy?autoScrolls[this.layer].vy*s:0,o=autoScrolls[this.layer].vx?autoScrolls[this.layer].vx*s:0;"function"==typeof r&&"continue"!==r.call(Sortable.dragged.parentNode[expando],o,e,t,touchEvt$1,autoScrolls[this.layer].el)||scrollBy(autoScrolls[this.layer].el,o,e)}.bind({layer:u}),24))),u++}while(e.bubbleScroll&&g!==c&&(g=getParentAutoScrollElement(g,!1)));scrolling=d}}),30),drop=function(t){var e=t.originalEvent,o=t.putSortable,n=t.dragEl,r=t.activeSortable,l=t.dispatchSortableEvent,a=t.hideGhostForTarget,i=t.unhideGhostForTarget;if(e){var s=o||r;a();var c=e.changedTouches&&e.changedTouches.length?e.changedTouches[0]:e,d=document.elementFromPoint(c.clientX,c.clientY);i(),s&&!s.el.contains(d)&&(l("spill"),this.onSpill({dragEl:n,putSortable:o}))}};function Revert(){}function Remove(){}function SwapPlugin(){function t(){this.defaults={swapClass:"sortable-swap-highlight"}}return t.prototype={dragStart:function(t){var e=t.dragEl;lastSwapEl=e},dragOverValid:function(t){var e=t.completed,o=t.target,n=t.onMove,r=t.activeSortable,l=t.changed,a=t.cancel;if(r.options.swap){var i=this.sortable.el,s=this.options;if(o&&o!==i){var c=lastSwapEl;!1!==n(o)?(toggleClass(o,s.swapClass,!0),lastSwapEl=o):lastSwapEl=null,c&&c!==lastSwapEl&&toggleClass(c,s.swapClass,!1)}l(),e(!0),a()}},drop:function(t){var e=t.activeSortable,o=t.putSortable,n=t.dragEl,r=o||this.sortable,l=this.options;lastSwapEl&&toggleClass(lastSwapEl,l.swapClass,!1),lastSwapEl&&(l.swap||o&&o.options.swap)&&n!==lastSwapEl&&(r.captureAnimationState(),r!==e&&e.captureAnimationState(),swapNodes(n,lastSwapEl),r.animateAll(),r!==e&&e.animateAll())},nulling:function(){lastSwapEl=null}},_extends(t,{pluginName:"swap",eventProperties:function(){return{swapItem:lastSwapEl}}})}function swapNodes(t,e){var o,n,r=t.parentNode,l=e.parentNode;r&&l&&!r.isEqualNode(e)&&!l.isEqualNode(t)&&(o=index(t),n=index(e),r.isEqualNode(l)&&o<n&&n++,r.insertBefore(e,r.children[o]),l.insertBefore(t,l.children[n]))}Revert.prototype={startIndex:null,dragStart:function(t){var e=t.oldDraggableIndex;this.startIndex=e},onSpill:function(t){var e=t.dragEl,o=t.putSortable;this.sortable.captureAnimationState(),o&&o.captureAnimationState();var n=getChild(this.sortable.el,this.startIndex,this.options);n?this.sortable.el.insertBefore(e,n):this.sortable.el.appendChild(e),this.sortable.animateAll(),o&&o.animateAll()},drop:drop},_extends(Revert,{pluginName:"revertOnSpill"}),Remove.prototype={onSpill:function(t){var e=t.dragEl,o=t.putSortable||this.sortable;o.captureAnimationState(),e.parentNode&&e.parentNode.removeChild(e),o.animateAll()},drop:drop},_extends(Remove,{pluginName:"removeOnSpill"});var lastMultiDragSelect,multiDragSortable,dragEl$1,clonesFromRect,clonesHidden,multiDragElements=[],multiDragClones=[],initialFolding=!1,folding=!1,dragStarted=!1;function MultiDragPlugin(){function t(t){for(var e in this)"_"===e.charAt(0)&&"function"==typeof this[e]&&(this[e]=this[e].bind(this));t.options.avoidImplicitDeselect||(t.options.supportPointer?on(document,"pointerup",this._deselectMultiDrag):(on(document,"mouseup",this._deselectMultiDrag),on(document,"touchend",this._deselectMultiDrag))),on(document,"keydown",this._checkKeyDown),on(document,"keyup",this._checkKeyUp),this.defaults={selectedClass:"sortable-selected",multiDragKey:null,avoidImplicitDeselect:!1,setData:function(e,o){var n="";multiDragElements.length&&multiDragSortable===t?multiDragElements.forEach((function(t,e){n+=(e?", ":"")+t.textContent})):n=o.textContent,e.setData("Text",n)}}}return t.prototype={multiDragKeyDown:!1,isMultiDrag:!1,delayStartGlobal:function(t){var e=t.dragEl;dragEl$1=e},delayEnded:function(){this.isMultiDrag=~multiDragElements.indexOf(dragEl$1)},setupClone:function(t){var e=t.sortable,o=t.cancel;if(this.isMultiDrag){for(var n=0;n<multiDragElements.length;n++)multiDragClones.push(clone(multiDragElements[n])),multiDragClones[n].sortableIndex=multiDragElements[n].sortableIndex,multiDragClones[n].draggable=!1,multiDragClones[n].style["will-change"]="",toggleClass(multiDragClones[n],this.options.selectedClass,!1),multiDragElements[n]===dragEl$1&&toggleClass(multiDragClones[n],this.options.chosenClass,!1);e._hideClone(),o()}},clone:function(t){var e=t.sortable,o=t.rootEl,n=t.dispatchSortableEvent,r=t.cancel;this.isMultiDrag&&(this.options.removeCloneOnHide||multiDragElements.length&&multiDragSortable===e&&(insertMultiDragClones(!0,o),n("clone"),r()))},showClone:function(t){var e=t.cloneNowShown,o=t.rootEl,n=t.cancel;this.isMultiDrag&&(insertMultiDragClones(!1,o),multiDragClones.forEach((function(t){css(t,"display","")})),e(),clonesHidden=!1,n())},hideClone:function(t){var e=this,o=(t.sortable,t.cloneNowHidden),n=t.cancel;this.isMultiDrag&&(multiDragClones.forEach((function(t){css(t,"display","none"),e.options.removeCloneOnHide&&t.parentNode&&t.parentNode.removeChild(t)})),o(),clonesHidden=!0,n())},dragStartGlobal:function(t){t.sortable;!this.isMultiDrag&&multiDragSortable&&multiDragSortable.multiDrag._deselectMultiDrag(),multiDragElements.forEach((function(t){t.sortableIndex=index(t)})),multiDragElements=multiDragElements.sort((function(t,e){return t.sortableIndex-e.sortableIndex})),dragStarted=!0},dragStarted:function(t){var e=this,o=t.sortable;if(this.isMultiDrag){if(this.options.sort&&(o.captureAnimationState(),this.options.animation)){multiDragElements.forEach((function(t){t!==dragEl$1&&css(t,"position","absolute")}));var n=getRect(dragEl$1,!1,!0,!0);multiDragElements.forEach((function(t){t!==dragEl$1&&setRect(t,n)})),folding=!0,initialFolding=!0}o.animateAll((function(){folding=!1,initialFolding=!1,e.options.animation&&multiDragElements.forEach((function(t){unsetRect(t)})),e.options.sort&&removeMultiDragElements()}))}},dragOver:function(t){var e=t.target,o=t.completed,n=t.cancel;folding&&~multiDragElements.indexOf(e)&&(o(!1),n())},revert:function(t){var e=t.fromSortable,o=t.rootEl,n=t.sortable,r=t.dragRect;multiDragElements.length>1&&(multiDragElements.forEach((function(t){n.addAnimationState({target:t,rect:folding?getRect(t):r}),unsetRect(t),t.fromRect=r,e.removeAnimationState(t)})),folding=!1,insertMultiDragElements(!this.options.removeCloneOnHide,o))},dragOverCompleted:function(t){var e=t.sortable,o=t.isOwner,n=t.insertion,r=t.activeSortable,l=t.parentEl,a=t.putSortable,i=this.options;if(n){if(o&&r._hideClone(),initialFolding=!1,i.animation&&multiDragElements.length>1&&(folding||!o&&!r.options.sort&&!a)){var s=getRect(dragEl$1,!1,!0,!0);multiDragElements.forEach((function(t){t!==dragEl$1&&(setRect(t,s),l.appendChild(t))})),folding=!0}if(!o)if(folding||removeMultiDragElements(),multiDragElements.length>1){var c=clonesHidden;r._showClone(e),r.options.animation&&!clonesHidden&&c&&multiDragClones.forEach((function(t){r.addAnimationState({target:t,rect:clonesFromRect}),t.fromRect=clonesFromRect,t.thisAnimationDuration=null}))}else r._showClone(e)}},dragOverAnimationCapture:function(t){var e=t.dragRect,o=t.isOwner,n=t.activeSortable;if(multiDragElements.forEach((function(t){t.thisAnimationDuration=null})),n.options.animation&&!o&&n.multiDrag.isMultiDrag){clonesFromRect=_extends({},e);var r=matrix(dragEl$1,!0);clonesFromRect.top-=r.f,clonesFromRect.left-=r.e}},dragOverAnimationComplete:function(){folding&&(folding=!1,removeMultiDragElements())},drop:function(t){var e=t.originalEvent,o=t.rootEl,n=t.parentEl,r=t.sortable,l=t.dispatchSortableEvent,a=t.oldIndex,i=t.putSortable,s=i||this.sortable;if(e){var c=this.options,d=n.children;if(!dragStarted)if(c.multiDragKey&&!this.multiDragKeyDown&&this._deselectMultiDrag(),toggleClass(dragEl$1,c.selectedClass,!~multiDragElements.indexOf(dragEl$1)),~multiDragElements.indexOf(dragEl$1))multiDragElements.splice(multiDragElements.indexOf(dragEl$1),1),lastMultiDragSelect=null,dispatchEvent({sortable:r,rootEl:o,name:"deselect",targetEl:dragEl$1,originalEvent:e});else{if(multiDragElements.push(dragEl$1),dispatchEvent({sortable:r,rootEl:o,name:"select",targetEl:dragEl$1,originalEvent:e}),e.shiftKey&&lastMultiDragSelect&&r.el.contains(lastMultiDragSelect)){var u,g,h=index(lastMultiDragSelect),p=index(dragEl$1);if(~h&&~p&&h!==p)for(p>h?(g=h,u=p):(g=p,u=h+1);g<u;g++)~multiDragElements.indexOf(d[g])||(toggleClass(d[g],c.selectedClass,!0),multiDragElements.push(d[g]),dispatchEvent({sortable:r,rootEl:o,name:"select",targetEl:d[g],originalEvent:e}))}else lastMultiDragSelect=dragEl$1;multiDragSortable=s}if(dragStarted&&this.isMultiDrag){if(folding=!1,(n[expando].options.sort||n!==o)&&multiDragElements.length>1){var f=getRect(dragEl$1),m=index(dragEl$1,":not(."+this.options.selectedClass+")");if(!initialFolding&&c.animation&&(dragEl$1.thisAnimationDuration=null),s.captureAnimationState(),!initialFolding&&(c.animation&&(dragEl$1.fromRect=f,multiDragElements.forEach((function(t){if(t.thisAnimationDuration=null,t!==dragEl$1){var e=folding?getRect(t):f;t.fromRect=e,s.addAnimationState({target:t,rect:e})}}))),removeMultiDragElements(),multiDragElements.forEach((function(t){d[m]?n.insertBefore(t,d[m]):n.appendChild(t),m++})),a===index(dragEl$1))){var v=!1;multiDragElements.forEach((function(t){t.sortableIndex===index(t)||(v=!0)})),v&&l("update")}multiDragElements.forEach((function(t){unsetRect(t)})),s.animateAll()}multiDragSortable=s}(o===n||i&&"clone"!==i.lastPutMode)&&multiDragClones.forEach((function(t){t.parentNode&&t.parentNode.removeChild(t)}))}},nullingGlobal:function(){this.isMultiDrag=dragStarted=!1,multiDragClones.length=0},destroyGlobal:function(){this._deselectMultiDrag(),off(document,"pointerup",this._deselectMultiDrag),off(document,"mouseup",this._deselectMultiDrag),off(document,"touchend",this._deselectMultiDrag),off(document,"keydown",this._checkKeyDown),off(document,"keyup",this._checkKeyUp)},_deselectMultiDrag:function(t){if(!(void 0!==dragStarted&&dragStarted||multiDragSortable!==this.sortable||t&&closest(t.target,this.options.draggable,this.sortable.el,!1)||t&&0!==t.button))for(;multiDragElements.length;){var e=multiDragElements[0];toggleClass(e,this.options.selectedClass,!1),multiDragElements.shift(),dispatchEvent({sortable:this.sortable,rootEl:this.sortable.el,name:"deselect",targetEl:e,originalEvent:t})}},_checkKeyDown:function(t){t.key===this.options.multiDragKey&&(this.multiDragKeyDown=!0)},_checkKeyUp:function(t){t.key===this.options.multiDragKey&&(this.multiDragKeyDown=!1)}},_extends(t,{pluginName:"multiDrag",utils:{select:function(t){var e=t.parentNode[expando];e&&e.options.multiDrag&&!~multiDragElements.indexOf(t)&&(multiDragSortable&&multiDragSortable!==e&&(multiDragSortable.multiDrag._deselectMultiDrag(),multiDragSortable=e),toggleClass(t,e.options.selectedClass,!0),multiDragElements.push(t))},deselect:function(t){var e=t.parentNode[expando],o=multiDragElements.indexOf(t);e&&e.options.multiDrag&&~o&&(toggleClass(t,e.options.selectedClass,!1),multiDragElements.splice(o,1))}},eventProperties:function(){var t=this,e=[],o=[];return multiDragElements.forEach((function(n){var r;e.push({multiDragElement:n,index:n.sortableIndex}),r=folding&&n!==dragEl$1?-1:folding?index(n,":not(."+t.options.selectedClass+")"):index(n),o.push({multiDragElement:n,index:r})})),{items:_toConsumableArray(multiDragElements),clones:[].concat(multiDragClones),oldIndicies:e,newIndicies:o}},optionListeners:{multiDragKey:function(t){return"ctrl"===(t=t.toLowerCase())?t="Control":t.length>1&&(t=t.charAt(0).toUpperCase()+t.substr(1)),t}}})}function insertMultiDragElements(t,e){multiDragElements.forEach((function(o,n){var r=e.children[o.sortableIndex+(t?Number(n):0)];r?e.insertBefore(o,r):e.appendChild(o)}))}function insertMultiDragClones(t,e){multiDragClones.forEach((function(o,n){var r=e.children[o.sortableIndex+(t?Number(n):0)];r?e.insertBefore(o,r):e.appendChild(o)}))}function removeMultiDragElements(){multiDragElements.forEach((function(t){t!==dragEl$1&&t.parentNode&&t.parentNode.removeChild(t)}))}Sortable.mount(new AutoScrollPlugin),Sortable.mount(Remove,Revert),Sortable.mount(new SwapPlugin),Sortable.mount(new MultiDragPlugin);/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Sortable);
//# sourceMappingURL=sortablejs.bundle.js.map


/***/ }),

/***/ "./assets/cms/page-admin.js":
/*!**********************************!*\
  !*** ./assets/cms/page-admin.js ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _admin_theme_plugins_custom_sortablejs_sortablejs_bundle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../admin-theme/plugins/custom/sortablejs/sortablejs.bundle.js */ "./assets/admin-theme/plugins/custom/sortablejs/sortablejs.bundle.js");



let containers = null;
let dropzones = null;
let contentTypeList = null;
let CMSRouting = await CMSAdmin.getRouting();
let addBlockUrl = CMSRouting.generate('admin_networking_initcms_layoutblock_addBlock');
let sortUrl = CMSRouting.generate('admin_networking_initcms_layoutblock_updateLayoutBlockSort');
let deleteUrl = CMSRouting.generate('admin_networking_initcms_layoutblock_deleteAjax');
let lastTranslationSettingsHtml = null;
let pageId = null;
let erroredContainers = new Set();

function initDropZone() {

    containers = document.querySelectorAll(".draggable-zone");
    dropzones = document.querySelectorAll(".dropzone");
    contentTypeList = document.querySelector("#content_item_list");
    pageId = document.querySelector("meta[name='init-cms-page-id']").getAttribute("content");

    if (containers.length === 0) {
        return false;
    }

    let contentItems = new _admin_theme_plugins_custom_sortablejs_sortablejs_bundle_js__WEBPACK_IMPORTED_MODULE_0__["default"](contentTypeList, {
        group: {
            name: 'shared',
            pull: 'clone',
            put: false,
            revertClone: true,

        },sort: false,
        onEnd: function (/**Event*/evt) {
            hideContainerErrors()
        },
    })

    containers.forEach(function (container) {

        let swappable = new _admin_theme_plugins_custom_sortablejs_sortablejs_bundle_js__WEBPACK_IMPORTED_MODULE_0__["default"](container, {
            group: {name: 'shared', pull: true, put: acceptLayoutBlock},
            animation: 150,
            onEnd: function (/**Event*/evt) {

                hideContainerErrors()

                if(evt.newIndex === evt.oldIndex){
                    return
                }

                saveLayoutBlockSort(evt, (response) => {
                   // CMSAdmin.createInitCmsMessageBox(response.data.messageStatus, response.data.message);
                })
            },
            onAdd: function (/**CustomEvent*/evt, dragEl) {

                let count = evt.to.querySelectorAll('.draggable').length;
                let item = evt.item;

                if (!item.id) {

                    let dropzone = container.parentElement
                    createItem(item.dataset.contentType, dropzone.dataset.pageId, dropzone.dataset.zone, evt.newIndex)
                        .then((response) => {
                            item.outerHTML = response.data.html
                            CMSAdmin.createInitCmsMessageBox(response.data.messageStatus, response.data.message);
                            saveLayoutBlockSort(evt, (response) => {
                                CMSAdmin.createInitCmsMessageBox(response.data.messageStatus, response.data.message);
                            })

                        })
                        .catch((error) => {
                            let message = error.response.data.detail

                            CMSAdmin.createInitCmsMessageBox('error', message);
                        })
                }

                if (count) {
                    evt.to.querySelector('.empty_layout_block').classList.add("d-none")
                    return
                }

                evt.to.querySelector('.empty_layout_block').classList.remove("d-none")


            },
            onRemove: function (/**Event*/evt) {
                let count = evt.from.querySelectorAll('.draggable').length;
                if (count) {
                    evt.from.querySelector('.empty_layout_block').classList.add("d-none")
                    return
                }

                evt.from.querySelector('.empty_layout_block').classList.remove("d-none")

            }
        });
    })
}



let showContainerError = (container) => {
    let dropzone = container.closest('.dropzone')
    dropzone.classList.add('bg-light-danger')
    dropzone.closest('.dropzone').classList.add('border-danger')
    erroredContainers.add(dropzone)
}

let hideContainerErrors = () => {
    erroredContainers.forEach((item) => {
        item.classList.remove('bg-light-danger')
        item.classList.remove('border-danger')
    })
}

let acceptLayoutBlock = (to, from, dragEl) => {
    let container = to.el
    let contentBlock = dragEl
    let contentTypes = JSON.parse(container.dataset.contentTypes);
    if (contentTypes.length > 0) {
        if (!contentTypes.includes(contentBlock.dataset.contentType)) {
            showContainerError(container)
            return false

        }
    }

    let maxItems = container.dataset.maxItems;

    let count = container.querySelectorAll('.draggable').length;

    if (maxItems > 0) {
        if (count >= maxItems) {
            showContainerError(container)
            return false
        }
    }
    hideContainerErrors()
    return true
}

let saveLayoutBlockSort = (event, callback) => {
    // CMSAdmin.createInitCmsMessageBox(xhr.messageStatus, xhr.message);

    let zones = [];
    let pageId = null;
    let adminCode = null;

    dropzones.forEach(function (dropzone) {
        let layoutBlocks = dropzone.querySelectorAll(".draggable");
        let addButtons = dropzone.querySelectorAll(".add-layout");
        let zone = dropzone.dataset.zone

        if (!pageId) {
            pageId = dropzone.dataset.pageId
        }

        if (!adminCode) {
            adminCode = dropzone.dataset.adminCode
        }


        let layoutBlockIds = [];

        layoutBlocks.forEach(function (layoutBlock, index) {
            layoutBlock.dataset.sortOrder = index;
            layoutBlockIds.push(layoutBlock.id);
        })
        zones.push({
            zone: zone,
            layoutBlocks: layoutBlockIds
        })
    })

    submitLayoutSort(zones, pageId, adminCode).then(function (response) {

        let event = new CustomEvent('page-updated')
        document.body.dispatchEvent(event)
        if (callback !== undefined) {
            callback(response)
        }
    })

};

let createItem = async (contentType, pageId, zone, sortOrder) => {

    return await axios.get(addBlockUrl, {
        params: {
            subclass: contentType,
            zone: zone,
            pageId: pageId,
            sortOrder: sortOrder
        }
    }, axiosConfig)
}

let submitLayoutSort = async (zones, pageId, adminCode) => {
    return await axios.post(sortUrl, {
        zones: zones,
        pageId: pageId,
        code: adminCode,
    }, axiosConfig)
}
let editBlock = (e) => {
    e.preventDefault();
    let el = e.target;

    if (el.classList.contains('fa-pen-to-square')) {
        el = el.parentElement
    }

    let id = el.dataset.value


    let layoutBlock = document.getElementById('layoutBlock_' + id)
    layoutBlock.querySelector('.edit_block').setAttribute('disabled', true)
    layoutBlock.querySelector('.delete_block').setAttribute('disabled', true)

    let editUrl = CMSRouting.generate('admin_networking_initcms_layoutblock_edit', {id: id})
    let displayBlock = document.getElementById('layoutBlockHtml' + id)
    let editBlock = document.getElementById('editBlockHtml' + id)

    axios.get(editUrl, axiosConfig).then((response) => {
        editBlock.innerHTML = response.data.html
        displayBlock.classList.add('d-none')
        editBlock.classList.remove('d-none')
        document.body.dispatchEvent(new CustomEvent('fields:added'))
    }).catch((error) => {
        let message = error.response.data.detail
        CMSAdmin.createInitCmsMessageBox('error', message);
    })
}

let createBlock = (e) => {
    e.preventDefault();
    let el = e.target;

    if (el.classList.contains('fa-pen-to-square')) {
        el = el.parentElement
    }

    let id = el.dataset.value


    let layoutBlock = document.getElementById('layoutBlock_' + id)
    layoutBlock.querySelector('.create_block').setAttribute('disabled', true)

    let createUrl = CMSRouting.generate('admin_networking_initcms_layoutblock_create',{
        subclass: layoutBlock.dataset.contentType,
        zone: layoutBlock.dataset.zone,
        pageId: layoutBlock.dataset.pageId,
        sortOrder: layoutBlock.dataset.sortOrder
    })

    let displayBlock = document.getElementById('layoutBlockHtml' + id)
    let editBlock = document.getElementById('editBlockHtml' + id)

    axios.get(createUrl, axiosConfig).then((response) => {
        editBlock.innerHTML = response.data.html
        displayBlock.classList.add('d-none')
        editBlock.classList.remove('d-none')
        document.body.dispatchEvent(new CustomEvent('fields:added'))
    }).catch((error) => {
        if(!error.response){
            console.error(error)
            return
        }

        let message = error.response.data.detail
        CMSAdmin.createInitCmsMessageBox('error', message);
    })
}

let cancelEditBlock = (e) => {
    let id = e.target.dataset.value
    let displayBlock = document.getElementById('layoutBlockHtml' + id)
    let editBlock = document.getElementById('editBlockHtml' + id)
    let layoutBlock = document.getElementById('layoutBlock_' + id)
    layoutBlock.querySelector('.edit_block').removeAttribute('disabled')
    layoutBlock.querySelector('.delete_block').removeAttribute('disabled')
    editBlock.classList.add('d-none')
    editBlock.innerHTML = ''
    displayBlock.classList.remove('d-none')

}

let cancelCreateBlock = (e) => {
    e.preventDefault();
    let form = e.target.closest('form')
    let div = form.closest('[data-zone]')
    let id = div.getAttribute('id').replace('layoutBlock_', '')
    let displayBlock = document.getElementById('layoutBlockHtml' + id)
    let editBlock = document.getElementById('editBlockHtml' + id)
    let layoutBlock = document.getElementById('layoutBlock_' + id)
    layoutBlock.querySelector('.create_block').removeAttribute('disabled')
    editBlock.classList.add('d-none')
    editBlock.innerHTML = ''
    displayBlock.classList.remove('d-none')
}

let saveLayoutBlock = (e) => {
    e.preventDefault();
    let form = e.target.closest('form')
    let config = {
        url: form.action,
        method: form.method,
        data: new FormData(form),
        ...axiosConfig
    }

    if (form.enctype === 'multipart/form-data') {
        config.headers['Content-Type'] = 'multipart/form-data'
    }
    axios.request(config).then((response) => {
        if (response.status === 200) {
            let id = response.data.id
            let displayBlock = document.getElementById('layoutBlockHtml' + id)
            let editBlock = document.getElementById('editBlockHtml' + id)
            let layoutBlock = document.getElementById('layoutBlock_' + id)
            layoutBlock.querySelector('.edit_block').removeAttribute('disabled')
            layoutBlock.querySelector('.delete_block').removeAttribute('disabled')
            editBlock.classList.add('d-none')
            editBlock.innerHTML = ''
            displayBlock.classList.remove('d-none')
            displayBlock.innerHTML = response.data.html
            CMSAdmin.createInitCmsMessageBox(response.data.status, response.data.message);
            let event = new CustomEvent('page-updated')
            document.body.dispatchEvent(event)
        }
    }).catch((error) => {
        if(!error.response){
            console.error(error)
            return
        }

        let id = error.response.data.id
        let editBlock = document.getElementById('editBlockHtml' + id)
        editBlock.innerHTML = error.response.data.html
        CMSAdmin.createInitCmsMessageBox('error', error.response.data.message);
        document.body.dispatchEvent(new CustomEvent('fields:added'))
    })

}

let createLayoutBlock = (e) => {
    e.preventDefault();
    let form = e.target.closest('form')
    let config = {
        url: form.action,
        method: form.method,
        data: new FormData(form),
        ...axiosConfig
    }

    if (form.enctype === 'multipart/form-data') {
        config.headers['Content-Type'] = 'multipart/form-data'
    }

    let div = form.closest('[data-zone]')

    let id = div.getAttribute('id').replace('layoutBlock_', '')
    axios.request(config).then((response) => {
        if (response.status === 200) {
            let template = document.createElement('template');
            template.innerHTML = response.data.html.trim();;
            div.replaceWith(template.content.firstChild)
            CMSAdmin.createInitCmsMessageBox(response.data.status, response.data.message);
            let event = new CustomEvent('page-updated')
            document.body.dispatchEvent(event)
        }
    }).catch((error) => {
        if(!error.response){
            console.error(error)
            return
        }

        let editBlock = document.getElementById('editBlockHtml' + id)
        editBlock.innerHTML = error.response.data.html
        CMSAdmin.createInitCmsMessageBox('error', error.response.data.message);
        document.body.dispatchEvent(new CustomEvent('fields:added'))
    })

}

let toggleActive = (e) => {
    e.preventDefault();
    let el = e.target;
    if (el.classList.contains('ki-outline')) {
        el = el.parentElement
    }
    let icon = el.querySelector('i')
    let id = el.dataset.value
    let displayBlock = document.getElementById('layoutBlockHtml' + id)
    let url = CMSRouting.generate('admin_networking_initcms_layoutblock_toggleActive')

    axios.post(url, {id: id}, axiosConfig).then((response) => {


        CMSAdmin.createInitCmsMessageBox('success', response.data.message);
        if (response.data.active) {
            icon.classList.remove('ki-minus-circle')
            icon.classList.add('ki-check-circle')
            el.classList.remove('btn-light-danger')
            el.classList.add('btn-light-success')
            displayBlock.classList.remove('opacity-25')
            return
        }
        icon.classList.add('ki-minus-circle')
        icon.classList.remove('ki-check-circle')
        el.classList.add('btn-light-danger')
        el.classList.remove('btn-light-success')
        displayBlock.classList.add('opacity-25')
        let event = new CustomEvent('page-updated')
        document.body.dispatchEvent(event)
    }).catch((error) => {
        CMSAdmin.createInitCmsMessageBox('error', error.response.data.message);
    })

}


let deleteBlock = (e) => {
    e.preventDefault();
    let el = e.target;

    if (el.classList.contains('fa-trash')) {
        el = el.parentElement
    }

    let container = el.closest('.draggable-zone')


    Swal.fire({
        html: `Are you sure you want to delete this block?`,
        icon: "warning",
        buttonsStyling: false,
        showCancelButton: true,
        confirmButtonText: "Ok, got it!",
        cancelButtonText: 'Nope, cancel it',
        customClass: {
            confirmButton: "btn btn-danger",
            cancelButton: 'btn btn-primary'
        }
    }).then((result) => {
        if (result.isConfirmed) {
            axios.post(deleteUrl, {
                id: el.dataset.value,
                _method: 'DELETE'
            }).then((response) => {

                document.querySelector('#layoutBlock_' + el.dataset.value).remove()
                CMSAdmin.createInitCmsMessageBox(response.data.messageStatus, response.data.message);
                saveLayoutBlockSort();
                if (container.querySelectorAll('.draggable').length) {
                    container.querySelector('.empty_layout_block').classList.add("d-none")
                    return
                }

                container.querySelector('.empty_layout_block').classList.remove("d-none")

            }).catch((err) => {

                console.log(err)
                CMSAdmin.createInitCmsMessageBox('error', 'Something went wrong');
            })
        }
    })
}

let unlinkTranslation = (e) => {
    e.preventDefault();
    let el = e.target;

    let text = el.dataset.text
    let id = el.dataset.objectId

    Swal.fire({
        html: text,
        icon: "warning",
        buttonsStyling: false,
        showCancelButton: true,
        confirmButtonText: "Ok, got it!",
        cancelButtonText: 'Nope, cancel it',
        customClass: {
            confirmButton: "btn btn-danger",
            cancelButton: 'btn btn-primary'
        }
    }).then((result) => {
        if (result.isConfirmed) {

            let headers = {"X-HTTP-Method-Override": "DELETE", ...axiosConfig.headers}

            axios.post(el.href, {}, {
                headers: headers
            }).then((response) => {
                document.querySelector('#translations').innerHTML = response.data.html
                CMSAdmin.createInitCmsMessageBox('success', response.data.message);
            }).catch((err) => {

                console.log(err)
                CMSAdmin.createInitCmsMessageBox('error', 'Something went wrong');
            })
        }
    })
}

let linkTranslation = (e) => {
    e.preventDefault()

    let el = e.target;

    axios.get(el.href, axiosConfig).then((response) => {
        lastTranslationSettingsHtml = document.querySelector('#translations').innerHTML
        document.querySelector('#translations').innerHTML = response.data.html
    }).catch((err) => {
        console.log(err)
        CMSAdmin.createInitCmsMessageBox('error', 'Something went wrong');
    })
}

let submitTranslationLink = (e) => {
    e.preventDefault()

    let form = e.target.closest('form')

    if (e.submitter.classList.contains('btn-cancel') || e.submitter.classList.contains('cancel')) {
        document.querySelector('#translations').innerHTML = lastTranslationSettingsHtml
        return;
    }

    axios.post(form.action, new FormData(form), axiosConfig).then((response) => {
        document.querySelector('#translations').innerHTML = response.data.html
        CMSAdmin.createInitCmsMessageBox('success', response.data.message);
    }, axiosConfig).catch((err) => {

        if (err.response.data.message) {
            return CMSAdmin.createInitCmsMessageBox('error', err.response.data.message);
        }

        CMSAdmin.createInitCmsMessageBox('error', err.response.data.detail);
    })
}

let submitPageSettings = (e) => {
    e.preventDefault()
    let form = e.target.closest('form')

    form.elements.forEach((item) => {
        item.classList.remove('is-invalid')
    })

    axios.post(form.action, new FormData(form), axiosConfig).then((response) => {
        document.querySelector('#pageStatusSettings').innerHTML = response.data.pageStatusSettings

        if(response.data.layoutBlockSettingsHtml){
            document.querySelector('#page_content').innerHTML = response.data.layoutBlockSettingsHtml
            initDropZone()
        }

        CMSAdmin.createInitCmsMessageBox('success', response.data.message);
    }).catch((err) => {
        let data = err.response.data

        data.violations.forEach((item) => {
            let path = item.propertyPath
            let message = item.title
            let field = form.querySelector('[name="' + path + '"]')
            field.classList.add('is-invalid')
            field.setAttribute('required', 'required')

            if (field.nextElementSibling && field.nextElementSibling.classList.contains('invalid-feedback')) {
                field.nextElementSibling.innerHtml = message;
                return
            }
            field.insertAdjacentHTML('afterend', '<div class="invalid-feedback">' + message + '</div>')
        })
    })
}

let updatePageStatus = () => {
    axios.get(CMSRouting.generate('admin_networking_initcms_page_getPageStatus', {id: pageId}), axiosConfig)
        .then((response) => {
            document.querySelector('#pageStatusSettings').innerHTML = response.data.pageStatusSettings
        }).catch((err) => {
        if (err.response.data.message) {
            return CMSAdmin.createInitCmsMessageBox('error', err.response.data.message);
        }

        CMSAdmin.createInitCmsMessageBox('error', err.response.data.detail);
    })
}

let statusDialog = (e) => {
    e.preventDefault()

    let el = e.target;

    if (!el.href) {
        el = el.closest('a')
    }
    let text = el.dataset.text
    Swal.fire({
        html: text,
        icon: "warning",
        buttonsStyling: false,
        showCancelButton: true,
        confirmButtonText: "Ok, got it!",
        cancelButtonText: 'Nope, cancel it',
        customClass: {
            confirmButton: "btn btn-danger",
            cancelButton: 'btn btn-primary'
        }
    }).then((result) => {
        if (result.isConfirmed) {
            axios.post(el.href, axiosConfig).then((response) => {
                if (response.data.redirect) {
                    return window.location = response.data.redirect
                }
            }).catch((err) => {
                if (err.response.data.message) {
                    return CMSAdmin.createInitCmsMessageBox('error', err.response.data.message);
                }

                CMSAdmin.createInitCmsMessageBox('error', err.response.data.detail);
            })

        }
    })

}


KTUtil.onDOMContentLoaded(function () {

    KTUtil.on(document.body, '.delete_block', 'click', (e) => {
        deleteBlock(e)
    })

    KTUtil.on(document.body, '.edit_block', 'click', (e) => {
        editBlock(e)
    })

    KTUtil.on(document.body, '.create_block', 'click', (e) => {
        createBlock(e)
    })

    KTUtil.on(document.body, '.toggle-active', 'click', (e) => {
        toggleActive(e)
    })

    KTUtil.on(document.body, '[data-dismiss="edit"]', 'click', (e) => {
        cancelEditBlock(e)
    })


    KTUtil.on(document.body, '[data-dismiss="create"]', 'click', (e) => {
        cancelCreateBlock(e)
    })

    KTUtil.on(document.body, '[data-save="edit"]', 'click', (e) => {
        saveLayoutBlock(e)
    })

    KTUtil.on(document.body, '[data-save="create"]', 'click', (e) => {
        createLayoutBlock(e)
    })

    KTUtil.on(document.body, '.translation-dialog-unlink', 'click', (e) => {
        unlinkTranslation(e)
    });

    KTUtil.on(document.body, '.translation-dialog-link', 'click', (e) => {
        linkTranslation(e)
    });

    KTUtil.on(document.body, '#translation-link-form', 'submit', (e) => {
        submitTranslationLink(e)
    });

    KTUtil.on(document.body, '#translate-copy-page-form', 'submit', (e) => {
        submitTranslationLink(e)
    });

    KTUtil.on(document.body, '#page-settings-form', 'submit', (e) => {
        submitPageSettings(e)
    });

    KTUtil.on(document.body, '#page-metadata-form', 'submit', (e) => {
        submitPageSettings(e)
    });

    KTUtil.on(document.body, '.status-dialog-link', 'click', (e) => {
        statusDialog(e)
    });

    document.body.addEventListener('page-updated', (e) => {
        updatePageStatus()
    })


    initDropZone();
})
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } }, 1);

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/async module */
/******/ 	(() => {
/******/ 		var webpackQueues = typeof Symbol === "function" ? Symbol("webpack queues") : "__webpack_queues__";
/******/ 		var webpackExports = typeof Symbol === "function" ? Symbol("webpack exports") : "__webpack_exports__";
/******/ 		var webpackError = typeof Symbol === "function" ? Symbol("webpack error") : "__webpack_error__";
/******/ 		var resolveQueue = (queue) => {
/******/ 			if(queue && queue.d < 1) {
/******/ 				queue.d = 1;
/******/ 				queue.forEach((fn) => (fn.r--));
/******/ 				queue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));
/******/ 			}
/******/ 		}
/******/ 		var wrapDeps = (deps) => (deps.map((dep) => {
/******/ 			if(dep !== null && typeof dep === "object") {
/******/ 				if(dep[webpackQueues]) return dep;
/******/ 				if(dep.then) {
/******/ 					var queue = [];
/******/ 					queue.d = 0;
/******/ 					dep.then((r) => {
/******/ 						obj[webpackExports] = r;
/******/ 						resolveQueue(queue);
/******/ 					}, (e) => {
/******/ 						obj[webpackError] = e;
/******/ 						resolveQueue(queue);
/******/ 					});
/******/ 					var obj = {};
/******/ 					obj[webpackQueues] = (fn) => (fn(queue));
/******/ 					return obj;
/******/ 				}
/******/ 			}
/******/ 			var ret = {};
/******/ 			ret[webpackQueues] = x => {};
/******/ 			ret[webpackExports] = dep;
/******/ 			return ret;
/******/ 		}));
/******/ 		__webpack_require__.a = (module, body, hasAwait) => {
/******/ 			var queue;
/******/ 			hasAwait && ((queue = []).d = -1);
/******/ 			var depQueues = new Set();
/******/ 			var exports = module.exports;
/******/ 			var currentDeps;
/******/ 			var outerResolve;
/******/ 			var reject;
/******/ 			var promise = new Promise((resolve, rej) => {
/******/ 				reject = rej;
/******/ 				outerResolve = resolve;
/******/ 			});
/******/ 			promise[webpackExports] = exports;
/******/ 			promise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise["catch"](x => {}));
/******/ 			module.exports = promise;
/******/ 			body((deps) => {
/******/ 				currentDeps = wrapDeps(deps);
/******/ 				var fn;
/******/ 				var getResult = () => (currentDeps.map((d) => {
/******/ 					if(d[webpackError]) throw d[webpackError];
/******/ 					return d[webpackExports];
/******/ 				}))
/******/ 				var promise = new Promise((resolve) => {
/******/ 					fn = () => (resolve(getResult));
/******/ 					fn.r = 0;
/******/ 					var fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));
/******/ 					currentDeps.map((dep) => (dep[webpackQueues](fnQueue)));
/******/ 				});
/******/ 				return fn.r ? promise : getResult();
/******/ 			}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));
/******/ 			queue && queue.d < 0 && (queue.d = 0);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module used 'module' so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./assets/cms/page-admin.js");
/******/ 	
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,