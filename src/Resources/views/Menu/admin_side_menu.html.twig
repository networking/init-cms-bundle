{% extends 'knp_menu.html.twig' %}

{% block root %}
    {%- set listAttributes = item.childrenAttributes|merge({'class': 'menu-nav'}) %}
    {%- set request        = item.extra('request') ?: app.request %}
    {{ block('list') -}}
{% endblock %}

{% block list %}
    {% if item.hasChildren and options.depth is not same as(0) and item.displayChildren %}
        {% import _self as knp_menu %}
        {% if item.level is same as(1) %}
            <div{{ knp_menu.attributes(listAttributes) }}>
                <i class="menu-arrow"></i>
                <ul class="menu-subnav">
                    {{ block('children') }}
                </ul>
            </div>
        {% else %}
            <ul{{ knp_menu.attributes(listAttributes) }}>
                {{ block('children') }}
            </ul>
        {% endif %}
    {% endif %}
{% endblock %}


{% block item %}
    {%- do item.setAttribute('class', (item.attribute('class')~' menu-item')|trim) %}
    {%- do item.setLinkAttribute('class', ' menu-link'|trim) %}
    {% if item.hasChildren %}
        {%- do item.setAttribute('class', (item.attribute('class')~' menu-item-submenu')|trim) %}
        {%- do item.setAttribute('aria-haspopup', 'true') %}
        {%- do item.setAttribute('data-menu-toggle', 'hover') %}
    {% endif %}

    {%- if matcher.isCurrent(item) %}
        {%- do item.setAttribute('class', (item.attribute('class')~' menu-item-active') ) %}
    {%- elseif matcher.isAncestor(item, options.matchingDepth) %}
        {%- do item.setAttribute('class', (item.attribute('class')~' menu-item-open menu-item-here')) %}
    {%- endif %}


    {%- if item.displayed %}
        {#- check role of the group #}
        {%- set display = (item.extra('roles') is empty or is_granted(sonata_admin.adminPool.getOption('role_super_admin')) ) %}
        {%  if not display  %}
            {%- for role in item.extra('roles')%}
                {%- set display = is_granted(role) %}
            {%- endfor %}
        {%- endif %}
    {%- endif %}

    {%- if item.displayed and display|default %}
        {% if not matcher.isAncestor(item) %}
            {%- do item.setChildrenAttribute('class', (item.childrenAttribute('class')~' collapse')|trim) %}
            {% else %}
                {%- do item.setChildrenAttribute('class', (item.childrenAttribute('class')~' show')|trim) %}
         {% endif %}
        {%- do item.setChildrenAttribute('class', (item.childrenAttribute('class')~'   menu-submenu')|trim) %}
        {%- do item.setChildrenAttribute('id', 'submenu' ~item.name|sonata_slugify|trim) %}
            {{ parent() }}
    {% endif %}
{% endblock %}

{% block linkElement %}
    {% apply spaceless %}
        {% set translation_domain = item.extra('label_catalogue', 'messages') %}
        {% if item.extra('on_top') is defined and not item.extra('on_top') %}
        {% else %}
            {% set icon = item.extra('icon') %}
        {% endif %}
        {% set is_link = true %}
        {% import _self as knp_menu %}

        {%- set classes = item.linkAttribute('class') is not empty ? [item.linkAttribute('class')] : [] %}
        {%- set attributes = item.linkAttributes %}

        {%- if matcher.isCurrent(item) %}
            {%- set classes = classes|merge(['menu-item-active']) %}
        {%- elseif matcher.isAncestor(item, options.matchingDepth) %}
            {%- set classes = classes|merge(['menu-item-open menu-item-here']) %}
        {%- endif %}
        {%- if item.actsLikeFirst %}
            {%- set classes = classes|merge([options.firstClass]) %}
        {%- endif %}
        {%- if item.actsLikeLast %}
            {%- set classes = classes|merge([options.lastClass]) %}
        {%- endif %}


        {%- if classes is not empty %}
            {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
        {%- endif %}

        <a href="{{ item.uri }}"{{ knp_menu.attributes(attributes) }}>
                {{ block('label') }}
        </a>
    {% endapply %}
{% endblock %}

{% block spanElement %}
    {% apply spaceless %}
        <a href="javascript:;" class="menu-link menu-toggle"
           aria-expanded="{% if  matcher.isAncestor(item, options.matchingDepth) %}true{% else %}false{% endif %}">
            <i class="menu-icon {{ item.extra('icon')|default('') }}"></i>
                {% set translation_domain = item.extra('label_catalogue') %}
            {{ block('label') }}

            {%- if item.extra('keep_open') is not defined or not item.extra('keep_open') -%}
            <i class="menu-arrow"></i>
            {%- endif -%}
        </a>
    {% endapply %}
{% endblock %}

{% block label %}
    {% if is_link is defined and is_link %}
        {% if icon is defined %}
            <i class="menu-icon {{ icon|default|raw }}"></i>
            {% else %}
            <i class="menu-bullet menu-bullet-dot">
                <span></span>
            </i>
        {% endif %}
    {% endif %}

<span class="menu-text">
    {% if options.allow_safe_labels and item.extra('safe_label', false) %}
        {{ item.label|raw }}
    {% else %}
        {{ item.label|trans({}, translation_domain|default('messages')) }}
    {% endif %}
    </span>
{% endblock %}
