{#
This file is part of the Networking package.

(c) net working AG <info@networking.ch>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.
#}

{% extends '@NetworkingInitCms/CRUD/list.html.twig' %}
{% set active_tab = app.request.get('context') %}

{% block preview %}
{% endblock %}
{% block actions %}
    <a class="btn btn-primary btn-sm menu-dialog-link"
       href="{{ admin.generateUrl('create', {'context' : persistent_parameters.context}) }}">
        <i class="la la-plus icon-white"></i> {{ 'button.create.gallery_item'|trans({}, 'MediaAdmin') }}
    </a>
{% endblock %}

{% block list_filters %}
    {% if not app.request.isxmlhttprequest %}
        {% set name = persistent_parameters.context ? persistent_parameters.context: 'default' %}
        {% if datagrid.filters %}
            <form action="{{ admin.generateUrl('list') }}" method="GET"
                  class="kt-form kt-form--fit mb-15">

                <input type="hidden" name="context" value="{{ persistent_parameters.context }}"/>
                {% if persistent_parameters.provider is defined %}
                    <input type="hidden" name="provider" value="{{ persistent_parameters.provider }}"/>
                {% endif %}
                <input type="hidden" name="active_tab" value="{{ name }}"/>

                <div class="d-flex justify-content-xl-between">
                    {% for filter in admin.datagrid.filters %}
                        <div class="mb-lg-0 mb-6">
                            <label for="{{ form.children[filter.formName].children['value'].vars.id }}">{{ filter.label|trans({}, admin.translationDomain) }}</label>

                            {{ form_widget(form.children[filter.formName].children['type'], {'attr':{'class': 'input-medium advanced-filter' }}
                            ) }}
                            {{ form_widget(form.children[filter.formName].children['value'], {'attr':{'placeholder': filter.label , 'class': 'input-medium'}, 'translation_domain': admin.translationDomain }) }}
                        </div>
                    {% endfor %}
                </div>

                {% set label = admin.label|trans({}, admin.translationDomain) %}
                <div class="row mt-8">
                    <div class="col-lg-12">
                        <input type="hidden" name="filter[_page]" id="filter__page" value="1"/>
                        {% set foo = form.children['_page'].setRendered() %}
                        {% for paramKey, paramValue in admin.persistentParameters %}
                            <input type="hidden" name="{{ paramKey }}" value="{{ paramValue }}"/>
                        {% endfor %}
                        {% set foo = form.children['_page'].setRendered() %}
                        <input type="submit" class="btn btn-primary btn-primary--icon" id="kt_search"
                               value="{{ 'btn_filter'|trans({}, 'NetworkingInitCmsBundle') }}"/>
                        {% if not app.request.isXmlHttpRequest %}
                            <a href="{{ admin.generateUrl('list', {filters: 'reset'}) }}"
                               class="btn btn-secondary btn-secondary--icon">
                            <span>
                                <i class="la la-close"></i>
                                <span>{{ 'link_reset_filter'|trans({'%admin_label%': admin.label}, 'NetworkingInitCmsBundle') }}</span>
                             </span>
                            </a>
                        {% endif %}
                        {{ form_rest(form) }}
                    </div>
                </div>
            </form>
        {% endif %}
        <ul class="nav nav-tabs nav-tabs-line">
            {% for name, context in media_pool.contexts %}
                <li class="nav-item">
                    <a href="{{ admin.generateUrl('list', {'context' : name}) }}"
                       class="nav-link {% if name == persistent_parameters.context %}active{% endif %}">{{ ('media_context.' ~ name)|trans({}) }}</a>
                </li>
            {% endfor %}
        </ul>
    {% endif %}
{% endblock %}

{% block list_table %}
    <div class="tab-content mt-4">
        {% for name, context in media_pool.contexts %}
            <div class="tab-pane {% if (active_tab is null and loop.first) or active_tab == name %}active{% endif %}"
                 id="gallery_{{ name }}">
                <div class="row">
                    <div class="col-md-12">
                        {% set batchactions = admin.batchactions %}
                        {% if datagrid.results|length > 0 %}
                            {% set filterParameters = admin.filterParameters|merge({'context': name}) %}
                            {% if admin.hasRoute('batch') %}
                                <form action="{{ admin.generateUrl('batch', filterParameters) }}" method="POST">
                            {% endif %}
                            <table id="intiCMSDatatable"
                                   class="table table-bordered table-hover table-head-custom table-checkable dataTable no-footer"
                                   style="width:100%">
                                {% block table_header %}
                                    <thead>
                                    <tr>
                                        {% for field_description in admin.list.elements %}
                                            {% if admin.hasRoute('batch') and field_description.getOption('code') == '_batch' and batchactions|length > 0 %}
                                                {% if not app.request.isXmlHttpRequest %}
                                                    <th class="sonata-ba-list-field-header sonata-ba-list-field-header-batch sorting_disabled"
                                                        data-orderable="false">
                                                        <label class="checkbox checkbox-single checkbox-solid checkbox-primary mb-0">
                                                            <input type="checkbox" value="" class="group-checkable">
                                                            <span></span>
                                                        </label>
                                                    </th>
                                                {% endif %}
                                            {% elseif field_description.getOption('code') == '_select' %}
                                                <th class="sonata-ba-list-field-header sonata-ba-list-field-header-select sorting_disabled"
                                                    data-orderable="false">
                                                </th>
                                            {% elseif field_description.name == '_action' and app.request.isXmlHttpRequest %}
                                                {# Action buttons disabled in ajax view! #}
                                            {% elseif field_description.getOption('ajax_hidden') == true and app.request.isXmlHttpRequest %}
                                                {# Disable fields with 'ajax_hidden' option set to true #}
                                            {% else %}
                                                {% set sortable = false %}
                                                {% if field_description.options.sortable is defined and field_description.options.sortable and field_description.name != '_action' %}
                                                    {% set sortable = true %}
                                                {% endif %}

                                                {% apply spaceless %}
                                                    <th {% if not sortable %}data-orderable="false"{% endif %}
                                                        class="{% if loop.index in [1,2] %}nowrap {% endif %}">
                                                        {% if field_description.label and field_description.name != '_action' %}

                                                            {% set translation_domain = admin.translationDomain %}
                                                            {% if field_description.translationDomain %}
                                                                {% set translation_domain = field_description.translationDomain %}
                                                            {% endif %}
                                                            {% if field_description.translationDomain is same as('none') %}
                                                                {{ field_description.label }}
                                                            {% else %}
                                                                {{ field_description.label|trans({}, translation_domain) }}
                                                            {% endif %}
                                                        {% endif %}
                                                    </th>
                                                {% endapply %}
                                            {% endif %}
                                        {% endfor %}
                                    </tr>
                                    </thead>
                                {% endblock %}

                                {% block table_body %}
                                    <tbody>
                                    {% for object in datagrid.results %}
                                        <tr>
                                            {% for field_description in admin.list.elements %}
                                                {{ object|render_list_element(field_description) }}
                                            {% endfor %}
                                        </tr>
                                    {% endfor %}
                                    </tbody>
                                {% endblock %}

                            </table>
                            {% if admin.hasRoute('batch') %}
                                {% if batchactions|length > 0 and not app.request.isxmlhttprequest %}{{ block('batch') }}{% endif %}
                                </form>
                            {% endif %}
                        {% else %}
                            <p class="notice">
                                {{ 'no_result'|trans({}, 'SonataAdminBundle') }}
                            </p>
                        {% endif %}
                    </div>
                </div>
            </div>
        {% endfor %}
    </div>
{% endblock %}

{% block batch %}
    <div class="row">
        <div class="col-xs-5 col-4">
            {% if csrf_token is defined %}
                <input type="hidden" name="_sonata_csrf_token" value="{{ csrf_token }}"/>
            {% endif %}
            <div class="input-group">
                <select name="action" class="input-medium form-control">
                    {% for action, options in batchactions %}
                        <option value="{{ action }}">{{ options.label|trans({}, options.translation_domain|default(admin.translationDomain)) }}</option>
                    {% endfor %}
                </select>
                <div class="input-group-append">
                    <input type="submit" class="btn btn-primary btn-sm batch-dialog-link"
                           value="{{ 'btn_batch'|trans({}, 'SonataAdminBundle') }}">
                </div>
            </div>
        </div>
    </div>
{% endblock %}