{% apply spaceless %}<div id="downloadToken"></div>
<script type="text/javascript">/*<![CDATA[*/
    var listDialog;
    var linkClicked;

    function initializeDialog() {
        if (!listDialog) {
            listDialog = jQuery('#list_dialog');
            listDialog.modal({ height:'auto', width:650, show:false});
            listDialog.on('hide.bs.modal', function () {
                jQuery('input[type=submit]', this).off();
            });
            jQuery(document.body).append(listDialog);
        }
    }

    function createAjaxDialog(event) {
        event.preventDefault();
        event.stopPropagation();
        initializeDialog();
        linkClicked = jQuery(this);
        var url = linkClicked.attr('href');
        if (!url) {
            url = linkClicked.attr('ref');
        }
        jQuery.ajax({
            url:url,
            dataType:'html',
            success:function (html) {
                listDialog.html(html);
                listDialog.modal('show');
            }
        });
    }

    function getCookie( name ) {
        var parts = document.cookie.split(name + "=");
        if (parts.length === 2) return parts.pop().split(";").shift();
    }

    function expireCookie( cName ) {
        document.cookie =
            encodeURIComponent( cName ) +
            "=deleted; expires=" +
            new Date( 0 ).toUTCString();
    }

    function setCursor( docStyle, buttonStyle ) {
        jQuery( ".form-inline" ).css( 'cursor',  docStyle);
        jQuery( ".batch-dialog-link" ).css( 'cursor',  buttonStyle);
    }

    function setFormToken() {
        var downloadToken = new Date().getTime();
        jQuery( "#downloadToken" ).val(downloadToken);
        return downloadToken;
    }

    var downloadTimer;
    var attempts = 80;

    // Prevents double-submits by waiting for a cookie from the server.
    function blockResubmit(form) {
        var downloadToken = setFormToken();
        setCursor( "wait", "wait" );
        form.submit();

        downloadTimer = window.setInterval( function() {
            var token = getCookie( "downloadToken" );


            if( (String(token) === String(downloadToken)) || (attempts === 0) ) {
                unblockSubmit();
                location.reload();
            }

            attempts--;
        }, 1000 );
    }

    function unblockSubmit() {
        setCursor( "auto", "pointer" );
        window.clearInterval( downloadTimer );
        expireCookie( "downloadToken" );
    }



    function createBatchDialog(event) {
        event.preventDefault();
        event.stopPropagation();

        initializeDialog();

        var form = jQuery(this).closest('form');

        if(jQuery('[name^="action"]').val() === 'download'){
            blockResubmit(form);
        }else{
            jQuery(form).ajaxSubmit({
                type:form.attr('method'),
                url:form.attr('action'),
                success:function (html, status, xhr) {

                    // populate the popup container
                    jQuery('.modal-content', listDialog).html(html);
                    var container = jQuery(".sonata-ba-delete", listDialog);
                    var text = container.clone().children().remove().end().text();
                    var containerHtml = container.html();
                    var re = new RegExp(addSlashes(InitCms.trim(text)));
                    containerHtml = containerHtml.replace(re, '');

                    jQuery(".sonata-ba-delete").html(containerHtml);
                    var header = jQuery('h1', listDialog);
                    var headerText = header.html();
                    header.replaceWith(jQuery('<h3>' + headerText + '</h3>'));
                    jQuery('h3', listDialog).wrap('<div class="modal-header" />');
                    jQuery('.modal-header').after(jQuery('<div class="modal-body">' + text + '</div>'));
                    jQuery('.form-actions', listDialog).removeClass('well');
                    jQuery('.form-actions', listDialog).addClass('modal-footer');
                    listDialog.modal('show');

                }
            });
        }
    }

    function addSlashes(string) {
        return string.replace(/\\/g, '\\\\').
            replace(/\u0008/g, '\\b').
            replace(/\t/g, '\\t').
            replace(/\n/g, '\\n').
            replace(/\f/g, '\\f').
            replace(/\r/g, '\\r').
            replace(/'/g, '\\\'').
            replace(/\(/g, '\\(').
            replace(/\)/g, '\\)').
            replace(/\?/g, '\\?').
            replace(/"/g, '\\"');
    }

    (function ($) {
        var ua = navigator.userAgent,
                event = (ua.match(/iPad/i)) ? "touchstart" : "click";

        $(".actions-toggle").on(event, function () {
            $('.row-actions').hide();
            $(this).parent().children('.row-actions').fadeToggle('fast');
        });
        $(".actions-toggle-close").on(event, function () {
            $(this).parent().fadeToggle('fast');
        });
        $('#hidden_filters').on('show hide', function () {
            $('#filter_toggle').toggleClass('filter-close');
            $('#filter_toggle').toggleClass('filter-open');
        });
        $('.show-tooltip').tooltip({placement:'bottom', delay:{ show:800, hide:100 }});
        $('body').on('click', '.dialog-link', createAjaxDialog);
        $('body').on('click', '.batch-dialog-link', createBatchDialog);
        initializeDialog();


    })(jQuery);
/*]]>*/</script>
{% endapply %}