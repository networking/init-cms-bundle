{#

This file is part of the Networking package.

(c) net working AG <info@networking.ch>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}
{% block form %}
    {{ sonata_block_render_event('sonata.admin.edit.form.top', { 'admin': admin, 'object': object }) }}

    {% set url = objectId|default(admin.id(object)) is not null ? 'edit' : 'create' %}

    {% set isAjax = app.request.isXmlHttpRequest or app.request.get('_xml_http_request') %}
    {% if not admin.hasRoute(url) %}
        <div>
            {{ "form_not_available"|trans({}, "SonataAdminBundle") }}
        </div>
    {% else %}


        <form role="form"
              action="{% block sonata_form_action_url %}{{ admin.generateUrl(url, {'id': objectId|default(admin.id(object)), 'uniqid': admin.uniqid, 'subclass': app.request.get('subclass')}) }}{% endblock %}"
                {% if form.vars.multipart %} enctype="multipart/form-data"{% endif %}
                novalidate="novalidate"
                {% block sonata_form_attributes %}{% endblock %}
              method="POST">


            {% if not isAjax %}
                <div class="card">
                    {% endif %}

            {% if isAjax %}
                <div class="modal-header">
                    <h3 class="modal-title">
                        {% set admin_label = admin.getLabel()|trans({}, admin.translationDomain) %}
                        {% if admin.id(object) is not null %}
                            {% set title =  "title_edit"|trans({'%admin_label%': admin_label}, admin.translationDomain) %}
                            {% if  title ==  "title_edit" %}
                                {{ "title_edit"|trans({'%name%': admin.toString(object),'%admin_label%': admin_label }, 'SonataAdminBundle') }}
                            {% else %}
                                {{ title }}
                            {% endif %}
                        {% else %}
                            {% set title =  "title_create"|trans({'%admin_label%': admin_label}, admin.translationDomain) %}
                            {% if title == 'title_create' %}
                                {{ "title_create"|trans({}, 'SonataAdminBundle') }}
                            {% else %}
                                {{ title }}
                            {% endif %}
                        {% endif %}
                    </h3>
                    <!--begin::Close-->
                    <div class="btn btn-icon btn-sm btn-active-light-primary ms-2" data-bs-dismiss="modal" aria-label="Close">
                        <i class="ki-outline ki-cross fs-1"></i>
                    </div>
                    <!--end::Close-->
                </div>
            {% endif %}
            <div class="{{ isAjax?'modal':'card' }}-body">

                {% if form.vars.errors|length > 0 %}
                    <div class="{% if isAjax %}alert alert-danger{% else %}invalid-feedback{% endif %} d-block">
                        {{ form_errors(form) }}
                    </div>
                {% endif %}

                {% block sonata_pre_fieldsets %}{% endblock %}

                {% block sonata_tab_content %}
                    {% import "@NetworkingInitCms/CRUD/base_edit_form_macro.html.twig" as form_helper %}
                    {% set has_tab = ((admin.formtabs|length == 1 and admin.formtabs|keys[0] != 'default') or admin.formtabs|length > 1 ) %}
                    {% if has_tab %}
                        <div class="nav-tabs-custom">
                            <ul class="nav nav-tabs nav-line-tabs" role="tablist">
                                {% for name, form_tab in admin.formtabs %}

                                    {% set tabValid = true %}
                                    {% for code in form_tab['groups']|filter(code => admin.formgroups[code] is defined) %}
                                        {% for field_name in admin.formgroups[code].fields|filter(field_name => form[field_name] is defined) %}
                                            {% if not form[field_name].vars.valid %}{% set tabValid = false %}{% endif %}
                                        {% endfor %}
                                    {% endfor %}

                                    <li class="nav-item">
                                        <a  class="nav-link {% if loop.index == 1 %}active{% endif %}" href="#tab_{{ admin.uniqid }}_{{ loop.index }}"  data-bs-toggle="tab" role="tab">
                                            {{ form_tab.label|trans({}, form_tab.translation_domain ?: admin.translationDomain) }}
                                            {% if not tabValid %}
                                                <i class="fa fa-exclamation-circle text-danger" aria-hidden="true"></i>
                                            {% endif %}
                                            </a>
                                    </li>
                                {% endfor %}
                            </ul>
                            <div class="tab-content">
                                {% for code, form_tab in admin.formtabs %}
                                    <div class="tab-pane fade{% if loop.first %} show active{% endif %}" id="tab_{{ admin.uniqid }}_{{ loop.index }}">
                                        <div class="box-body  container-fluid pt-3">
                                            <div class="sonata-ba-collapsed-fields">
                                                {% if form_tab.description != false %}
                                                    <p>
                                                        {{ form_tab.description|trans({}, form_tab.translation_domain ?: admin.translationDomain) }}
                                                    </p>
                                                {% endif %}
                                                {% if form_helper.render_groups is defined %}

                                                    {% set tab_class = form_tab.class|default('row') %}
                                                    {{ form_helper.render_groups(admin, form, form_tab['groups'], has_tab, tab_class) }}
                                                {% endif %}
                                            </div>
                                        </div>
                                    </div>
                                {% endfor %}
                            </div>
                        </div>
                    {% else %}
                        {% if form_helper.render_groups is defined %}
                            {% set tab_class = admin.formtabs['default'].class|default('row') %}
                            {{ form_helper.render_groups(admin, form, admin.formtabs['default'].groups, has_tab, tab_class) }}
                        {% endif %}
                    {% endif %}
                {% endblock %}

                {% block sonata_post_fieldsets %}{% endblock %}
                {{ form_rest(form ) }}
                <input type="hidden" name="_tab" id="tab_{{ admin.uniqid }}" value="{{ app.request.query.get('_tab') }}">

            </div>

            {% block formactions %}
                {% set admin_label = admin.getLabel()|trans({}, admin.translationDomain) %}
                <div class="{{ isAjax?'modal':'card' }}-footer form-actions">
                    {% if isAjax %}
                        <button class="btn btn-sm btn-light" data-bs-dismiss="modal" type="button"
                                aria-hidden="true">{{ 'button.cancel'|trans({'%admin_label%': admin_label}, 'PageAdmin') }}</button>
                        {% if admin.id(object) %}
                            <input type="submit" class="btn btn-sm btn-primary" name="btn_update"
                                   value="{{ 'btn_update'|trans({'%admin_label%': admin_label}, 'NetworkingInitCmsBundle') }}"/>
                        {% else %}
                            <input type="submit" class="btn btn-sm btn-primary" name="btn_create"
                                   value="{{ 'btn_create'|trans({'%admin_label%': admin_label}, 'NetworkingInitCmsBundle') }}"/>
                        {% endif %}
                    {% else %}
                        <a class="btn btn-sm btn-light"
                           href="{{ admin.generateUrl('list') }}">{{ 'btn_cancel'|trans({}, 'NetworkingInitCmsBundle') }}</a>
                        {% if admin.supportsPreviewMode %}
                            <input class="btn btn-sm btn-info persist-preview" name="btn_preview" type="submit"
                                   value="{{ 'btn_preview'|trans({'%admin_label%': admin_label}, 'NetworkingInitCmsBundle') }}"/>
                        {% endif %}
                        {% if admin.id(object) %}
                            <input type="submit" class="btn btn-sm btn-primary" name="btn_update_and_edit"
                                   value="{{ 'btn_update_and_edit_again'|trans({'%admin_label%': admin_label}, 'NetworkingInitCmsBundle') }}"/>
                            <input type="submit" class="btn btn-sm btn-light" name="btn_update_and_list"
                                   value="{{ 'btn_update_and_return_to_list'|trans({'%admin_label%': admin_label}, 'NetworkingInitCmsBundle') }}"/>

                            {% if admin.hasroute('delete') and admin.isGranted('DELETE', object) and (object.isDeletable() is not defined or  object.isDeletable == 1 ) %}
                                {{ 'delete_or'|trans({}, 'SonataAdminBundle') }}
                                <a class="btn btn-sm btn-danger dialog-link"
                                   href="{{ admin.generateObjectUrl('delete', object) }}">{{ 'link_delete'|trans({}, 'NetworkingInitCmsBundle') }}</a>
                            {% endif %}
                        {% else %}
                            <input class="btn btn-sm btn-primary" type="submit" name="btn_create_and_edit"
                                   value="{{ 'btn_create_and_edit_again'|trans({'%admin_label%': admin_label}, 'NetworkingInitCmsBundle') }}"/>
                            <input type="submit" class="btn btn-sm btn-light" name="btn_create_and_list"
                                   value="{{ 'btn_create_and_return_to_list'|trans({'%admin_label%': admin_label}, 'NetworkingInitCmsBundle') }}"/>
                            <input class="btn btn-sm btn-light" type="submit" name="btn_create_and_create"
                                   value="{{ 'btn_create_and_create_a_new_one'|trans({'%admin_label%': admin_label}, 'NetworkingInitCmsBundle') }}"/>
                        {% endif %}
                    {% endif %}
                </div>
            {% endblock formactions %}

                    {% if not isAjax %}
                </div>
            {% endif %}
        </form>
    {% endif %}

    {{ sonata_block_render_event('sonata.admin.edit.form.bottom', { 'admin': admin, 'object': object }) }}
{% endblock %}
