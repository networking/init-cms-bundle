{% apply spaceless %}
    <script type="text/javascript">/*<![CDATA[*/
        var listDialog;
        var linkClicked;
        var axiosConfig = {headers: {'X-Requested-With': 'XMLHttpRequest'}}

        function initializeDialog() {
            if (!listDialog) {
                listDialog = jQuery('#list_dialog');
                listDialog.modal({height: 'auto', width: 650, show: false});
                listDialog.on('hide.bs.modal', function () {
                    jQuery('input[type=submit]', this).off();
                });
                jQuery(document.body).append(listDialog);
            }
        }

        function createAjaxDialog(event) {
            event.preventDefault();
            event.stopPropagation();
            initializeDialog();
            linkClicked = jQuery(this);
            var url = linkClicked.attr('href');
            if (!url) {
                url = linkClicked.attr('ref');
            }
            axios.get(url,{ ...axiosConfig}).then(function (response) {
                    listDialog.html(response.data);
                    listDialog.modal('show');
            });
        }

        function createBatchDialog(event) {
            event.preventDefault();
            event.stopPropagation();

            initializeDialog();

            var form = jQuery(this).closest('form');

            if (jQuery('[name^="idx[]"]:checked', form).length == 0 && jQuery('[name^="all_elements"]:checked', form).length == 0) {
                createInitCmsMessageBox('warning', '{{ 'flash_batch_empty'|trans([], 'NetworkingInitCmsBundle') }}');
                return;
            }
            var data = form.serialize();
            axios.post(form.attr('action'), data, axiosConfig).then(function (repsonse) {
                var html = repsonse.data;
                listDialog.html(html);
                listDialog.modal('show');
            }).catch(function (error) {

            });
        }

        function addSlashes(string) {
            return string.replace(/\\/g, '\\\\').replace(/\u0008/g, '\\b').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\f/g, '\\f').replace(/\r/g, '\\r').replace(/'/g, '\\\'').replace(/\(/g, '\\(').replace(/\)/g, '\\)').replace(/\?/g, '\\?').replace(/"/g, '\\"');
        }

        (function ($) {
            var ua = navigator.userAgent,
                event = (ua.match(/iPad/i)) ? "touchstart" : "click";

            $('.show-tooltip').tooltip({placement: 'bottom', delay: {show: 800, hide: 100}});
            $('body')
                .on('click', '.dialog-link', createAjaxDialog)
                .on('click', '.batch-dialog-link', createBatchDialog)
                .on('click', '.modal-close', function () {listDialog.modal('hide')});
            initializeDialog();

            var table = $('#intiCMSDatatable').DataTable({
                order: [],
                select: {
                    style: 'multi',
                    selector: 'td:first-child .checkable',
                },
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.10.21/i18n/German.json'
                }
            });

            table.on('change', '.group-checkable', function () {
                var set = $(this).closest('table').find('td:first-child .checkable');
                var checked = $(this).is(':checked');

                $(set).each(function () {
                    if (checked) {
                        $(this).prop('checked', true);
                        table.rows($(this).closest('tr')).select();
                    } else {
                        $(this).prop('checked', false);
                        table.rows($(this).closest('tr')).deselect();
                    }
                });
            });

        })(jQuery);
        /*]]>*/</script>
{% endapply %}