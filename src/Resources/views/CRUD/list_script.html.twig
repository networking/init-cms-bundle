{% apply spaceless %}
    <script type="text/javascript">/*<![CDATA[*/
        var listDialog;
        var linkClicked;
        var axiosConfig = {headers: {'X-Requested-With': 'XMLHttpRequest'}}

        function initializeDialog() {
            if (!listDialog) {
                listDialog = jQuery('#list_dialog');
                listDialog.modal({height: 'auto', width: 650, show: false});
                listDialog.on('hide.bs.modal', function () {
                    jQuery('input[type=submit]', this).off();
                });
                jQuery(document.body).append(listDialog);
            }
        }

        function createAjaxDialog(event) {
            event.preventDefault();
            event.stopPropagation();
            initializeDialog();
            linkClicked = jQuery(this);
            var url = linkClicked.attr('href');
            if (!url) {
                url = linkClicked.attr('ref');
            }
            axios.get(url, {...axiosConfig}).then(function (response) {
                listDialog.html(response.data);
                listDialog.modal('show');
            });
        }

        function createBatchDialog(event) {
            event.preventDefault();
            event.stopPropagation();

            initializeDialog();
            var form = jQuery(event.target).closest('form');

            if (jQuery('[name^="idx[]"]:checked', form).length == 0 && jQuery('[name^="all_elements"]:checked', form).length == 0) {
                createInitCmsMessageBox('warning', '{{ 'flash_batch_empty'|trans([], 'NetworkingInitCmsBundle') }}');
                return;
            }
            var data = form.serialize();
            axios.post(form.attr('action'), data, axiosConfig).then(function (repsonse) {
                var html = repsonse.data;
                listDialog.html(html);
                listDialog.modal('show');
            }).catch(function (error) {

            });
        }

        function addSlashes(string) {
            return string.replace(/\\/g, '\\\\').replace(/\u0008/g, '\\b').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\f/g, '\\f').replace(/\r/g, '\\r').replace(/'/g, '\\\'').replace(/\(/g, '\\(').replace(/\)/g, '\\)').replace(/\?/g, '\\?').replace(/"/g, '\\"');
        }

        $(function () {
            var ua = navigator.userAgent,
                event = (ua.match(/iPad/i)) ? "touchstart" : "click";

            $('.show-tooltip, [data-toggle="tooltip"]').tooltip({placement: 'bottom', delay: {show: 800, hide: 100}});
            $('body')
                .on('click', '.dialog-link', createAjaxDialog)
                .on('click', '.batch-dialog-link', createBatchDialog)
                .on('click', '.modal-close', function () {
                    listDialog.modal('hide')
                });
            initializeDialog();

            var table = $('#intiCMSDatatable').DataTable({
                responsive: true,
                dom: `
                <'row' <'col-sm-12' B>>
                <'row py-3'<'col-sm-12'tr>>
                <'row'<'col-sm-12'tr>><'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 dataTables_pager'lp>>
                `,
                order: [],
                "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "{{ 'all'|trans({}, 'NetworkingInitCmsBundle') }}"]],
                "pagingType": "full_numbers",
                select: {
                    style: 'multi',
                    selector: 'td:first-child .checkable',
                },
                language: {
                    url: '{{ asset('bundles/networkinginitcms/js/lang/datables/'~(app.request.locale|slice(0,2))~'.json') }}'
                },
                buttons: [
                    {
                        extend: 'colvis',
                        columns: ':not(.sonata-ba-list-field-header-batch, .sonata-ba-list-field-header-actions)'
                    },
                    'excel',
                    'print'
                ],
                "bStateSave": true,
                "fnStateSave": function (oSettings, oData) {
                    localStorage.setItem('DataTables_' + window.location.pathname, JSON.stringify(oData));
                },
                "fnStateLoad": function (oSettings) {
                    return JSON.parse(localStorage.getItem('DataTables_' + window.location.pathname));
                }
            });

            table.on('change', '.group-checkable', function () {
                var set = $(this).closest('table').find('td:first-child .checkable');
                var checked = $(this).is(':checked');

                $(set).each(function () {
                    if (checked) {
                        $(this).prop('checked', true);
                        table.rows($(this).closest('tr')).select();
                    } else {
                        $(this).prop('checked', false);
                        table.rows($(this).closest('tr')).deselect();
                    }
                });
            }).on('draw', function () {

                $('.editable-click').each(function (i, e) {
                    var link = $(e);
                    var url = link.data('url');
                    var locale = link.data('locale');
                    var name = link.data('name');
                    var value = link.data('value');
                    var pk = link.data('pk');
                    link.editable({
                        url: url,
                        name: name,
                        value: value,
                        params: function (params) {
                            // make sure pk is always loaded from element
                            params.pk = pk;
                            params.locale = locale;
                            return params;
                        },
                        error: function (response) {
                            response = JSON.parse(response.responseText);
                            return response ? response.message : response;
                        },
                        success: function (response, newValue) {
                            link.data('pk', response.pk);
                            return response;
                        }
                    });
                })
            });
            Admin.add_filters();
        });
        /*]]>*/</script>
{% endapply %}