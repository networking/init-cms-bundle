{#
This file is part of the Networking package.

(c) net working AG <info@networking.ch>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.
#}
{% set id =  admin.uniqid ~'_layout_blocks' %}
{% autoescape false %}
    <!-- edit one association -->
    <script type="text/javascript">
        var tempHtml = {};
        var tempElements = {};

        // handle the add link
        function getLayoutBlockCreateForm(url, data, tempElement) {
            jQuery.ajax({
                url: url,
                data: data,
                success: function (html) {
                    var element = jQuery('#' + tempElement)
                    element.html(html);
                    jQuery('#contentTypeModal').modal('hide');
                    jQuery('#createContentButton').button('reset');
                    jQuery('#contentLoading').hide();
                    jQuery('form', element).on('submit', submitLayoutCreate);
                    jQuery('.cancel', element).on('click', function (e) {
                        element.remove();
                    });
                }
            });
        }

        function reloadPagePreview() {
            // document.getElementById('pagePreview').location.reload();
            document.getElementById('pagePreview').src += '';
        }

        function submitLayoutCreate(event) {
            event.preventDefault();
            jQuery.each(CKEDITOR.instances, function () {
                try {
                    var editor = this;
                    var text = editor.getData();
                    if (editor) {
                        jQuery('#' + editor.name).val(text);
                    }

                } catch (err) {
                }
            });
            var form = jQuery(this);
            var container = form.parent();
            jQuery(form).ajaxSubmit({
                type: form.attr('method'),
                url: form.attr('action'),
                dataType: 'json',
                data: {
                    code: '{{ admin.code }}',
                    uniqId: '{{ admin.uniqid }}',
                    pageId: '{{ admin.id(admin.subject) }}'
                },
                success: function (xhr) {
                    if (xhr.result === 'ok') {
                        createInitCmsMessageBox(xhr.status, xhr.message);
                        jQuery('#field_container_{{ id }}').replaceWith(xhr.html);
                        saveLayoutBlockSort();
                        reloadPagePreview();
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    container.html(xhr.responseText);
                    jQuery('form', container).on('submit', submitLayoutCreate);
                    jQuery('.cancel', container).on('click', function (e) {
                        container.remove();
                    });
                }
            });

            return false;
        }


        function getLayoutBlockEditForm(containerHash, url) {
            var container = jQuery(containerHash);

            if (tempHtml[container.attr('id')]) {
                return;
            }
            jQuery.ajax({
                url: url,
                dataType: 'html',
                success: function (html) {

                    tempHtml[container.attr('id')] = container.html();
                    container.html(html);
                    jQuery('form', container).on('submit', submitLayoutUpdate);
                    jQuery('.cancel', container).on('click', function () {
                        container.html(tempHtml[container.attr('id')]);
                        delete tempHtml[container.attr('id')];
                    })
                }
            });
        }

        function submitLayoutUpdate(event) {
            event.preventDefault();
            jQuery.each(CKEDITOR.instances, function () {
                try {
                    var editor = this;
                    var text = editor.getData();
                    if (editor) {
                        jQuery('#' + editor.name).val(text);
                    }
                } catch (err) {
                }
            });

            var form = jQuery(this);
            var container = form.parent();
            jQuery(form).ajaxSubmit({
                type: form.attr('method'),
                url: form.attr('action'),
                data: {
                    formFieldId: '{{ id }}',
                    code: '{{ admin.code }}',
                    uniqId: '{{ admin.uniqid }}',
                    pageId: '{{ admin.id(admin.subject) }}'
                },
                success: function (html) {
                    delete tempHtml[container.attr('id')];
                    jQuery('#field_container_{{ id }}').replaceWith(html); // replace the html
                    saveLayoutBlockSort();
                    reloadPagePreview();
                },
                error: function (xhr) {
                    container.html(xhr.responseText);
                    jQuery('form', container).on('submit', submitLayoutUpdate);
                    jQuery('.cancel', container).on('click', function (e) {
                        container.html(tempHtml[container.attr('id')]);
                        delete tempHtml[container.attr('id')];
                    });

                },
            });
        }

        function reloadLayoutBlocks() {
            jQuery.ajax({
                type: 'get',
                url: '{{ url('admin_networking_initcms_layoutblock_reload') }}',
                data: {
                    formFieldId: '{{ id }}',
                    code: '{{ admin.code }}',
                    uniqId: '{{ admin.uniqid }}',
                    pageId: '{{ admin.id(admin.subject) }}'
                }, success: function (html) {
                    jQuery('#field_container_{{ id }}').replaceWith(html); // replace the html
                }
            });
        }

        function saveLayoutBlockSort(callback) {
            var zones = [];

            jQuery('ul.sortable').each(function (index, el) {
                var list = jQuery(el);
                var zone_name = list.attr('id').substr(5);
                list.find('a.add-layout').each(function (index, el) {
                    jQuery(el).data('sort-order', index);
                    jQuery(el).data('zone', zone_name);
                })
                zones.push({
                    'zone': zone_name,
                    'layoutBlocks': list.sortable("toArray", {key: "layoutBlock"})
                });
            });

            jQuery.when(submitLayoutSort(zones)).done(function (xhr) {
                if (callback !== undefined) {
                    callback(xhr)
                }

                jQuery('body').trigger('layout:sorted', [xhr]);
            });
        }

        function submitLayoutSort(zones) {
            var dfd = jQuery.Deferred();
            var pageStatus = jQuery('.page_status');
            return jQuery.ajax({
                url: '{{ url('admin_networking_initcms_layoutblock_updateLayoutBlockSort') }}',
                data: {
                    zones: zones,
                    code: '{{ admin.code }}',
                    pageId: '{{ admin.id(admin.subject) }}'
                },
                type: 'post',
                success: function (xhr) {
                    if (xhr.status !== 'error') {
                        if (xhr.pageStatusSettings !== undefined) jQuery('#pageStatusSettings').html(xhr.pageStatusSettings);
                        if (xhr.pageStatus !== undefined) {
                            if (xhr.pageStatus !== "{{ 'status_published'|trans({}, admin.translationDomain) }}") {
                                pageStatus.addClass('color-draft');
                            } else {
                                pageStatus.removeClass('color-draft');
                            }
                            pageStatus.html(xhr.pageStatus);
                        }
                    }
                    dfd.resolve(xhr);
                    reloadPagePreview();
                }
            });
        }

        function onAfterLoad() {

            jQuery('div#field_container_{{ id }} ul.sortable').sortable({
                handle: 'i.fa-arrows-alt',
                opacity: 0.6,
                placeholder: "ui-state-highlight",
                items: 'li.networking-sortable-list',
                connectWith: ".sortable",
                tolerance: 'intersect',
                forcePlaceholderSize: true,
                forceHelperSize: true,
                start: function (event, ui) {
                    jQuery(this).sortable('refreshPositions');

                },
                stop: function (event, ui) {
                    saveLayoutBlockSort(function (xhr) {
                        createInitCmsMessageBox(xhr.messageStatus, xhr.message);
                    });
                    var listItems = jQuery(this).find('.networking-sortable-list');
                    if (listItems.length < 1) {
                        jQuery(this).find(".empty_layout_block").show();
                    } else {
                        jQuery(this).find(".empty_layout_block").hide();
                    }
                },
                update: function (event, ui) {
                    var maxItems = jQuery(this).attr('data-max-items');
                    if (maxItems > 0 && jQuery(this).find('li.networking-sortable-list').length >= maxItems) {
                        jQuery(this).find(".plus_button").hide();
                    } else {
                        jQuery(this).find(".plus_button").show();
                    }
                    var listItems = jQuery(this).find('.networking-sortable-list');
                    if (listItems.length < 1) {
                        jQuery(this).find(".empty_layout_block").show();
                    } else {
                        jQuery(this).find(".empty_layout_block").hide();
                    }
                },
                receive: function (event, ui) {
                    var allowedTypes = eval(jQuery(this).attr('data-content-types'));
                    var maxItems = jQuery(this).attr('data-max-items');
                    var contentType = jQuery(ui.item).attr('data-content-type');

                    if (allowedTypes.length > 0 && jQuery.inArray(contentType, allowedTypes) < 0) {
                        jQuery(ui.placeholder).addClass('ui-state-error');
                        jQuery(ui.sender).sortable('cancel');

                        if (!jQuery(ui.sender).find('.networking-sortable-list').length < 2) {
                            jQuery(ui.sender).find(".empty_layout_block").hide();
                        }
                        return;
                    }

                    if (maxItems > 0 && jQuery(this).find('li.networking-sortable-list').length > maxItems) {
                        jQuery(ui.placeholder).addClass('ui-state-error');
                        jQuery(ui.sender).sortable('cancel');
                        if (!jQuery(ui.sender).find('.networking-sortable-list').length < 2) {
                            jQuery(ui.sender).find(".empty_layout_block").hide();
                        }
                    } else {
                        jQuery(this).find(".empty_layout_block").hide();
                    }
                },
                change: function (event, ui) {
                    jQuery('ul.sortable').each(function (i, e) {
                        var list = jQuery(e);
                        var listItems = list.find('.networking-sortable-list').not('.ui-sortable-helper');
                        console.log(list.attr('id'))
                        console.log(listItems.length)
                        if (listItems.length < 1) {
                            list.find(".empty_layout_block").show();
                        }
                    });
                },
                over: function (event, ui) {
                    var allowedTypes = eval(jQuery(this).attr('data-content-types'));
                    var maxItems = jQuery(this).attr('data-max-items');
                    var contentType = jQuery(ui.item).attr('data-content-type');
                    var placeholder = $(ui.placeholder);

                    if (allowedTypes.length > 0 && jQuery.inArray(contentType, allowedTypes) < 0) {
                        placeholder.css('display', 'none');
                    } else if (maxItems > 0 && jQuery(this).find('li.networking-sortable-list').length >= maxItems) {

                        if (jQuery(ui.sender).attr('id') === jQuery(this).attr('id')) {
                            placeholder.css('display', 'block');
                        } else {
                            placeholder.css('display', 'none');
                        }
                        jQuery(this).find(".empty_layout_block").hide();
                    } else {
                        var height = jQuery(this).find(".empty_layout_block").height();
                        placeholder.css('display', 'block');
                        placeholder.css('height', height + 'px');
                        jQuery(this).find(".empty_layout_block").hide();
                    }
                }

            });
        }

        (function ($) {
            // refresh the sortable option when a new element is added
            onAfterLoad();
            jQuery('body').on('click', '.add-layout', function (ev) {

                ev.preventDefault();
                var link = jQuery(this);

                var restrictedTypes = eval(link.data('value'));
                var selectContentType = jQuery('#selectContentType');
                var contentTypeModal = jQuery('#contentTypeModal');

                selectContentType.find('option').each(function (i) {
                    if (jQuery.inArray($(this).val(), restrictedTypes) < 0 && restrictedTypes.length > 0) {
                        jQuery(this).attr('disabled', 'disabled');
                    } else {
                        jQuery(this).removeAttr('disabled');
                    }
                });
                selectContentType.val(jQuery("#selectContentType option:enabled:first").val());

                contentTypeModal.modal('show');

                contentTypeModal.on('initcms.create_block', function (event) {
                    jQuery('button', '#contentTypeModal').off('click');
                    jQuery('#contentTypeModal').off('initcms.create_block');
                    if (jQuery(this).data('create')) {
                        jQuery('#contentLoading').show();
                        jQuery('#createContentButton').button('loading');
                        var data = {
                            zone: link.data('zone'),
                            sortOrder: link.data('sort-order'),
                            subclass: selectContentType.val(),
                            code: '{{ admin.code }}',
                            uniqId: '{{ admin.uniqid }}',
                            pageId: '{{ admin.id(admin.subject) }}'
                        };
                        var url = '{{ url('admin_networking_initcms_layoutblock_create') }}';
                        var tempelement = 'temp' + Date.now();
                        var element = link.closest('.networking-sort-zone').parent().append('<li id="' + tempelement + '" class="empty_layout_block"></li>');
                        getLayoutBlockCreateForm(url, data, tempelement);


                    }
                });
            }).on('click', '.layout-link', function (event) {
                event.preventDefault();
                getLayoutBlockEditForm($(this).data('container'), $(this).data('href'))
            }).on('click', 'i.delete_block', function () {
                if (confirm('{{ "page_admin.confirm"|trans({}, admin.translationDomain) }}')) {
                    jQuery.ajax({
                        url: '{{ url('admin_networking_initcms_layoutblock_deleteAjax') }}',
                        method: 'POST',
                        data: {
                            id: jQuery(this).attr('data-value'),
                            code: '{{ admin.code }}',
                            uniqId: '{{ admin.uniqid }}',
                            pageId: '{{ admin.id(admin.subject) }}',
                            formFieldId: '{{ id }}',
                            _method: 'DELETE'
                        },
                        success: function (xhr) {
                            createInitCmsMessageBox(xhr.messageStatus, xhr.message);
                            jQuery('#field_container_{{ id }}').replaceWith(xhr.html);
                            saveLayoutBlockSort();
                        }
                    });
                }
            }).on('click', 'i.toggle-active', function () {
                if (confirm('{{ "page_admin.confirm"|trans({}, admin.translationDomain) }}')) {
                    jQuery.ajax({
                        url: '{{ url('admin_networking_initcms_layoutblock_toggleActive') }}',
                        method: 'POST',
                        data: {
                            id: jQuery(this).attr('data-value'),
                            code: '{{ admin.code }}',
                            uniqId: '{{ admin.uniqid }}',
                            pageId: '{{ admin.id(admin.subject) }}',
                            formFieldId: '{{ id }}',
                            _method: 'PUT'
                        },
                        success: function (xhr) {
                            createInitCmsMessageBox(xhr.messageStatus, xhr.message);
                            jQuery('#field_container_{{ id }}').replaceWith(xhr.html);
                            saveLayoutBlockSort();
                        }
                    });
                }
            })
            ;
        })(jQuery);
    </script>

    <!-- / edit one association -->
{% endautoescape %}
