{#
This file is part of the Networking package.

(c) net working AG <info@networking.ch>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.
#}
{% autoescape false %}
    <script type="text/javascript">
        var statusDialog;
        var translationDialog;

        function initializeTranslationDialog() {
            if (!translationDialog) {
                translationDialog = jQuery('#translation_dialog');
                translationDialog.modal({
                    height: 'auto',
                    width: 650,
                    show: false
                });
                translationDialog.on('hide.bs.modal', function () {
                    jQuery('input[type=submit]', this).off();
                });
                jQuery(document.body).append(translationDialog);
                jQuery('form', translationDialog).on('submit', submitTranslationAjaxForm);
            }
        }

        function createTranslationAjaxDialog(event) {
            event.preventDefault();
            event.stopPropagation();

            initializeTranslationDialog();

            var a = jQuery(this);
            var url = a.attr('href');
            if (!url) {
                url = a.attr('ref');
            }

            jQuery.ajax({
                url: url,
                dataType: 'html',
                success: function (html) {
                    // populate the popup container
                    translationDialog.html(html);
                    translationDialog.modal('show');
                }
            });
        }

        function submitTranslationAjaxForm(event) {
            event.preventDefault();
            event.stopPropagation();

            axios.post(this.action, new FormData(this), axiosConfig)
                .then(function (response) {
                    var data = response.data;
                    if (data.result == 'ok') {
                        jQuery('#translationSettings').html(data.html);
                        if (data.message) {
                            createInitCmsMessageBox(data.status, data.message);
                        }
                    } else {
                        createInitCmsMessageBox(data.status, data.message);
                    }
                    translationDialog.modal('hide');
                })
        }
        function initializeStatusDialog() {
            if (!statusDialog) {
                statusDialog = jQuery('#status_dialog');
                statusDialog.modal({
                    height: 'auto',
                    width: 650,
                    show: false
                });
                statusDialog.on('hide.bs.modal', function () {
                    jQuery('input[type=submit]', this).off();
                });
                jQuery(document.body).append(statusDialog);
            }
        }

        function createStatusAjaxDialog(event) {
            event.preventDefault();
            event.stopPropagation();

            initializeStatusDialog();

            var a = jQuery(this);
            var url = a.attr('href');
            if (!url) {
                url = a.attr('ref');
            }

            jQuery.ajax({
                url: url,
                dataType: 'html',
                success: function (html) {
                    // populate the popup container
                    statusDialog.html(html);
                    statusDialog.modal('show');
                }
            });
        }

        function updatePageSettings(event) {
            event.preventDefault();
            event.stopPropagation();
            axios.post(this.action, new FormData(this), axiosConfig)
                .then(function (response) {
                    var data = response.data;
                    var pageStatus = $('.page_status');
                    if (data.pageStatus !== "{{ 'status_published'|trans({}, admin.translationDomain) }}") {
                        pageStatus.addClass('color-draft');
                    } else {
                        pageStatus.removeClass('color-draft');
                    }
                    pageStatus.html(data.pageStatus);
                    $('.page_title').html(data.title);
                    $('#pageStatusSettings').html(data.pageStatusSettings);
                    reloadLayoutBlocks();
                    createInitCmsMessageBox(data.messageStatus, data.message);
                })
                .catch(function (error) {
                    $('#page_settings').html(error.response.data);
                    $('form', '#page_settings').bind('submit', updatePageSettings);
                    createInitCmsMessageBox('error', 'settings not saved');
                })
        };

        function updateMetaSettings(event) {
            event.preventDefault();
            event.stopPropagation();
            axios.post(this.action, new FormData(this), {params: {'is_meta': true}, ...axiosConfig})
                .then(function (response) {
                    var data = response.data;
                    var pageStatus = $('.page_status');
                    if (data.pageStatus !== "{{ 'status_published'|trans({}, admin.translationDomain) }}") {
                        pageStatus.addClass('color-draft');
                    } else {
                        pageStatus.removeClass('color-draft');
                    }
                    pageStatus.html(data.pageStatus);
                    $('.page_title').html(data.title);
                    $('#pageStatusSettings').html(data.pageStatusSettings);
                    reloadLayoutBlocks();
                    createInitCmsMessageBox(data.messageStatus, data.message);
                })
                .catch(function (error) {
                    $('#meta_settings').html(error.response.data);
                    $('form', '#meta_settings').bind('submit', updateMetaSettings);
                    createInitCmsMessageBox('error', 'settings not saved');
                })
        }

        function openMenuDialog(event, ui) {
            event.preventDefault();
            event.stopPropagation();

            $('#confirmMenuCreation').modal('show');
            $('#show_now_confirm_dialog').attr('checked', false);

            $('body').on('click', '#btn_create_menu', function () {
                if ($('#show_now_confirm_dialog').attr('checked')) {
                    window.location = ui.href + '?show_now_confirm_dialog=1';
                } else {
                    window.location = ui.href;
                }
            });
        }

        $(function () {
            $('form', '#page_settings').bind('submit', updatePageSettings);
            $('form', '#meta_settings').bind('submit', updateMetaSettings);

            $('body')
                .on('change', '#{{ admin.uniqid }}_locale', function () {
                    var locale = $(this).val();
                    $.getJSON(
                        '{{ admin.generateUrl('parentPageList') }}',
                        {locale: locale},
                        function (data) {
                            var parentPages = $('#{{ admin.getUniqid }}_parent');
                            parentPages.empty();
                            parentPages.append($('<option></option>'));
                            $.each(data, function (k, v) {
                                if (v) {
                                    parentPages.append($('<option></option>').val(k).html(v));
                                }
                            });
                        }
                    );
                })
                .on('change', '#{{ admin.uniqid }}_parent', function (e) {
                    var path = $('#{{ admin.uniqid }}_url').val();
                    var pageId = e.val;
                    if (pageId === '') {
                        $('#help_{{ admin.uniqid }}_url').html('/' + path);
                    } else {
                        if (pageId === undefined) {
                            pageId = $("#{{ admin.uniqid }}_parent").val();
                        }
                        $.getJSON(
                            '{{ admin.generateUrl('getPath') }}',
                            {'page_id': pageId, 'path': path},
                            function (xhr) {
                                $('#help_{{ admin.uniqid }}_url').html(xhr.path);
                            }
                        );
                    }
                })
                .on('change', '#{{ admin.uniqid }}_url', function () {
                    $("#{{ admin.uniqid }}_parent").trigger('change');
                })
                .on('click', '.status-dialog-link', createStatusAjaxDialog)
                .on('click', '.translation-dialog-link', createTranslationAjaxDialog)


            {% if not app.user.getAdminSetting('menuAdmin.show_now_confirm_dialog') %}

            $('.menu_add_link').on('click', function (event) {
                $('#menu_info_text').html('{{ 'info.create_menu_item'|trans({}, admin.translationDomain)|replace({"\n": ' '}) }}');
                $('#confirmMenuCreation .modal-header h4').html(this.title);
                openMenuDialog(event, this);
            });

            $('.menu_edit_link').on('click', function (event) {
                $('#menu_info_text').html('{{ 'info.edit_menu_item'|trans({}, admin.translationDomain)|replace({"\n": ' '}) }}');
                $('#confirmMenuCreation .modal-header h4').html('{{ 'legend.edit_menu'|trans({}, admin.translationDomain)|replace({"\n": ' '}) }}');
                openMenuDialog(event, this);

            });
            {% endif %}
        });
    </script>
{% endautoescape %}
