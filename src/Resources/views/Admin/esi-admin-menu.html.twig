{% extends 'knp_menu.html.twig' %}

{#<!--begin::Menu-->#}

{#<!--end::Menu-->#}


{% block root %}
    {% set listAttributes = item.childrenAttributes %}
    {{ block('list') -}}
{% endblock %}



{% block item %}
    {% if item.displayed %}
        {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
        {%- if matcher.isCurrent(item) %}
            {%- set classes = classes|merge([options.currentClass]) %}
        {%- elseif matcher.isAncestor(item, options.matchingDepth) %}
            {%- set classes = classes|merge([options.ancestorClass]) %}
        {%- endif %}
        {%- if item.actsLikeFirst %}
            {%- set classes = classes|merge([options.firstClass]) %}
        {%- endif %}
        {%- if item.actsLikeLast %}
            {%- set classes = classes|merge([options.lastClass]) %}
        {%- endif %}

        {# Mark item as "leaf" (no children) or as "branch" (has children that are displayed) #}
        {% if item.hasChildren and options.depth is not same as(0) %}
            {% if options.branch_class is not empty and item.displayChildren %}
                {%- set classes = classes|merge([options.branch_class]) %}
            {% endif %}
        {% elseif options.leaf_class is not empty %}
            {%- set classes = classes|merge([options.leaf_class]) %}
        {%- endif %}



        {%- set attributes = item.attributes %}
        {%- if classes is not empty %}
            {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
        {%- endif %}
        {% import _self as knp_menu %}
        <li {{ knp_menu.attributes(attributes) }}>

            {{ block('linkElement') }}
            {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class'), 'dropdown-menu'] : ['dropdown-menu'] %}
            {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}
            {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}
            {{ block('list') }}
        </li>
    {% endif %}
{% endblock %}

{% block linkElement %}{% import _self as knp_menu %}
    {% set linkClass = item.level > 1 ?'dropdown-item':'nav-link' %}

    {% if item.hasChildren %}
        {% set linkClass = linkClass ~ ' dropdown-toggle' %}
        {% set linkAttributes = item.linkAttributes|merge({'class': linkClass }) %}
        {% else %}
            {%- set childrenClasses = item.linkAttribute('class') is not empty ? [item.linkAttribute('class'), linkClass] : [linkClass] %}
            {%- set linkAttributes = item.linkAttributes|merge({'class': childrenClasses|join(' ') }) %}
    {% endif %}


    <a href="{{ item.uri?? '#' }}" {{ knp_menu.attributes(linkAttributes) }}>
        {{ block('label') }}</a>
{% endblock %}

{% block label %}
    {% set translation_domain = item.extra('translation_domain', 'messages') %}
    {% if options.allow_safe_labels and item.getExtra('safe_label', false) %}
        {{ item.label|raw }}
    {% else %}
        {{ item.label|trans({}, translation_domain|default('messages')) }}
    {% endif %}
{% endblock %}