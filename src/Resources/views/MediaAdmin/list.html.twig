{#

This file is part of the Networking package.

(c) net working AG <info@networking.ch>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}

{% extends '@NetworkingInitCms/CRUD/list.html.twig' %}
{% block stylesheets %}
    <link rel="stylesheet"
          href="{{ asset('bundles/networkinginitcms/vendor/ios-html5-drag-drop-shim/release/default.css') }}">
    <link rel="stylesheet"
          href="{{ asset('bundles/networkinginitcms/vendor/featherlight/src/featherlight.css') }}">
    {{ parent() }}
{% endblock %}

{% block filter_title %}{{ ('media_context.' ~ persistent_parameters.context)|trans({}) }}{% endblock %}

{% form_theme form '@NetworkingInitCms/Form/form_admin_fields.html.twig' %}
{% set active_tab = app.request.get('context') %}
{% block javascripts %}
    {{ parent() }}
    {% include '@NetworkingInitCms/MediaAdmin/list_script_draggable.html.twig' %}
{% endblock %}

{% block preview %}
{% endblock %}

{% block actions %}
    {# create button #}
    {% if galleryListMode is defined and not galleryListMode %}
            {% set create_text =  'link_action_create'|trans({}, admin.translationDomain) %}
            {% if create_text == 'link_action_create' %}
                {% set create_text =  'link_action_create'|trans({}, 'SonataAdminBundle') %}
            {% endif %}
            {% for code, provider in providers %}
                <a href="{{ admin.generateUrl('create', {'provider': provider.name}) }}"
                   class="btn btn-primary dialog-link"
                   data-toggle="tooltip"
                   data-placement="top"
                   title="{{ provider.providerMetadata.description|trans({}, 'MediaAdmin') }}">

                    {% set icon = provider.providerMetadata.option('class') %}
                    {% if provider.name == 'sonata.media.provider.vimeo' %}
                        {% set icon = 'la la-vimeo-square' %}
                    {% endif %}

                    {% if provider.name == 'sonata.media.provider.youtube' %}
                        {% set icon = 'la la-youtube' %}
                    {% endif %}

                    {% if provider.name == 'sonata.media.provider.file' %}
                        {% set icon = 'la la-file' %}
                    {% endif %}

                    {% if provider.name == 'sonata.media.provider.image' %}
                        {% set icon = 'la la-image' %}
                    {% endif %}

                    <i class="la la-plus"></i> <i class="{{ icon }}"></i>
                    {{ provider.providerMetadata.title|trans({}, 'MediaAdmin') }}

                </a>&nbsp;
            {% else %}
                <span class="alert alert-info">{{ 'no_provider_available'|trans({}, 'SonataMediaBundle') }}</span>
            {% endfor %}
    {% endif %}
{% endblock %}

{% block list_filters %}
    {% set name = persistent_parameters.context ? persistent_parameters.context: 'default' %}
    {% if datagrid.filters %}
        <form action="{{ admin.generateUrl('list') }}" method="GET" id="filter-form" class="kt-form kt-form--fit mb-15">

            <input type="hidden" name="context" value="{{ persistent_parameters.context }}"/>
            {% if persistent_parameters.provider is defined %}
                <input type="hidden" name="provider" value="{{ persistent_parameters.provider }}"/>
            {% endif %}
            <input type="hidden" name="active_tab" value="{{ name }}"/>

            <div class="d-flex justify-content-xl-between">
                {% set withAdvancedFilter = false %}
                {% for filter in admin.datagrid.filters %}
                    {% set filterActive = ((filter.isActive() and filter.options['show_filter'] is null) or (filter.options['show_filter'] is same as(true))) and not admin.isDefaultFilter(filter.formName) %}
                    {% set filterVisible = filter.options['show_filter'] is same as(true) or filter.options['show_filter'] is null %}
                    <div class="mb-lg-0 mb-6" sonata-filter="{{ filterVisible ? 'true' : 'false' }}" style="display: {% if filterActive or filterVisible %}block{% else %}none{% endif %}">
                        {% if filter.label is not same as(false) %}
                            <label for="{{ form[filter.formName].children['value'].vars.id }}" class="control-label">{{ filter.label|trans({}, filter.translationDomain ?: admin.translationDomain) }}</label>
                        {% endif %}
                        {% set attr = form[filter.formName].children['type'].vars.attr|default({}) %}

                        <div class="advanced-filter">
                            {{ form_widget(form[filter.formName].children['type'], {'attr':  attr}) }}
                        </div>

                        <div >
                            {{ form_widget(form[filter.formName].children['value']) }}
                        </div>
{#                        <div class="col-sm-1">#}
{#                            <label class="control-label">#}
{#                                <a href="#" class="sonata-toggle-filter sonata-ba-action" filter-target="filter-{{ admin.uniqid }}-{{ filter.name }}" filter-container="filter-container-{{ admin.uniqid() }}">#}
{#                                    <i class="fa fa-minus-circle" aria-hidden="true"></i>#}
{#                                </a>#}
{#                            </label>#}
{#                        </div>#}
                    </div>
                    {% if filter.options['advanced_filter'] %}
                        {% set withAdvancedFilter = true %}
                    {% endif %}
                {% endfor %}
            </div>
            <div class="row mt-8">
                <div class="col-lg-12">
                    {% if admin.hasActiveSubclass %}
                        <input type="hidden" name="subclass" id="filter_subclass"
                               value="{{ admin.activeSubclassCode }}"/>
                    {% endif %}
                    <input type="hidden" name="filter[_page]" id="filter__page" value="1"/>
                    {% set foo = form['_page'].setRendered() %}
                    {{ form_rest(form) }}
                    {% for paramKey, paramValue in admin.persistentParameters %}
                        <input type="hidden" name="{{ paramKey }}" value="{{ paramValue }}"/>
                    {% endfor %}
                    <button type="submit" class="btn btn-primary btn-primary--icon" id="kt_search">
                            <span>
                                <i class="la la-search"></i>
                                <span>{{ 'btn_filter'|trans({}, 'NetworkingInitCmsBundle') }}</span>
                             </span>
                    </button>
                    <a href="{{ admin.generateUrl('list', {filters: 'reset'}) }}"
                       class="btn btn-secondary btn-secondary--icon">
                            <span>
                                <i class="la la-close"></i>
                                <span>{{ 'link_reset_filter'|trans({'%admin_label%': admin.label}, 'NetworkingInitCmsBundle') }}</span>
                             </span>
                    </a>

                    {% if withAdvancedFilter %}
                            <a href="#" class="has-action" data-toggle="advanced-filter">
                                <i class="la la-cogs" aria-hidden="true"></i>
                                {{ 'btn_advanced_filters'|trans({}, 'SonataAdminBundle') }}
                            </a>
                    {% endif %}
                </div>
            </div>
        </form>
    {% endif %}

    <ul class="nav nav-tabs nav-tabs-line">
        {% if galleryListMode and persistent_parameters.context %}
            <li class="nav-item">
                <a href="{{ admin.generateUrl('list', {'context' : persistent_parameters.context}) }}"  class="nav-link {% if name == persistent_parameters.context %}active{% endif %}">{{ ('media_context.' ~ persistent_parameters.context)|trans({}) }}</a>
            </li>
        {% else %}
            {% for name, context in media_pool.contexts %}
                <li class="nav-item">
                    <a href="{{ admin.generateUrl('list', {'context' : name, 'provider' : null} ) }}" class="nav-link {% if name == persistent_parameters.context %}active{% endif %}">{{ ('media_context.' ~ name)|trans({}) }}</a>
                </li>
            {% endfor %}
        {% endif %}
    </ul>
{% endblock %}

{% block list_table %}
    {% if not app.request.isXmlHttpRequest %}
    <div id="objectList">
        {% endif %}
        <div class="{% if not app.request.isxmlhttprequest %}row{% endif %}">
            <div class="{% if not app.request.isxmlhttprequest %}col-md-12{% endif %}">

                {# provider #}
                <div class="clearfix">&nbsp;</div>
                {% set filterParameters = admin.filterParameters %}
                {% set batchactions = admin.batchactions %}
                {% if admin.hasRoute('batch') %}
                <form action="{{ admin.generateUrl('batch', {'filter': filterParameters}) }}" id="batchForm" method="POST">
                    <input type="hidden" name="_sonata_csrf_token" value="{{ csrf_token }}"/>
                    {% endif %}
                    <div class="row">
                        <div class="col-sm-6">

                            {% set providers = media_pool.getProviderNamesByContext(persistent_parameters.context) %}
                            {% if providers|length > 1 %}
                                <strong>{{ "label.select_provider"|trans({}, 'MediaAdmin') }}</strong>
                                <div class="btn-group btn-group-sm">
                                    <a class="btn btn-sm btn-{{ persistent_parameters.provider ? 'default': 'primary' }}"
                                       href="{{ admin.generateUrl('list', {'context': persistent_parameters.context, 'provider': null, 'active_tab' : persistent_parameters.context}) }}">{{ "link.all_providers"|trans({}, 'MediaAdmin') }}</a>
                                    {% for provider_name in providers %}
                                        <a class="btn btn-sm btn-{{ persistent_parameters.provider == provider_name? 'primary':'default' }}"
                                           href="{{ admin.generateUrl('list', {'context': persistent_parameters.context, 'provider': provider_name, 'active_tab' : persistent_parameters.context}) }}">{{ provider_name|trans({}) }}</a>
                                    {% endfor %}
                                </div>&nbsp;
                            {% endif %}
                            {% if not app.request.isxmlhttprequest %}
                                <input type="hidden" name="action">
                                <span class="batch-actions" style="display: none;">
                            <a href="#" class="btn btn-danger batch btn-sm batch" data-value="delete">
                                <i class="la la-trash"></i> {{ 'action_delete'|trans({}, 'SonataAdminBundle') }}
                            </a>
                        </span>
                            {% endif %}
                        </div>
                        <div class="col-sm-6 sort-buttons align-right">
                            <strong>{{ 'label.sort_by'|trans({}, 'MediaAdmin') }}:</strong>

                            <div class="btn-group btn-group-sm">

                                {% for field_description in admin.list.elements %}
                                    {% if field_description.options.sortable is defined and field_description.options.sortable %}

                                        {% set sortable             = true %}
                                        {% set current              = datagrid.values._sort_by == field_description %}
                                        {% set sort_parameters      = admin.modelmanager.sortparameters(field_description, datagrid) %}
                                        {% set sort_active_class    = current ? 'sonata-ba-list-field-order-active' : '' %}
                                        {% set sort_by              = current ? datagrid.values._sort_order : field_description.options._sort_order %}

                                        {% if sortable %}
                                            <a href="{{ admin.generateUrl('list', sort_parameters) }}" class="btn btn-sm btn-{{ sort_active_class ? 'primary':'default' }}">{% endif %}
                                        {% if sort_active_class %}
                                            <i class="la la-chevron-{{ sort_by|lower == 'desc'? 'up':'down' }}"></i>
                                        {% endif %}
                                        {{ field_description.label|trans({}, admin.translationDomain) }}
                                        </a>
                                    {% endif %}
                                {% endfor %}
                            </div>
                        </div>
                        <div class="clearfix"><p>&nbsp;</p></div>
                    </div>


                    <div class="row">
                        {% if admin.showTagTree  %}
                            <div class="col-md-3 col-xs-12">
                                <div id="tagsContainer" data-tags-json="{{ tagJson|json_encode }}">
{#                                    {% include "@NetworkingInitCms/TagAdmin/tags.html.twig" with {'noSort': app.request.isXmlHttpRequest, 'tags': tags, 'lastItem': lastItem, 'tagAdmin': tagAdmin} %}#}
                                </div>
                                {% if not app.request.isXmlHttpRequest and tagAdmin.isGranted('CREATE') %}
                                    <hr>
                                    {% set create_text =  'link_action_create'|trans({}, tagAdmin.translationDomain) %}
                                    {% if create_text == 'link_action_create' %}
                                        {% set create_text =  'link_action_create'|trans({}, 'SonataAdminBundle') %}
                                    {% endif %}
                                    <a class="btn btn-primary btn-sm tag-dialog-link"
                                       href="{{ tagAdmin.generateUrl('create') }}">
                                        <i class="la la-plus"></i> {{ create_text }}
                                    </a>
                                {% endif %}
                            </div>
                        {% endif %}
                        <div id="item_list" class="col-md-{{ admin.showTagTree?'9':'12' }} col-xs-12">
                            {% if datagrid.results|length > 0 %}
                                {% include "@NetworkingInitCms/MediaAdmin/list_items.html.twig" %}
                            {% else %}
                                <p class="notice">
                                    {{ 'no_result'|trans({}, 'NetworkingInitCmsBundle') }}
                                </p>
                            {% endif %}
                        </div>

                    </div>

                    {% if admin.isGranted("EXPORT") and admin.getExportFormats()|length and (galleryListMode is not defined or not galleryListMode) %}
                        <p>
                            {{ "label_export_download"|trans({}, "NetworkingInitCmsBundle") }}
                            :
                            {% for format in admin.getExportFormats() %}
                                <a
                                href="{{ admin.generateUrl('export', admin.modelmanager.paginationparameters(datagrid, 0) + {'format' : format}) }}"
                                class="link-underlined">{{ format }}</a>{% if not loop.last %},{% endif %}
                            {% endfor %}
                        </p>
                    {% endif %}

                    {% if admin.hasRoute('batch') %}
                </form>
                {% endif %}
            </div>
        </div>
        {% if not app.request.isXmlHttpRequest %}
        <div class="modal fade" tabindex="-1" role="dialog" id="tag_dialog">
            <div class="modal-dialog"></div>
        </div>
    </div>
    {% else %}
        <script type="text/javascript">
            console.log('hello')
            function refreshList(filters) {
                if (!filters) {
                    filters = {}
                }
                $.get(
                    "{{ admin.generateUrl('refresh_list')|raw }}",
                    filters,
                    function (xhr) {
                        $('#item_list').html(xhr);
                        $(".modal-body").animate({scrollTop: $('#item_list').scrollTop()}, "slow");
                    }
                );
            }
            $(function (){
                var lastLink = '';
                var tagsContainer = $('#tagsContainer');
                var treeData = tagsContainer.data('tags-json');
                Admin.add_filters();
                tagsContainer
                    .on('destroy.jstree', function (){
                    })
                    .jstree({
                        "types": {
                            "default": {
                                "icon": "fa fa-folder text-primary icon-2x"
                            },
                            "file": {
                                "icon": "fa fa-file text-primary icon-2x"
                            }
                        },
                        "plugins": [
                            "types",
                            "sort"
                        ],
                        'core': {
                            "themes" : {
                                "variant" : "large"
                            },
                            data: function(node, cb){
                                cb(treeData)
                            }
                        },
                        "sort": function(a, b) {
                            a1 = this.get_node(a);
                            b1 = this.get_node(b);
                            if(a1.data['show_first']){
                                return -1;
                            }

                            if(b1.data['show_first']){
                                return 1;
                            }
                            return (a1.text.toLowerCase() > b1.text.toLowerCase() ) ? 1 : -1;
                        }
                    });

                tagsContainer.on('click', '.tag_link', function (e) {
                    e.preventDefault();
                    var tagId = $(e.target).data('pk');
                    refreshList({'filter': {'tags': {'value': tagId}}});
                });

                tagsContainer.on('click', '.show_all_media', function (e) {
                    e.preventDefault();
                    refreshList({'filter': {'_page': 1}});
                });

            })
        </script>
    {% endif %}
{% endblock %}

{% block before_body_end %}
    {{ parent() }}
    {% include '@NetworkingInitCms/MediaAdmin/list_script.html.twig' %}
{% endblock %}


