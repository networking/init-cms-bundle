{% set context = persistent_parameters.context ? persistent_parameters.context: 'default' %}
{% set selected = datagrid.values.tags?'#tag_link_'~datagrid.values.tags.value:'.show_all_media' %}
<script src="{{ asset('bundles/networkinginitcms/vendor/nestedSortable/jquery.mjs.nestedSortable.js') }}" type="text/javascript"></script>
<script>
    var tagDialog;
    var lastLink = $('{{ selected }}');
    function initializeTagDialog() {
        if (!tagDialog) {
            tagDialog = jQuery('#tag_dialog');
            tagDialog.modal({
                height: 'auto',
                width: 650,
                show: false
            });

            tagDialog.on('hide.bs.modal', function (e) {
                jQuery('input[type=submit]', this).off();
            });
            tagDialog.on('shown.bs.modal', function(){
                jQuery('input.tag_name_input').focus();
            });
            jQuery(document.body).append(tagDialog);
            jQuery(tagDialog).on('submit', 'form',  submitAjaxTagForm);
        }
    }

    function submitAjaxBatchForm(event) {
        event.preventDefault();
        event.stopPropagation();

        var form = jQuery(this).closest('form');

        if (jQuery('[name^="idx[]"]:checked', form).length === 0 && jQuery('[name^="all_elements"]:checked', form).length === 0) {
            InitCms.createInitCmsMessageBox('info', '{{ 'flash_batch_empty'|trans([], 'NetworkingInitCmsBundle') }}');
            return;
        }

        jQuery(form).ajaxSubmit({
            type: form.attr('method'),
            url: form.attr('action'),
            dataType: 'json',
            success: function (xhr) {
                if (xhr.result === 'ok') {
                    InitCms.createInitCmsMessageBox(xhr.status, xhr.message);
                    $('.batch-actions').hide();
                    refreshList();
                }
            }
        });

    }

    function createAjaxTagDialog(event) {
        event.preventDefault();
        event.stopPropagation();

        initializeTagDialog();

        var a = jQuery(this);
        var url = a.attr('href');
        if (!url) {
            url = a.attr('ref');
        }

        jQuery.ajax({
            url: url,
            dataType: 'html',
            success: function (html) {
                // populate the popup container
                tagDialog.html(html);
                tagDialog.modal('show');
            }
        });
    }

    function submitAjaxTagForm(event) {
        event.preventDefault();
        event.stopPropagation();

        var form = jQuery(this);

        jQuery(form).ajaxSubmit({
            type: form.attr('method'),
            url: form.attr('action'),
            dataType: 'json',
            success: function (xhr) {
                if (xhr.result == 'ok') {
                    tagDialog.modal('hide');
                    InitCms.createInitCmsMessageBox(xhr.status, xhr.message);
                    reloadSortTree(xhr.html);
                }
            },
            error: function (xhr, textStatus, errorThrown) {
                tagDialog.html(xhr.responseText);
            }
        });
    }

    function reloadSortTree(html){
        jQuery('#tagsContainer').html(html);
        setUpSortTree();
        lastLink = $('.show_all_media');
        var lastItem = $('li.last-item');
        lastItem.parents('li').toggleClass('mjs-nestedSortable-collapsed').toggleClass('mjs-nestedSortable-expanded');
        lastItem.find('> div > a.tag_link').trigger('click');
    }

    function setUpSortTree(){

        $('.ui-sortable').nestedSortable({
            disableNestingClass: 'no-nest',
            handle: 'i.glyphicon',
            listType: 'ul',
            items: 'li',
            opacity: .6,
            placeholder: 'placeholder',
            revert: 250,
            tabSize: 10,
            toleranceElement: 'div.menu_item',
            isTree: true,
            forcePlaceholderSize: true,
            forceHelperSize: true,
            startCollapsed: true,
            expandOnHover: 100,
            excludeRoot:true,
            disabledClass: 'no-sort',
            isAllowed: function(placeholder, placeholderParent, currentItem) {
                var allowed = true;
                var currentId = $(currentItem).attr('id');
                var currentText = $(currentItem).find('> div.handle > a.tag_link').text();

                if(placeholderParent){
                    $(placeholderParent[0]).find(' > ul > li.sortable-tag').each(function(i, e){
                        if(currentId != $(e).attr('id')){
                            if($(e).find('> div.handle > a.tag_link').text().toLowerCase() === currentText.toLowerCase() ){allowed = false;}
                        }
                    });
                }else{
                    $('#tag-tree').find(' > li.sortable-tag').each(function(i, e){
                        if(currentId != $(e).attr('id')){
                            if($(e).find('> div > a.tag_link').text().toLowerCase() === currentText.toLowerCase() ){ allowed = false; }
                        }
                    });
                }
                return allowed;
            },
            update: function () {
                updateTree(this)
            },
            stop: function(e, ui) {
                var list = ui.item.context.parentElement;
                sortList(list);
            },
            expand: function(){
                $('li.mjs-nestedSortable-hovering > div > i.glyphicon-folder-close').toggleClass('glyphicon-folder-close').toggleClass('glyphicon-folder-open')
            }
        });

        $('.tag_link').editable({
            'toggle': 'manual',
            'url': '{{ tagAdmin.generateUrl('inline_edit') }}',
            'name': 'name'
        }).on('contextmenu', function(e){
            $(this).editable('show');
            e.preventDefault();
        }).on('save', function(e, params){
            $(this).parent().closest('li').data('tag-name', params.newValue);
        }).on('hidden', function(e, r){
            if(r === 'save'){
                var list = $(this).parent().closest('ul');
                sortList(list);
                history.replaceState({time: jQuery.now() }, 'updated', '{{ admin.generateUrl('list', {'context': context}) }}&time='+jQuery.now());
            }
        });
    }

    function sortList(list){
        $(list).find(' > li.sortable-tag').sort(function(a,b){
            var keyA = $(a).data('tag-name').toString().toLowerCase();
            var keyB = $(b).data('tag-name').toString().toLowerCase();
            return (keyA < keyB ? -1 : (keyA > keyB ? +1 : 0));
        }).appendTo( $(list) );
    }

    function updateTree(e) {
        jQuery.post(
            "{{ tagAdmin.generateUrl('update_tree') }}",
            {"nodes": jQuery(e).nestedSortable('toArray')},
            function (xhr) {
                InitCms.createInitCmsMessageBox(xhr.status, xhr.message);
                history.replaceState({time: jQuery.now() }, 'updated', '{{ admin.generateUrl('list', {'context': context}) }}&time='+jQuery.now());
            }
        );
    }

    function refreshList(filters){
        if(!filters){
            filters = {}
        }
        $.get(
            "{{ admin.generateUrl('refresh_list')|raw }}",
            filters,
            function(xhr){
                $('#item_list').html(xhr);
                $("html, body").animate({ scrollTop: $('#item_list').scrollTop() }, "slow");
            }
        );

        history.replaceState({time: jQuery.now() }, 'updated', '{{ admin.generateUrl('list', {'context': context})|raw }}&time='+jQuery.now());
    }


    $(function(){
        var body = $('body');

        body.on('html-received', function(event, html){

            console.log(html);

            reloadSortTree(html);
        });


        var ua = navigator.userAgent, event = (ua.match(/iPad/i)) ? "touchstart" : "click";

        body.on('click', '.delete_check_box', function(){
            var active = false;
            $('.delete_check_box').each(function(i, item){
                if(item.checked){
                    $(item).addClass('ui-selected');
                    active = true;
                }else{
                    $(item).removeClass('ui-selected');
                }
            });
            if(active){
                $('.batch-actions').fadeIn();
            }else{
                $('.batch-actions').fadeOut();
            }
        });

        $('.content-main').on('click', "button[type='submit']", function(e){
            $("input[name='action']").val(this.value);
        });

        body.on('click', '.tag_link', function(e, noLoad){
            e.preventDefault();
            e.stopPropagation();

            if(lastLink){
                lastLink.parent().removeClass('info');
                lastLink.siblings('a.dialog-link').hide();
            }
            var link = $(e.target);
            var tagId = link.data('pk');
            link.parent().addClass('info');
            if(link.parent().siblings('ul').children().length < 1){
                link.siblings('a.dialog-link').show();
            }
            var listItem = link.closest('li');
            if($(listItem).hasClass('mjs-nestedSortable-collapsed')){
                link.siblings('i').trigger('click');
            }

            lastLink = link;
            if(noLoad == undefined){
                refreshList({'filter': {'tags':{'value':tagId}}});
            }
        });

        body.on('click', '.show_all_media', function (e) {
            e.preventDefault();
            if(lastLink){
                lastLink.parent().removeClass('info');
                lastLink.siblings('a.dialog-link').hide();
            }
            // $('.media-box').show();
            refreshList({'filter': {'_page':1}});
            var link = $(e.target);
            link.parent().addClass('info');
            lastLink = link;
        });

        body.on('click', 'a.media-pager', function (e) {
            e.preventDefault();
            refreshList({'filter': {
                '_page':$(this).data('page'),
                '_sort_order':$(this).data('sort-order'),
                '_sort_by':$(this).data('sort-by'),
                'tags':{'value': $(this).data('tags')},
                'name':{'value': $(this).data('name')},
            }});
        })


        body.on('click', 'i.tag_folder', function(e) {
            var target = $(e.target);
            target.closest('li').toggleClass('mjs-nestedSortable-collapsed').toggleClass('mjs-nestedSortable-expanded');
            target.toggleClass('glyphicon-folder-close').toggleClass('glyphicon-folder-open');
        });

        body.on('click', '.batch-add-tags', submitAjaxBatchForm);

        $(".tag-select").select2({
            ajax: {
                url: "{{ tagAdmin.generateUrl('search_tags') }}",
                dataType: 'json',
                delay: 250,
                processResults: function (data) {
                    return {
                        results: data
                    };
                }
            }
        });

        $.fn.editable.defaults.mode = 'popup';

        initializeTagDialog();

        setUpSortTree();

        body.on('click', '.tag-dialog-link', createAjaxTagDialog);
    });
</script>
