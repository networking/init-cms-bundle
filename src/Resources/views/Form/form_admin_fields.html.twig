{#

This file is part of the Networking package.

(c) net working AG <info@networking.ch>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}
{% extends '@MopaBootstrap/Form/fields.html.twig' %}

{# Custom Sonata Admin Extension, template override#}
{% block sonata_admin_orm_one_to_one_widget %}
    {% include '@NetworkingInitCms/CRUD/edit_orm_one_to_one.html.twig' %}
{% endblock %}

{% block sonata_admin_orm_many_to_many_widget %}
    {% include '@NetworkingInitCms/CRUD/edit_orm_many_to_many.html.twig' %}
{% endblock %}

{% block sonata_admin_orm_many_to_one_widget %}
    {% include '@NetworkingInitCms/CRUD/edit_orm_many_to_one.html.twig' %}
{% endblock %}

{% block sonata_admin_orm_one_to_many_widget %}
    {% include '@NetworkingInitCms/CRUD/edit_orm_one_to_many.html.twig' %}
{% endblock %}

{% block sonata_type_model_widget %}
    {#
        This is not the best way to do if
        TODO : improve this part
    #}

    {#model {{ sonata_admin.field_description.mappingtype }}#}

    {% if sonata_admin.field_description is empty %}
        {{ block('choice_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == 1 %}
        {{ block('sonata_admin_orm_one_to_one_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == 2 %}
        {{ block('sonata_admin_orm_many_to_one_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == 8 %}
        {{ block('sonata_admin_orm_many_to_many_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == 4 %}
        {{ block('sonata_admin_orm_one_to_many_widget') }}
    {% else %}
        {#INVALID MODE : {{ id }}#}
        {{ block('choice_widget') }}
    {% endif %}
{% endblock %}

{% block sonata_type_model_list_widget %}
    <div id="field_container_{{ id }}" class="field-container">
        <span id="field_widget_{{ id }}">

            {% if sonata_admin.field_description.associationadmin.id(sonata_admin.value) %}
               {{ render(path('sonata_admin_short_object_information', {
                    'code':     sonata_admin.field_description.associationadmin.code,
                    'objectId': sonata_admin.field_description.associationadmin.id(sonata_admin.value),
                    'uniqid':   sonata_admin.field_description.associationadmin.uniqid,
                    'linkParameters': sonata_admin.field_description.options.link_parameters
                })) }}
            {% elseif sonata_admin.field_description.options.placeholder is defined and sonata_admin.field_description.options.placeholder %}
                <span class="inner-field-short-description">
                    {{ sonata_admin.field_description.options.placeholder|trans({}, 'SonataAdminBundle') }}
                </span>
            {% endif %}
        </span>
        <span style="display: none">
            {{ form_widget(form) }}
        </span>

        <span id="field_actions_{{ id }}" class="field-actions">

            {% if sonata_admin.field_description.associationadmin.hasroute('list') and sonata_admin.field_description.associationadmin.isGranted('LIST') %}
                &nbsp;
                <a href="{{ sonata_admin.field_description.associationadmin.generateUrl('list') }}"
                   onclick="return start_field_dialog_form_list_{{ id }}(this);"
                   class="btn btn-light btn-sm"
                   title="{{ 'link_list'|trans({}, 'SonataAdminBundle') }}"
                        >
                    <i class="la la-list"></i>
                    {{ 'link_list'|trans({}, 'SonataAdminBundle') }}
                </a>
            {% endif %}

            {% if sonata_admin.field_description.associationadmin.hasroute('create') and sonata_admin.field_description.associationadmin.isGranted('CREATE') %}
                &nbsp;
                <a href="{{ sonata_admin.field_description.associationadmin.generateUrl('create') }}"
                   onclick="return start_field_dialog_form_add_{{ id }}(this);"
                   class="btn btn-primary btn-sm"
                   title="{{ 'link_add'|trans({}, 'SonataAdminBundle') }}"
                        >
                    <i class="la la-plus"></i>
                    {{ 'link_add'|trans({}, 'SonataAdminBundle') }}
                </a>
            {% endif %}

            {% if sonata_admin.field_description.associationadmin.hasRoute('delete') and sonata_admin.field_description.associationadmin.isGranted('DELETE') %}
                &nbsp;
                <a href=""
                   onclick="return remove_selected_element_{{ id }}(this);"
                   class="btn btn-danger btn-sm"
                   title="{{ 'link_delete'|trans({}, 'SonataAdminBundle') }}"
                        >
                    <i class="la la-trash "></i>
                    {{ 'link_delete'|trans({}, 'SonataAdminBundle') }}
                </a>
            {% endif %}
        </span>

        <div class="modal" id="field_dialog_{{ id }}" style="display: none" role="dialog"
             aria-hidden="true">
        </div>

    </div>

    {% include '@NetworkingInitCms/CRUD/edit_orm_many_association_script.html.twig' %}
{% endblock %}

{% block sonata_type_admin_widget %}
    {#admin {{ sonata_admin.field_description.mappingtype }}#}
    {% if sonata_admin.field_description.mappingtype == 1 %}
        {{ block('sonata_admin_orm_one_to_one_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == 2 %}
        {{ block('sonata_admin_orm_many_to_one_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == 8 %}
        {{ block('sonata_admin_orm_many_to_many_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == 4 %}
        {{ block('sonata_admin_orm_one_to_many_widget') }}
    {% else %}
        INVALID MODE : {{ id }}
    {% endif %}
{% endblock %}

{% block sonata_type_collection_widget %}
    {% if sonata_admin.field_description.mappingtype == 4 %}
        {{ block('sonata_admin_orm_one_to_many_widget') }}
    {% else %}
        INVALID MODE : {{ id }} - type : sonata_type_collection - mapping : {{ sonata_admin.field_description.mappingtype }}
    {% endif %}
{% endblock %}

{# Buttons #}
{% block button_widget %}
    {% if sonata_admin.admin is defined and  sonata_admin.admin %}
        {% set translation_domain = onata_admin.field_description.translationDomain %}
    {% endif %}
    {% apply spaceless %}
        {% if label is empty %}
            {% set label = name|humanize %}
        {% endif %}
        <button type="{{ type|default('button') }}" {{ block('button_attributes') }}>
            {% if icon is not empty %}
                {{ mopa_bootstrap_icon(icon, icon_inverted|default(false)) }}
            {% endif %}
            {{ label|trans({}, translation_domain) }}</button>
    {% endapply %}
{% endblock button_widget %}

{# Widgets #}
{% block tabs_widget %}
    {% if sonata_admin.admin is defined and  sonata_admin.admin %}
        {% set translation_domain = onata_admin.field_description.translationDomain %}
    {% endif %}
    {% apply spaceless %}
        <ul class="{{ form.vars.attr.class }}">
            {% for tab in form.vars.tabs %}
                <li{% if tab.active %} class="active"{% endif %}>
                    <a data-toggle="tab" href="#{{ tab.id }}">
                        {% if tab.icon %}{{ mopa_bootstrap_icon(tab.icon) }}{% endif %}
                        {{ tab.label|trans({}, tab.translation_domain) }}
                    </a>
                </li>
            {% endfor %}
        </ul>
    {% endapply %}
{% endblock %}


{# Labels #}
{% block form_label %}
    {% if sonata_admin.admin is not defined or not sonata_admin.admin %}
        {{ parent() }}
    {% elseif 'checkbox' in block_prefixes %}
        {% apply spaceless %}
            {% if app.request.get('provider') and label == 'form.label_binary_content' %}
                {% set provider = app.request.get('provider')|split('.')[3] %}
                {% set mylabel = label~'_'~provider %}
                {% set test = mylabel|trans({}, sonata_admin.field_description.translationDomain)%}
                {% if test != mylabel %}
                    {% set label = mylabel %}
                {% endif %}
            {% endif %}
            {% if sonata_admin.field_description.options.name is defined %}
                {% set label = sonata_admin.field_description.options.name %}
            {% endif %}

            {% if label is not same as(false) %}
                {% if label is empty %}
                    {% set label = name|humanize %}
                {% endif %}
                {% if not compound %}
                    {% set label_attr = label_attr|merge({'for': id}) %}
                {% endif %}
                {% set label_attr_class = '' %}
                {% if horizontal %}
                    {% set label_attr_class = 'control-label ' ~ label_attr_class ~ horizontal_label_class %}
                {% endif %}

                {% set label_attr = label_attr|merge({'class': label_attr.class|default('') ~ " " ~ label_attr_class ~ (required ? ' required' : ' optional') }) %}
                <label{% for attrname,attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>

                {{ label|trans({}, sonata_admin.field_description.translationDomain) }}
                {{- block('label_asterisk') }}

                {% if widget_checkbox_label in ['label', 'both'] %}
                 &nbsp;{{ form_widget(form) }}
                {% endif %}

                {% if 'collection' in form.vars.block_prefixes and widget_add_btn|default(null) and form.vars.allow_add == true %}
                    &nbsp;{{ block('form_widget_add_btn') }}
                {% endif %}
                {% if help_label %}
                    {{ block('help_label') }}
                {% endif %}
                {% if help_label_tooltip.title %}
                    {{ block('help_label_tooltip') }}
                {% endif %}
                {% if help_label_popover.title %}
                    {{ block('help_label_popover') }}
                {% endif %}
                </label>
            {% endif %}
        {% endapply %}
    {% elseif widget_checkbox_label in ['label', 'both'] %}
        {% apply spaceless %}
            {% if app.request.get('provider') and label == 'form.label_binary_content' %}
                {% set provider = app.request.get('provider')|split('.')[3] %}
                {% set mylabel = label~'_'~provider %}
                {% set test = mylabel|trans( {}, sonata_admin.field_description.translationDomain) %}
                {% if test != mylabel %}
                    {% set label = mylabel %}
                {% endif %}
            {% endif %}
            {% if sonata_admin.field_description.options.name is defined %}
                {% set label = sonata_admin.field_description.options.name %}
            {% endif %}

            {% if label is not same as(false) %}
                {% if label is empty %}
                    {% set label = name|humanize %}
                {% endif %}
                {% if not compound %}
                    {% set label_attr = label_attr|merge({'for': id}) %}
                {% endif %}
                {% set label_attr_class = '' %}
                {% if horizontal %}
                    {% set label_attr_class = 'control-label ' ~ label_attr_class ~ horizontal_label_class %}
                {% endif %}
                {% set label_attr = label_attr|merge({'class': label_attr.class|default('') ~ " " ~ label_attr_class ~ (required ? ' required' : ' optional') }) %}
                <label{% for attrname,attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
                {% if not sonata_admin.admin %}
                    {{ label|trans({}, translation_domain) }}
                {% else %}

                    {{ label|trans({}, sonata_admin.field_description.translationDomain) }}
                {% endif %}
                {{- block('label_asterisk') }}
                {% if 'collection' in form.vars.block_prefixes and widget_add_btn|default(null) and form.vars.allow_add == true %}
                    &nbsp;{{ block('form_widget_add_btn') }}
                {% endif %}
                {% if help_label %}
                    {{ block('help_label') }}
                {% endif %}
                {% if help_label_tooltip.title %}
                    {{ block('help_label_tooltip') }}
                {% endif %}
                {% if help_label_popover.title %}
                    {{ block('help_label_popover') }}
                {% endif %}
                </label>
             {% else %}
                 {% if 'collection' in form.vars.block_prefixes and widget_add_btn|default(null) and form.vars.allow_add == true %}
                     &nbsp;{{ block('form_widget_add_btn') }}
                 {% endif %}
            {% endif %}
        {% endapply %}
    {% endif %}
{% endblock form_label %}

{% block help_label %}
    {% if sonata_admin.admin is defined and  sonata_admin.admin %}
        {% set translation_domain = sonata_admin.field_description.translationDomain %}
    {% endif %}
    <span class="help-block">{{ help_label|trans({}, translation_domain) }}</span>
{% endblock help_label %}

{% block help_label_tooltip %}
    {% if sonata_admin.admin is defined and  sonata_admin.admin %}
        {% set translation_domain = sonata_admin.field_description.translationDomain %}
    {% endif %}
    <span class="help-block">
        <a href="#" data-toggle="tooltip" data-placement="{{ help_label_tooltip.placement }}"
           data-title="{{ help_label_tooltip.title|trans({}, translation_domain) }}">
            {% if help_label_tooltip.icon is not same as(false) %}
                {{ mopa_bootstrap_icon(help_label_tooltip.icon) }}
            {% endif %}
            {% if help_label_tooltip.text is not same as(null) %}
                {{ help_label_tooltip.text }}
            {% endif %}
        </a>
    </span>
{% endblock help_label_tooltip %}

{% block help_label_popover %}
    {% if sonata_admin.admin is defined and  sonata_admin.admin %}
        {% set translation_domain = sonata_admin.field_description.translationDomain %}
    {% endif %}
    <span class="help-block">
        <a href="#" data-toggle="popover" data-trigger="hover" data-placement="{{ help_label_popover.placement }}"
           data-title="{{ help_label_popover.title|trans({}, translation_domain) }}"
           data-content="{{ help_label_popover.content|trans({}, translation_domain) }}">
            {% if help_label_popover.icon is not same as(false) %}
                {{ mopa_bootstrap_icon(help_label_popover.icon) }}
            {% endif %}
            {% if help_label_popover.text is not same as(null) %}
                {{ help_label_popover.text }}
            {% endif %}
        </a>
    </span>
{% endblock help_label_popover %}

{% block form_actions_widget %}
    {% for button in form.children %}
        {{ form_widget(button) }}&nbsp; {# this needs to be here due to https://github.com/twbs/bootstrap/issues/3245 #}
    {% endfor %}
{% endblock %}

{# Rows #}
{% block form_actions_row %}
    {{ block('button_row') }}
{% endblock %}

{% block form_rows_visible %}
    {% apply spaceless %}
        {% if form_errors(form) %}
            <div class="symfony-form-errors">
                {{ form_errors(form) }}
            </div>
        {% endif %}
        {% for child in form %}
            {% if 'hidden' not in child.vars.block_prefixes %} {# smbdy: why do we not add the hiddens of childs? 131024 phiamo: i think form rest should do this !? it was afaik removed because it cause side effekts #}
                {{ form_row(child) }}
            {% endif %}
        {% endfor %}
    {% endapply %}
{% endblock form_rows_visible %}


{% block widget_container_attributes_choice_widget %}
    {% apply spaceless %}
        id="{{ id }}"
        {% for attrname,attrvalue in attr %}{{ attrname }}="{% if attrname == 'class' %}unstyled {% endif %}{{ attrvalue }}" {% endfor %}
        {% if "class" not in attr %}class="unstyled"{% endif %}
    {% endapply %}
{% endblock %}


{% block choice_widget %}
    {% if sonata_admin.admin is defined and  sonata_admin.admin %}
        {% set translation_domain = sonata_admin.field_description.translationDomain %}
    {% endif %}
    {{ parent() }}
    {% if taggable is defined and taggable or select2 is defined and select2 %}
    <script type="text/javascript">
        jQuery(document).ready(function () {
            {% set allowClear = (multiple or not required?'true':'false') %}
            jQuery("#{{ id }}").select2({
                placeholder: "{{ 'Select'|trans({}) }}",
                allowClear: {{ allowClear }}
            });
        });
    </script>
    {% endif %}
{% endblock choice_widget %}


{% block form_row %}
    {% apply spaceless %}
        {% if sonata_admin is not defined or not sonata_admin_enabled or not sonata_admin.field_description %}
            {{ parent() }}
        {% else %}
            {% if sonata_admin.admin is defined and  sonata_admin.admin %}
                {% set translation_domain = sonata_admin.field_description.translationDomain %}
            {% endif %}
            {% set inline_block = false %}
            {% if sonata_admin.field_description.options.inline_block is defined and sonata_admin.field_description.options.inline_block %}
                {% set inline_block = true %}
            {% endif %}

            {% if sonata_admin.field_description.options.name is defined %}
                {% set label = sonata_admin.field_description.options.name %}
            {% endif %}

            {% if label is same as(false) %}
                {% set label_render = false %}
            {% else %}
                {% set label_render = true %}
            {% endif %}

            {% set widget_form_group_attr = widget_form_group_attr|merge({id: 'sonata-ba-field-container-'~id}) %}

            {{ block('widget_form_group_start') }}

            {% set show_horizontal_wrapper = horizontal and not (form.parent is not null and 'collection' in form.parent.vars.block_prefixes and form.parent.vars.horizontal_wrap_children is same as(false)) %}

            {% if horizontal and not label_render %}
                {% set horizontal_input_wrapper_class = horizontal_input_wrapper_class ~ ' ' ~ horizontal_label_offset_class %}
            {% endif %}

            {% if show_horizontal_wrapper %}
                <div class="{{ horizontal_input_wrapper_class }}">
            {% endif %}
            {% if sonata_admin.edit or sonata_admin.inline %}
            <div class="sonata-ba-field sonata-ba-field-{{ sonata_admin.edit }}-{{ sonata_admin.inline }}">
            {% endif %}

                {% if widget_prefix %}{{ widget_prefix|trans({}, translation_domain)|raw }}{% endif %}
                    {{ form_widget(form) }}
                {% if widget_suffix %}{{ widget_suffix|trans({}, translation_domain)|raw }}{% endif %}

            {% set type = type|default('text') %}
            {% if type != 'hidden' %}
                {{ block('form_message') }}
            {% endif %}

            {% if sonata_admin.edit or sonata_admin.inline %}
                </div>
            {% endif %}

            {% if show_horizontal_wrapper %}
                </div>
            {% endif %}
            {% if form.parent is not null and 'collection' in form.parent.vars.block_prefixes and widget_remove_btn|default(null) and form.parent.vars.allow_delete|default(false) %}
                {{ block('form_widget_remove_btn') }}
            {% endif -%}
            {{ block('widget_form_group_end') }}
        {% endif %}
    {% endapply %}
{% endblock form_row %}

{# Support #}
{% block form_message %}
    {% apply spaceless %}
        {{ form_errors(form) }}
        {{ block('form_help') }}
    {% endapply %}
{% endblock form_message %}

{% block form_widget_remove_btn %}
    {% apply spaceless %}

        {% if widget_remove_btn.wrapper_div is not same as(false) %}
            <div class="{{ widget_remove_btn.wrapper_div.class }} col-sm-offset-3">
        {% endif %}
        {% if widget_remove_btn|default(null) %}
            {% set button_type = 'remove' %}
            {% set button_values = widget_remove_btn %}
            {{ block('collection_button') }}
        {% endif %}
        {% if widget_remove_btn.wrapper_div is not same as(false) %}
            </div>
            <div class="clearfix"></div>
        {% endif %}
    {% endapply %}
{% endblock form_widget_remove_btn %}

{% block widget_form_group_start %}
{% if widget_form_group|default(false) or form.parent == null %}
    {% if form.parent is not null and 'collection' in form.parent.vars.block_prefixes %} {# i am a collection child #}
        {% if not omit_collection_item %}
            {# collection item wrapper doesnt need form-group it gets added to childs anyways #}
        	{% set widget_form_group_attr = widget_form_group_attr|merge({class: 'collection-item ' ~ widget_form_group_attr.class|default('')}) %}
        {% endif %}
    {% endif %}
    {% if help_widget_popover.selector is same as(null) %}
        {% set help_widget_popover = help_widget_popover|merge({'selector': '#' ~ id }) %}
    {% endif %}
    <div{% if help_widget_popover.title is not same as(null) %}{{ block('help_widget_popover') }}{% endif %} {% for attrname,attrvalue in widget_form_group_attr %} {{attrname}}="{{attrvalue}}"{% endfor %}>
    {# a form item containing the field in block_prefixes is a near subform or a field directly #}
    {% if (form|length > 0 and form.parent != null)
        and 'field' not in form.vars.block_prefixes
        and 'date' not in form.vars.block_prefixes %}
        {% if show_child_legend%}
            {{ block('form_legend') }}
        {% elseif label_render %}
            {{ form_label(form, label|default(null)) }}
        {% else %}
        {% endif %}
    {% else %}
        {% if label_render %}
            {{ form_label(form, label|default(null)) }}
        {% endif %}
    {% endif %}
{% else %}
    {% if label_render %}
        {{ form_label(form, label|default(null)) }}
    {% endif %}
{% endif %}
{% endblock widget_form_group_start %}


{% block sonata_type_immutable_array_widget %}
    {% apply spaceless %}
        <div class="controls">
            <div {{ block('widget_container_attributes') }}>
                {{ form_errors(form) }}

                {% for key, child in form %}
                    {{ block('sonata_type_immutable_array_widget_row') }}
                {% endfor %}

                {{ form_rest(form) }}
            </div>
        </div>
    {% endapply %}
{% endblock sonata_type_immutable_array_widget %}

{% block sonata_type_immutable_array_widget_row %}
    {% apply spaceless %}
        <div class="control-group{% if errors|length > 0 %} error{% endif %}"
             id="sonata-ba-field-container-{{ id }}-{{ key }}">

            {{ form_label(child) }}

            <div class="controls sonata-ba-field sonata-ba-field-{{ sonata_admin.edit }}-{{ sonata_admin.inline }} {% if errors|length > 0 %}sonata-ba-field-error{% endif %}">
                {{ form_widget(child) }}
            </div>

            {% if errors|length > 0 %}
                <div class="invalid-feedback">
                    {{ form_errors(child) }}
                </div>
            {% endif %}
        </div>
    {% endapply %}
{% endblock %}

{% block date_widget %}
    {% apply spaceless %}
        {% if widget == 'single_text' %}

            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text">$</span>
                </div>
                <input type="text" class="form-control" aria-label="Amount (to the nearest dollar)">
                <div class="input-group-append">
                    <span class="input-group-text">.00</span>
                </div>
            </div>



            {% if datepicker is defined %}
                {% set widget_addon_icon = widget_addon_append.icon is defined ? widget_addon_append.icon : 'calendar' %}
                <div data-provider="datepicker" class="{{ attr.widget_class|default('') ~ ' input-group date' }}"
                     data-link-field="{{ id }}" data-link-format="dd.mm.yyyy" data-date-format="dd.mm.yyyy"
                     data-date-language="{{ app.request.getLocale()|slice(0, 2) }}">
                    <input {% if widget_form_control_class is not same as(false) %}class="{{ widget_form_control_class }}"
                           {% endif %}type="text" {% if required %} required="required"{% endif %}
                            {{ block('widget_attributes') }} value="{{ value }}"
                    >
                    <span class="input-group-append">
                        <span class="input-group-text">{{ mopa_bootstrap_icon(widget_addon_icon) }}</span>
                    </span>
                    {% if widget_reset_icon is defined %}
                        <span class="input-group-append">
                            <span class="input-group-text">{{ mopa_bootstrap_icon(widget_reset_icon) }}</span>
                        </span>
                    {%  endif %}
                </div>
                <script type="text/javascript">
                    jQuery(document).ready(function () {
                        jQuery('[data-link-field="{{ id }}"]').datetimepicker({
                            autoclose: true,
                            minView: 'month',
                            startView: 'month',
                            todayBtn: true,
                            fontAwesome: true
                        });
                    });
                </script>
            {% else %}
                {{ block('form_widget_simple') }}
            {% endif %}
        {% else %}
            {% set attr = attr|merge({'class': attr.class|default('form-inline')}) %}
            <div {{ block('widget_container_attributes') }}>
                {{ date_pattern|replace({
                    '{{ year }}':  form_widget(form.year, {'attr': {'class': attr.widget_class|default('') ~ ''}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-3')}),
                    '{{ month }}': form_widget(form.month, {'attr': {'class': attr.widget_class|default('') ~ ''}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-3')}),
                    '{{ day }}':   form_widget(form.day, {'attr': {'class': attr.widget_class|default('') ~ ''}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-3')}),
                })|raw }}
            </div>
        {% endif %}
    {% endapply %}
{% endblock date_widget %}

{% block time_widget %}
    {% apply spaceless %}
        {% if widget == 'single_text' %}
            {% if timepicker is defined %}
                {% set widget_addon_icon = widget_addon_append.icon is defined ? widget_addon_append.icon : 'time' %}
                <div data-provider="timepicker" class="input-group date"
                     data-link-field="{{ id }}" data-link-format="hh:ii" data-date-format="hh:ii">
                    <input class="form-control"
                           type="text" {% if required %} required="required"{% endif %}
                            {{ block('widget_attributes') }} value="{{ value }}"
                    >
                    <span class="input-group-append">
                        <span class="input-group-text">{{ mopa_bootstrap_icon(widget_addon_icon) }}</span>
                    </span>
                    {% if widget_reset_icon is defined %}
                        <span class="input-group-append">
                            <span class="input-group-text">{{ mopa_bootstrap_icon(widget_reset_icon) }}</span>
                        </span>
                    {%  endif %}
                </div>
                <script type="text/javascript">
                    jQuery(document).ready(function () {
                        jQuery('[data-link-field="{{ id }}"]').datetimepicker({
                            autoclose: true,
                            formatViewType: 'time',
                            maxView: 'day',
                            minView: 'hour',
                            startView: 'day',
                            fontAwesome: true
                        });
                    });
                </script>
            {% else %}
                {{ block('form_widget_simple') }}
            {% endif %}
        {% else %}
            {% set attr = attr|merge({'class': attr.class|default('form-inline')}) %}
            {% apply spaceless %}
                <div {{ block('widget_container_attributes') }}>
                    {{ form_widget(form.hour, { 'attr': {  'size': '2'}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-2')}) }}
                    {% if with_minutes %}
                        {{ form_widget(form.minute, { 'attr': { 'size': '2' }, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-2')}) }}
                    {% endif %}
                    {% if with_seconds %}
                        :{{ form_widget(form.second, { 'attr': { 'size': '2' }, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-2') }) }}
                    {% endif %}
                </div>
            {% endapply %}
        {% endif %}
    {% endapply %}
{% endblock time_widget %}

{% block datetime_widget %}
    {% apply spaceless %}
        {% if widget == 'single_text' %}
            {% if datetimepicker is defined %}
                {% set widget_addon_icon = widget_addon_append.icon is defined ? widget_addon_append.icon : 'calendar' %}
                <div data-provider="datetimepicker" class="input-group date"
                     data-link-field="{{ id }}"  data-date-format="dd.mm.yyyy hh:ii"
                     data-link-format="dd.mm.yyyy hh:ii" data-date-language="{{ app.request.getLocale()|slice(0, 2) }}">
                    <input class="form-control"
                           type="text" {% if required %} required="required"{% endif %} {{ block('widget_attributes') }}
                           value="{% if value %}{{ value }}{% endif %}"
                    >
                    <span class="input-group-append">
                        <span class="input-group-text">{{ mopa_bootstrap_icon(widget_addon_icon) }}</span>
                    </span>
                    {% if widget_reset_icon is defined %}
                        <span class="input-group-append">
                            <span class="input-group-text">{{ mopa_bootstrap_icon(widget_reset_icon) }}</span>
                        </span>
                    {%  endif %}
                </div>
                <script type="text/javascript">
                    jQuery(document).ready(function () {
                        jQuery('[data-link-field="{{ id }}"]').datetimepicker({
                            autoclose: true,
                            todayBtn: true,
                            fontAwesome: true
                        });
                    });
                </script>
            {% else %}
                {{ block('form_widget_simple') }}
            {% endif %}
        {% else %}
            {% set attr = attr|merge({'class': attr.class|default('')}) %}
            <div {{ block('widget_container_attributes') }}>
                {{ form_errors(form.date) }}
                {{ form_errors(form.time) }}
                {{ form_widget(form.date, {'attr': {'class': attr.widget_class|default('')}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-3')}) }}
                {{ form_widget(form.time, {'attr': {'class': attr.widget_class|default('')}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-2')}) }}
            </div>
        {% endif %}
    {% endapply %}
{% endblock datetime_widget %}

{% block networking_type_mediaprint_widget %}
    {% media get_media_by_id(value), 'admin' %}
{% endblock %}

{% block networking_type_media_preview_widget %}
    {% if is_image %}
        <img src="{% path value, 'admin' %}?{{ date().timestamp }}" />
    {% else %}
        {% media value, 'admin' %}
    {% endif %}

{% endblock %}


{% block form_help %}
    {% if sonata_admin.admin is defined and  sonata_admin.admin %}
        {% set translation_domain = sonata_admin.field_description.translationDomain %}
    {% endif %}
    {% apply spaceless %}
        {% if help_block %}
            <span class="help-block">{{ help_block|trans({}, translation_domain)|raw }}</span>{% endif %}
        {% if sonata_admin is defined and sonata_admin.field_description.help is defined %}
            <span class="help-block sonata-ba-field-help">{{ sonata_admin.field_description.help }}</span>
        {% endif %}
    {% endapply %}
{% endblock form_help %}

{% block networking_type_iconradio_widget %}
    {% if sonata_admin.admin is defined and  sonata_admin.admin %}
        {% set translation_domain = sonata_admin.field_description.translationDomain %}
    {% endif %}
    {% apply spaceless %}
        {% if expanded %}
            {% set attr = attr|merge({class: 'row' ~ attr.class} ) %}
            <div {{ block('widget_container_attributes') }}>
                {% for key, child in form %}
                    <div class="col-4">
                        <label class="radio-inline">
                            {{ form_widget(child, {'horizontal_label_class': horizontal_label_class, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class, 'attr': {'class': attr.widget_class|default('') }}
                            ) }}
                            {{ child.vars.label|trans({}, choice_translation_domain) }}
                        </label>

                        <div class="clearfix"></div>
                        <br>
                        {% if icons[choices[key].value] %}
                            <img src="{{ asset(icons[choices[key].value]) }}" width="175px"/>
                        {% endif %}
                        <p>&nbsp;</p>
                    </div>
                {% endfor %}
            </div>
            <div class="clearfix"></div>
        {% else %}
            {# just let the choice widget render the select tag #}
            {{ block('choice_widget') }}
        {% endif %}
    {% endapply %}
{% endblock %}

{% block checkbox_widget %}
    {% apply spaceless %}
        <input type="checkbox" {{ block('widget_attributes') }}{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %}/>
    {% endapply %}
{% endblock checkbox_widget %}

{% block sonata_security_roles_widget %}
    {% apply spaceless %}
        <div class="editable">
            <p><a class="toggle-roles btn btn-primary">{{ 'toggle.roles'|trans({},'NetworkingInitCmsBundle' ) }}</a></p>

            <div id="securityRoles">
                {{ block('choice_widget') }}
            </div>
            <p><a class="toggle-roles btn btn-primary">{{ 'toggle.roles'|trans({},'NetworkingInitCmsBundle' ) }}</a>

            <p>
                <script type="text/javascript">
                    $('.toggle-roles').click(function () {
                        $('#securityRoles input[id^="{{ id }}"]').each(function () {
                            // toggle checkbox
                            $(this).prop('checked', !$(this).prop('checked'));
                            // toggle class
                            $(this).parents('label').toggleClass('active');

                        });
                        return false;
                    });
                </script>
        </div>
        {% if read_only_choices|length > 0 %}
            <div class="readonly">
                <ul>
                    {% for choice in read_only_choices %}
                        <li>{{ choice }}</li>
                    {% endfor %}
                </ul>
            </div>
        {% endif %}
    {% endapply %}
{% endblock sonata_security_roles_widget %}

{% block media_entity_type_widget %}

    {% set attr = attr|merge({'class': attr.class|default('') ~ (errors|length > 0 ? ' error' : '') }) %}
    {% if not label_render %}{% set widget_controls = false %}{% endif %}
    {#{{ block('widget_form_group_start') }}#}
    <div id="field_container_{{ id }}" class="field-container">
            <span id="field_widget_{{ id }}">

                {% if form.vars.data %}
                    {{ render(path('sonata_admin_short_object_information', {
                        'code':     admin.code,
                        'objectId': admin.id(form.vars.data),
                        'uniqid':   admin.uniqid
                    })) }}
                    &nbsp;
                {% else %}
                    <span class="inner-field-short-description">
                    </span>
                {% endif %}
            </span>

        {{ block('hidden_widget') }}

        <span id="field_actions_{{ id }}" class="field-actions">
                <a href="{{ admin.generateUrl('list', {'pcode': true,'context': context, 'provider': (provider_name ? provider_name : '')}) }}"
                   onclick="return open_media_list_{{ id }}(this);"
                   class="btn btn-light btn-sm"
                   title="{{ 'link_list'|trans({}, 'SonataAdminBundle') }}"
                        >
                    <i class="la la-list"></i>
                    {{ 'link_list'|trans({}, 'SonataAdminBundle') }}
                </a>

            {% if admin.hasroute('create') and admin.isGranted('CREATE') %}
                &nbsp;
                <a href="{{ admin.generateUrl('create', {'pcode': true,'context': context, 'provider': (provider_name ? provider_name : '')}) }}"
                   onclick="return start_field_dialog_form_add_{{ id }}(this);"
                   class="btn btn-primary btn-sm"
                   title="{{ 'link_add'|trans({}, 'SonataAdminBundle') }}"
                        >
                    <i class="la la-plus"></i>
                    {{ 'link_add'|trans({}, 'SonataAdminBundle') }}
                </a>
            {% endif %}

            {% if admin.hasRoute('delete') and admin.isGranted('DELETE') %}
                &nbsp;
                <a href=""
                   onclick="return remove_selected_element_{{ id }}(this);"
                   class="btn btn-danger btn-sm"
                   title="{{ 'link_delete'|trans({}, 'SonataAdminBundle') }}"
                        >
                    <i class="la la-trash"></i>
                    {{ 'link_delete'|trans({}, 'SonataAdminBundle') }}
                </a>
            {% endif %}
            </span>

        <div class="modal" id="field_dialog_{{ id }}" style="display: none" role="dialog"
             aria-hidden="true">
        </div>

    </div>

    {% include '@NetworkingInitCms/CRUD/edit_media_entity_script.html.twig' %}
{% endblock %}

{% block ckeditor_widget %}
    <textarea {{ block('widget_attributes') }}>{{ value }}</textarea>

    {% if enable and not async %}
        {{ block('_ckeditor_javascript') }}
    {% endif %}
{% endblock %}

{% block ckeditor_javascript %}
    {% if enable and async %}
        {{ block('_ckeditor_javascript') }}
    {% endif %}
{% endblock %}

{% block _ckeditor_javascript %}
    {% if autoload %}
        <script type="text/javascript">
            var CKEDITOR_BASEPATH = "{{ ckeditor_base_path(base_path) }}";
        </script>
        <script type="text/javascript" src="{{ ckeditor_js_path(js_path) }}"></script>
        {% if jquery %}
            <script type="text/javascript" src="{{ ckeditor_js_path(jquery_path) }}"></script>
        {% endif %}
    {% endif %}
    <script type="text/javascript">
        {% if jquery %}
        $(function () {
            {% endif %}

            {% if require_js %}
            require(['ckeditor'], function() {
                {% endif %}

                {{ ckeditor_destroy(id) }}

                {% for plugin_name, plugin in plugins %}
                {{ ckeditor_plugin(plugin_name, plugin) }}
                {% endfor %}

                {% for style_name, style in styles %}
                {{ ckeditor_styles_set(style_name, style) }}
                {% endfor %}

                {% for template_name, template in templates %}
                {{ ckeditor_template(template_name, template) }}
                {% endfor %}

                {% block ckeditor_widget_extra %}{% endblock ckeditor_widget_extra %}

                {{ ckeditor_widget(id, config, {
                    auto_inline: auto_inline,
                    inline: inline,
                    input_sync: input_sync,
                    filebrowsers: filebrowsers
                }) }}

                {% if require_js %}
            });
            {% endif %}

            {% if jquery %}
        });
        {% endif %}
    </script>
{% endblock %}


{% block help_widget_popover %}
    {% if sonata_admin.admin is defined and  sonata_admin.admin %}
        {% set translation_domain = sonata_admin.field_description.translationDomain %}
    {% endif %}
    {% apply spaceless %}
        {% for attrname,attrvalue in help_widget_popover %}
            data-{{ attrname }}="{{ attrvalue|trans({}, domain|default('messages')) }}"
        {% endfor %}
    {% endapply %}
{% endblock help_widget_popover %}

{% block widget_form_group_end %}
    {% apply spaceless %}
        {% if widget_form_group|default(false) or form.parent == null %}
            </div>
        {% endif %}
    {% endapply %}
{% endblock widget_form_group_end %}


{% block form_widget_simple %}
    {% spaceless %}
        {% set type = type|default('text') %}
        {% if type != 'hidden' and ( widget_addon_prepend|default(null) is not null or widget_addon_append|default(null) is not null or widget_btn_prepend|default(null) is not null or widget_btn_append|default(null) is not null ) %}
            <div class="input-group">
            {% if widget_btn_prepend|default(null) is not null %}
                {% set widget_btns = widget_btn_prepend %}
                {{ block('widget_btns') }}
            {% endif %}
            {% if widget_addon_prepend|default(null) is not null %}
                {% set widget_addon = widget_addon_prepend %}
                {{ block('widget_addon') }}
            {% endif %}
        {% endif %}
        {% if not widget_remove_btn|default(null) %}
            {% set attr = attr|merge({'class': attr.class|default('') ~ ' not-removable'}) %}
        {% endif %}
        {% set attr = attr|merge({'class': (attr.class|default('') ~ ' ' ~ widget_form_control_class)|trim}) %}

        {% if errors|length > 0 %}
            {% set attr = attr|merge({'class': attr.class|default('') ~ ' is-invalid'}) %}
        {% endif %}
        {% if static_text is same as(true) %}
            <p class="form-control-static">{{ value }}</p>
        {% else %}
            {{ parent() }}
        {% endif %}
        {% if type != 'hidden' and ( widget_addon_prepend|default(null) is not null or widget_addon_append|default(null) is not null or widget_btn_prepend|default(null) is not null or widget_btn_append|default(null) is not null ) %}
            {% if widget_addon_append|default(null) is not null %}
                {% set widget_addon = widget_addon_append %}
                {{ block('widget_addon') }}
            {% endif %}
            {% if widget_btn_append|default(null) is not null %}
                {% set widget_btns = widget_btn_append %}
                {{ block('widget_btns') }}
            {% endif %}
            </div>
        {% endif %}
    {% endspaceless %}
{% endblock form_widget_simple %}

{% block form_errors %}
    {% spaceless %}
        {% if error_delay %}
            {% for child in form %}
                {% if loop.index == 1 %}
                    {% if child.set('errors', errors) %}{% endif %}
                {% endif %}
            {% endfor %}
        {% else %}
            {% if errors|length > 0 %}
                {% if form.parent == null %}
                    {% from '@MopaBootstrap/flash.html.twig' import flash %}
                    {% for error in errors %}
                        {{ flash('danger', error.message) }}
                    {% endfor %}
                {% else %}
                    <span class="help-{{ block('error_type') }} invalid-feedback">
            {% for error in errors %}
                {{ error.message }} <br>
            {% endfor %}
            </span>
                {% endif %}
            {% endif %}
        {% endif %}
    {% endspaceless %}
{% endblock form_errors %}
