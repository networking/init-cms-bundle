{#

This file is part of the Sonata package.

(c) Thomas Rabaix <thomas.rabaix@sonata-project.org>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}

{% extends '@NetworkingInitCms/empty_layout.html.twig' %}

{% set ckParameters = {'CKEditor': app.request.get('CKEditor'), 'CKEditorFuncNum': app.request.get('CKEditorFuncNum')} %}
{% set selected = datagrid.values.tags?'#tag_link_'~datagrid.values.tags.value:'.show_all_media' %}

{% set active_tab = app.request.get('context') %}
{% set provider = app.request.get('provider') %}

{% if not provider %}
    {% set urlParams = {'context' : active_tab, 'provider': null, 'active_tab' : persistent_parameters.context}|merge(ckParameters) %}
{% else %}
    {% set urlParams = {'context' : active_tab, 'provider' : provider, 'active_tab' : persistent_parameters.context}|merge(ckParameters) %}
{% endif %}




{% block container_class %}container-fluid{% endblock %}
{% block preview %}{% endblock %}
{% block page_title %}
    <h1>{{ 'title.select_media'|trans({}, 'MediaAdmin')|replace({'%span%': '<span class="info-soft">', '%span/%': "</span>"})|raw }}</h1>
{% endblock %}


{% block list_filters %}
    {% set name = persistent_parameters.context ? persistent_parameters.context: 'default' %}
    {% if datagrid.filters %}
        <form action="{{ admin.generateUrl('init_ckeditor_browser') }}" method="GET"
              class="sonata-filter-form {{ admin.isChild and 1 == datagrid.filters|length ? 'hide' : '' }}form-horizontal filters menu-filter">

            <input type="hidden" name="context" value="{{ persistent_parameters.context }}"/>
            {% if persistent_parameters.providerName is defined %}
                <input type="hidden" name="provider" value="{{ persistent_parameters.providerName }}"/>
            {% endif %}
            <input type="hidden" name="active_tab" value="{{ name }}"/>

            {% set filter_main = '' %}
            {% set filter_hidden = '' %}
            {% set showHiddenFilters = 0 %}
            {% for filter in datagrid.filters %}

                {% set filterVisible = filter.options['show_filter'] is same as(true) or filter.options['show_filter'] is null %}

                {% if filter.options.hidden is not defined  or (filter.options.hidden == false) %}
                    {% set filter_main %}
                        {{ filter_main }}
                        <div class="form-group" {{ filterVisible ? '': 'style="display:none"'  }}>

                            {% if filter.label %}
                                <label class="control-label col-md-3 filter {{ filter.isActive ? 'active' : 'inactive' }}"> {{ filter.label|trans({}, admin.translationDomain) }}</label>
                            {% endif %}
                            <div class="form-inline col-md-9 {% if not filter.label %}col-md-offset-3{% endif %}">
                                {{ form_widget(form.children[filter.formName].children['type'], {'attr':{'class': 'input-medium  advanced-filter' }}
                                ) }}
                                {{ form_widget(form.children[filter.formName].children['value'], {'attr':{'class': 'input-medium' }}
                                ) }}
                            </div>
                        </div>
                    {% endset %}
                {% else %}
                    {% if filter.isActive %}
                        {% set showHiddenFilters = 1 %}
                    {% endif %}
                    {% set filter_hidden %}
                        {{ filter_hidden }}
                        <div class="form-group" {{ filterVisible ? '': 'style="display:none"'  }}>
                            {% if filter.label %}
                                <label class="control-label col-md-3 filter {{ filter.isActive ? 'active' : 'inactive' }}"> {{ filter.label|trans({}, admin.translationDomain) }}</label>
                            {% endif %}
                            <div class="form-inline col-md-9 {% if not filter.label %}col-md-offset-3{% endif %}">
                               {{ form_widget(form.children[filter.formName].children['type'], {'attr':{'class': 'input-medium  advanced-filter' }}
                                ) }}
                                {{ form_widget(form.children[filter.formName].children['value'], {'attr':{'class': 'input-medium' }}
                                ) }}
                            </div>
                        </div>
                    {% endset %}
                {% endif %}
            {% endfor %}

            {% set label = admin.label|trans({}, admin.translationDomain) %}
            <div>
                <div class="pull-left ">
                    <fieldset>
                        <h4 class="filter_legend"><small>{{ 'info.filter'|trans({'%admin_label%':label }, 'NetworkingInitCmsBundle') }}</small></h4>

                        <div class="filter_container row">
                            <div class="col-md-12">
                                {{ filter_main }}
                                <input type="hidden" name="filter[_page]" id="filter__page" value="1"/>
                                {% set foo = form.children['_page'].setRendered() %}
                                <div id="hidden_filters" class="collapse">
                                    {% for paramKey, paramValue in admin.persistentParameters %}
                                        <input type="hidden" name="{{ paramKey }}" value="{{ paramValue }}"/>
                                    {% endfor %}
                                    {% if filter_hidden != '' %}
                                         {#add div with hidden / show function#}
                                        {{ filter_hidden }}
                                    {% endif %}
                                    {% set foo = form.children['_page'].setRendered() %}
                                </div>
                                <div>
                                    <input type="submit" class="btn btn-sm"
                                           value="{{ 'btn_filter'|trans({}, 'NetworkingInitCmsBundle') }}"/>
                                    <a href="{{ admin.generateUrl('init_ckeditor_browser', {filters: 'reset'}|merge(ckParameters)) }}"
                                       class="link-underlined">
                                        {{ 'link_reset_filter'|trans({'%admin_label%': admin.label}, 'NetworkingInitCmsBundle') }}</a>
                                    {% if filter_hidden %}
                                        <span data-toggle="collapse" data-target="#hidden_filters" id="filter_toggle"
                                              class="filter-close cursor-pointer">
                                                {{ 'link.show_more_filters'|trans({}, 'NetworkingInitCmsBundle') }}
                                            </span>
                                    {% endif %}
                                    {{ form_rest(form) }}
                                </div>
                            </div>
                        </div>
                        {% for paramKey, paramValue in admin.persistentParameters|merge(ckParameters) %}
                            <input type="hidden" name="{{ paramKey }}" value="{{ paramValue }}"/>
                        {% endfor %}
                    </fieldset>
                </div>
                <div class="clearfix">&nbsp;</div>
            </div>
        </form>
    {% endif %}
    <ul class="nav menu-tabs nav-tabs">
        {% for name, context in media_pool.contexts %}

            {% if context.providers|length == 0 %}
                {% set urlParams = {'context' : name, 'provider': null, 'active_tab' : persistent_parameters.context}|merge(ckParameters) %}
            {% else %}
                {% set urlParams = {'context' : name, 'provider' : context.providers[0], 'active_tab' : persistent_parameters.context}|merge(ckParameters) %}
            {% endif %}

            {% if name == persistent_parameters.context %}
                <li class="active"><a
                            href="{{ admin.generateUrl('init_ckeditor_browser', urlParams) }}">{{ ('media_context.' ~ name)|trans({}) }}</a>
                </li>
            {% else %}
                <li>
                    <a href="{{ admin.generateUrl('init_ckeditor_browser', urlParams) }}">{{ ('media_context.' ~ name)|trans({}) }}</a>
                </li>
            {% endif %}
        {% endfor %}
    </ul>
{% endblock %}

{% block list_table %}
    <div class="row">
        <div class="col-md-12">
            {# provider #}
            {% set providers = media_pool.getProviderNamesByContext(persistent_parameters.context) %}
            <div class="clearfix">&nbsp;</div>
            <div class="row">
                <div class="col-sm-6">
                    {% set providers = media_pool.getProviderNamesByContext(persistent_parameters.context) %}
                    {% if providers|length > 1 %}
                    <strong>{{ "label.select_provider"|trans({}, 'MediaAdmin') }}</strong>

                    <div class="btn-group btn-group-sm">
                        <a class="btn btn-sm btn-{{ persistent_parameters.provider ? 'default': 'primary' }}"
                           href="{{ admin.generateUrl('init_ckeditor_browser', urlParams|merge({'provider': ''}) ) }}">{{ "link.all_providers"|trans({}, 'MediaAdmin') }}</a>
                        {% for provider_name in providers %}
                            <a class="btn btn-sm btn-{{ persistent_parameters.provider == provider_name? 'primary':'default' }}" href="{{ admin.generateUrl('init_ckeditor_browser', urlParams|merge({'provider': provider_name})) }}">{{ provider_name|trans({}) }}</a>
                        {% endfor %}
                    </div>
                    {% endif %}
                </div>
                <div class="col-sm-6 col-xs-12 sort-buttons">
                    <strong>{{ 'label.sort_by'|trans({}, 'MediaAdmin') }}:</strong>
                    <div class="btn-group btn-group-sm">

                        {% for field_description in admin.list.elements %}
                            {% if field_description.options.sortable is defined and field_description.options.sortable %}

                                {% set sortable             = true %}
                                {% set sort_parameters      = admin.datagrid.sortparameters(field_description) %}
                                {% set current              = admin.datagrid.values[constant('Sonata\\AdminBundle\\Datagrid\\DatagridInterface::SORT_BY')] is defined
                                    and (admin.datagrid.values[constant('Sonata\\AdminBundle\\Datagrid\\DatagridInterface::SORT_BY')] == field_description
                                    or admin.datagrid.values[constant('Sonata\\AdminBundle\\Datagrid\\DatagridInterface::SORT_BY')].name == sort_parameters.filter[constant('Sonata\\AdminBundle\\Datagrid\\DatagridInterface::SORT_BY')]) %}
                                {% set sort_active_class    = current ? 'sonata-ba-list-field-order-active' : '' %}
                                {% set sort_by              = current ? admin.datagrid.values[constant('Sonata\\AdminBundle\\Datagrid\\DatagridInterface::SORT_ORDER')] : field_description.option(constant('Sonata\\AdminBundle\\Datagrid\\DatagridInterface::SORT_ORDER'), sort_parameters.filter[constant('Sonata\\AdminBundle\\Datagrid\\DatagridInterface::SORT_ORDER')]) %}


                                {% if sortable %}
                                    <a href="{{ admin.generateUrl('init_ckeditor_browser', urlParams|merge(sort_parameters)) }}" class="btn btn-sm btn-{{ sort_active_class ? 'primary':'default' }}">{% endif %}
                                {% if sort_active_class %}
                                    <i class="glyphicon glyphicon-chevron-{{ sort_by|lower == 'desc'? 'up':'down' }}"></i>
                                {% endif %}
                                {{ field_description.label|trans({}, admin.translationDomain)  }}
                                </a>
                            {% endif %}
                        {% endfor %}
                    </div>
                </div>
            </div>
            <div class="clearfix"><p>&nbsp;</p></div>
            <div>
                {% block table_body %}
                    <div class="row">
                        {% if admin.showTagTree %}
                            <div class="col-md-3 col-xs-12">
                                <div id="tagsContainer">
                                    {% include "@NetworkingInitCms/TagAdmin/tags.html.twig" with {'noSort': true, 'tags': tags, 'lastItem': lastItem, 'tagAdmin': tagAdmin} %}
                                </div>
                            </div>
                        {% endif %}
                        <div id="item_list" class="col-md-{{ admin.showTagTree?'9':'12' }} col-xs-12 text-center">
                            {% if datagrid.results|length > 0 %}
                                {% include "@NetworkingInitCms/Ckeditor/browser_list_items.html.twig" %}
                            {% else %}
                                <p class="notice">
                                    {{ 'no_result'|trans({}, 'NetworkingInitCmsBundle') }}
                                </p>
                            {% endif %}
                        </div>
                    </div>
                    <div class="clearfix">&nbsp;</div>
                {% endblock %}

                {% block table_footer %}
                    <div class="row"></div>
                {% endblock %}
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>


        $(function () {
            var body = $('body');
            var tagDialog;
            var lastLink = $('{{ selected }}');

            body.on('click', '.select', function (e) {
                e.preventDefault();
                window.opener.CKEDITOR.tools.callFunction({{ app.request.get('CKEditorFuncNum')|escape('js') }}, $(this).attr("href"));
                window.close();
            });

            function refreshList(filters){
                if(!filters){
                    filters = {}
                }
                $.get(
                    "{{ admin.generateUrl('init_ckeditor_browser_refresh')|raw }}",
                    filters,
                    function(xhr){
                        $('#item_list').html(xhr);
                        $("html, body").animate({ scrollTop: $('#item_list').scrollTop() }, "slow");
                    }
                );

                history.replaceState({time: jQuery.now() }, 'updated', '{{ admin.generateUrl('init_ckeditor_browser', urlParams) }}');
            }

            body.on('click', '.tag_link', function(e){
                e.preventDefault();
                if(lastLink){
                    lastLink.parent().removeClass('info');
                    lastLink.siblings('a.dialog-link').hide();
                }
                var link = $(e.target);
                var tagId = link.data('pk');
                link.parent().addClass('info');
                if(link.parent().siblings('ul').children().length < 1){
                    link.siblings('a.dialog-link').show();
                }
                var listItem = link.closest('li');
                if($(listItem).hasClass('mjs-nestedSortable-collapsed')){
                    link.siblings('i').trigger('click');
                }

                lastLink = link;
                refreshList({'filter': {'tags':{'value':tagId}}});
            });

            body.on('click', '.show_all_media', function (e) {
                e.preventDefault();
                if(lastLink){
                    lastLink.parent().removeClass('info');
                    lastLink.siblings('a.dialog-link').hide();
                }
                // $('.media-box').show();
                refreshList({'filter': {'_page':1}});
                var link = $(e.target);
                link.parent().addClass('info');
                lastLink = link;
            });

            body.on('click', 'i.tag_folder', function(e) {
                var target = $(e.target);
                target.closest('li').toggleClass('mjs-nestedSortable-collapsed').toggleClass('mjs-nestedSortable-expanded');
                target.toggleClass('glyphicon-folder-close').toggleClass('glyphicon-folder-open');
            });

            body.on('click', 'a.media-pager', function (e) {
                e.preventDefault();
                refreshList({'filter': {
                        '_page':$(this).data('page'),
                        '_sort_order':$(this).data('sort-order'),
                        '_sort_by':$(this).data('sort-by'),
                        'tags':{'value': $(this).data('tags')},
                        'name':{'value': $(this).data('name')},
                    }});
            })

        });
    </script>
{% endblock %}


