{#

This file is part of the Sonata package.

(c) Thomas Rabaix <thomas.rabaix@sonata-project.org>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}

{% extends '@NetworkingInitCms/empty_layout.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet"
          href="{{ asset('bundles/networkinginitcms/assets/plugins/custom/jstree/jstree.bundle.css') }}">
    <link rel="stylesheet"
          href="{{ asset('bundles/networkinginitcms/vendor/featherlight/src/featherlight.css') }}">
{% endblock %}

{% set ckParameters = {'CKEditor': app.request.get('CKEditor'), 'CKEditorFuncNum': app.request.get('CKEditorFuncNum')} %}
{% set selected = datagrid.values.tags?'#tag_link_'~datagrid.values.tags.value:'.show_all_media' %}

{% set active_tab = app.request.get('context') %}
{% set provider = app.request.get('provider') %}

{% if not provider %}
    {% set urlParams = {'context' : active_tab, 'provider': null, 'active_tab' : persistent_parameters.context}|merge(ckParameters) %}
{% else %}
    {% set urlParams = {'context' : active_tab, 'provider' : provider, 'active_tab' : persistent_parameters.context}|merge(ckParameters) %}
{% endif %}




{% block container_class %}container-fluid{% endblock %}
{% block preview %}{% endblock %}
{% block page_title %}

{% endblock %}

{% block list_filters_title %}
    <h1>{{ 'title.select_media'|trans({}, 'MediaAdmin')|replace({'%span%': '<span class="info-soft">', '%span/%': "</span>"})|raw }}</h1>
{% endblock %}
{% block list_filters %}
    {% set name = persistent_parameters.context ? persistent_parameters.context: 'default' %}
    {% if datagrid.filters %}
        <form action="{{ admin.generateUrl('init_ckeditor_browser') }}" method="GET"
              class="kt-form kt-form--fit mb-15">

            <input type="hidden" name="context" value="{{ persistent_parameters.context }}"/>
            {% if persistent_parameters.provider is defined %}
                <input type="hidden" name="provider" value="{{ persistent_parameters.provider }}"/>
            {% endif %}
            <input type="hidden" name="active_tab" value="{{ name }}"/>

            <div class="d-flex justify-content-xl-between">
                {% set withAdvancedFilter = false %}
                {% for filter in admin.datagrid.filters %}
                    {% set filterActive = ((filter.isActive() and filter.options['show_filter'] is null) or (filter.options['show_filter'] is same as(true))) and not admin.isDefaultFilter(filter.formName) %}
                    {% set filterVisible = filter.options['show_filter'] is same as(true) or filter.options['show_filter'] is null %}
                    <div class="mb-lg-0 mb-6 d-{% if filterActive or filterVisible %}block{% else %}none{% endif %}" sonata-filter="{{ filterVisible ? 'true' : 'false' }}">
                        {% if filter.label is not same as(false) %}
                            <label for="{{ form[filter.formName].children['value'].vars.id }}" class="control-label">{{ filter.label|trans({}, filter.translationDomain ?: admin.translationDomain) }}</label>
                        {% endif %}
                        {% set attr = form[filter.formName].children['type'].vars.attr|default({}) %}

                        <div class="advanced-filter">
                            {{ form_widget(form[filter.formName].children['type'], {'attr':  attr}) }}
                        </div>
                        <div >
                            {{ form_widget(form[filter.formName].children['value']) }}
                        </div>
                    </div>
                    {% if filter.options['advanced_filter'] %}
                        {% set withAdvancedFilter = true %}
                    {% endif %}
                {% endfor %}
            </div>
            <div class="row mt-8">
                <div class="col-lg-12">
                    {% if admin.hasActiveSubclass %}
                        <input type="hidden" name="subclass" id="filter_subclass"
                               value="{{ admin.activeSubclassCode }}"/>
                    {% endif %}
                    <input type="hidden" name="filter[_page]" id="filter__page" value="1"/>
                    {% set foo = form['_page'].setRendered() %}
                    {{ form_rest(form) }}
                    {% for paramKey, paramValue in admin.persistentParameters|merge(ckParameters) %}
                        <input type="hidden" name="{{ paramKey }}" value="{{ paramValue }}"/>
                    {% endfor %}
                    <button type="submit" class="btn btn-primary btn-primary--icon" id="kt_search">
                            <span>
                                <i class="la la-search"></i>
                                <span>{{ 'btn_filter'|trans({}, 'NetworkingInitCmsBundle') }}</span>
                             </span>
                    </button>
                    <a href="{{admin.generateUrl('init_ckeditor_browser', {filters: 'reset'}|merge(urlParams)) }}"
                       class="btn btn-secondary btn-secondary--icon">
                            <span>
                                <i class="la la-close"></i>
                                <span>{{ 'link_reset_filter'|trans({'%admin_label%': admin.label}, 'NetworkingInitCmsBundle') }}</span>
                             </span>
                    </a>

                    {% if withAdvancedFilter %}
                        <a href="#" class="has-action" data-toggle="advanced-filter">
                            <i class="la la-cogs" aria-hidden="true"></i>
                            {{ 'btn_advanced_filters'|trans({}, 'SonataAdminBundle') }}
                        </a>
                    {% endif %}
                </div>
            </div>
        </form>
    {% endif %}
    <ul class="nav nav-tabs nav-tabs-line">
        {% for name, context in media_pool.contexts %}

            {% if context.providers|length == 0 %}
                {% set urlParams = {'context' : name, 'provider': null, 'active_tab' : persistent_parameters.context}|merge(ckParameters) %}
            {% else %}
                {% set urlParams = {'context' : name, 'provider' : context.providers[0], 'active_tab' : persistent_parameters.context}|merge(ckParameters) %}
            {% endif %}
                <li class="nav-item">
                    <a href="{{ admin.generateUrl('init_ckeditor_browser', urlParams) }}" class="nav-link {% if name == persistent_parameters.context %}active{% endif %}">{{ ('media_context.' ~ name)|trans({}) }}</a>
                </li>
        {% endfor %}
    </ul>
{% endblock %}

{% block list_table %}
    <div class="row">
        <div class="col-md-12">
            {# provider #}
            {% set providers = media_pool.getProviderNamesByContext(persistent_parameters.context) %}
            <div class="clearfix">&nbsp;</div>
            <div class="row">
                <div class="col-sm-6">
                    {% set providers = media_pool.getProviderNamesByContext(persistent_parameters.context) %}
                    {% if providers|length > 1 %}
                    <strong>{{ "label.select_provider"|trans({}, 'MediaAdmin') }}</strong>

                    <div class="btn-group btn-group-sm">
                        <a class="btn btn-sm btn-{{ persistent_parameters.provider ? 'default': 'primary' }}"
                           href="{{ admin.generateUrl('init_ckeditor_browser', urlParams|merge({'provider': ''}) ) }}">{{ "link.all_providers"|trans({}, 'MediaAdmin') }}</a>
                        {% for provider_name in providers %}
                            <a class="btn btn-sm btn-{{ persistent_parameters.provider == provider_name? 'primary':'default' }}" href="{{ admin.generateUrl('init_ckeditor_browser', urlParams|merge({'provider': provider_name})) }}">{{ provider_name|trans({}) }}</a>
                        {% endfor %}
                    </div>
                    {% endif %}
                </div>
                <div class="col-sm-6 sort-buttons align-right">
                    <strong>{{ 'label.sort_by'|trans({}, 'MediaAdmin') }}:</strong>
                    <div class="btn-group btn-group-sm">

                        {% for field_description in admin.list.elements %}
                            {% if field_description.options.sortable is defined and field_description.options.sortable %}

                                {% set sortable             = true %}
                                {% set current              = datagrid.values._sort_by == field_description %}
                                {% set sort_parameters      = admin.modelmanager.sortparameters(field_description, datagrid) %}
                                {% set sort_active_class    = current ? 'sonata-ba-list-field-order-active' : '' %}
                                {% set sort_by              = current ? datagrid.values._sort_order : field_description.options._sort_order %}

                                {% if sortable %}
                                    <a href="{{ admin.generateUrl('init_ckeditor_browser', urlParams|merge(sort_parameters)) }}" class="btn btn-sm btn-{{ sort_active_class ? 'primary':'default' }}">{% endif %}
                                {% if sort_active_class %}
                                    <i class="glyphicon glyphicon-chevron-{{ sort_by|lower == 'desc'? 'up':'down' }}"></i>
                                {% endif %}
                                {{ field_description.label|trans({}, admin.translationDomain)  }}
                                </a>
                            {% endif %}
                        {% endfor %}
                    </div>
                </div>
            </div>
            <div class="clearfix"><p>&nbsp;</p></div>
            <div>
                {% block table_body %}
                    <div class="row">
                        {% if admin.showTagTree %}
                            <div class="col-md-3 col-xs-12">
                                <div id="tagsContainer">
                                    {% include "@NetworkingInitCms/TagAdmin/tags.html.twig" with {'noSort': true, 'tags': tags, 'lastItem': lastItem, 'tagAdmin': tagAdmin} %}
                                </div>
                            </div>
                        {% endif %}
                        <div id="item_list" class="col-md-{{ admin.showTagTree?'9':'12' }} col-xs-12 text-center">
                            {% if datagrid.results|length > 0 %}
                                {% include "@NetworkingInitCms/Ckeditor/browser_list_items.html.twig" %}
                            {% else %}
                                <p class="notice">
                                    {{ 'no_result'|trans({}, 'NetworkingInitCmsBundle') }}
                                </p>
                            {% endif %}
                        </div>
                    </div>
                    <div class="clearfix">&nbsp;</div>
                {% endblock %}

                {% block table_footer %}
                    <div class="row"></div>
                {% endblock %}
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('bundles/networkinginitcms/assets/plugins/custom/jstree/jstree.bundle.js') }}"
            type="text/javascript"></script>
    <script src="{{ asset('bundles/networkinginitcms/vendor/featherlight/src/featherlight.js') }}"
            type="text/javascript"></script>
    <script>


        $(function () {
            var body = $('body');
            var tagDialog;
            var lastLink = $('{{ selected }}');
            Admin.add_filters();

            {% if  app.request.get('CKEditorFuncNum')|escape('js')  %}
            body.on('click', '.select', function (e) {
                e.preventDefault();
                window.opener.CKEDITOR.tools.callFunction({{ app.request.get('CKEditorFuncNum')|escape('js') }}, $(this).attr("href"));
                window.close();
            });
            {% endif %}

            function refreshList(filters){
                if(!filters){
                    filters = {}
                }
                $.get(
                    "{{ admin.generateUrl('init_ckeditor_browser_refresh', ckParameters)|raw }}",
                    filters,
                    function(xhr){
                        $('#item_list').html(xhr);
                        $("html, body").animate({ scrollTop: $('#item_list').scrollTop() }, "slow");
                    }
                );
            }

            var tagContainer = $('#tagsContainer');

            tagContainer.on('click', '.tag_link', function(e){
                e.preventDefault();
                if(lastLink){
                    lastLink.parent().removeClass('info');
                    lastLink.siblings('a.dialog-link').hide();
                }
                var link = $(e.target);
                var tagId = link.data('pk');
                link.parent().addClass('info');
                if(link.parent().siblings('ul').children().length < 1){
                    link.siblings('a.dialog-link').show();
                }
                var listItem = link.closest('li');
                if($(listItem).hasClass('mjs-nestedSortable-collapsed')){
                    link.siblings('i').trigger('click');
                }

                lastLink = link;
                refreshList({'filter': {'tags':{'value':tagId}}});
            });

            tagContainer.on('click', '.show_all_media', function (e) {
                e.preventDefault();
                if(lastLink){
                    lastLink.parent().removeClass('info');
                    lastLink.siblings('a.dialog-link').hide();
                }
                // $('.media-box').show();
                refreshList({'filter': {'_page':1}});
                var link = $(e.target);
                link.parent().addClass('info');
                lastLink = link;
            });

            body.on('click', 'a.media-pager', function (e) {
                e.preventDefault();
                refreshList({'filter': {
                        '_page':$(this).data('page'),
                        '_sort_order':$(this).data('sort-order'),
                        '_sort_by':$(this).data('sort-by'),
                        'tags':{'value': $(this).data('tags')},
                        'name':{'value': $(this).data('name')},
                    }});
            })
            var treeData = {% include "@NetworkingInitCms/TagAdmin/tags.json.twig" with {'noSort': app.request.isXmlHttpRequest, 'tags': tags, 'lastItem': lastItem, 'tagAdmin': tagAdmin} %};
            $('#tagsContainer')
                .jstree({
                    "types": {
                        "default": {
                            "icon": "fa fa-folder text-primary icon-2x"
                        }
                    },
                    "plugins": [
                        "types"
                    ],
                    'core': {
                        "themes" : {
                            "variant" : "large"
                        },
                        data: function(node, cb){
                            cb(treeData)
                        }
                    }
                });
        });
    </script>
{% endblock %}


