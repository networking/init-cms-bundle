{"version":3,"file":"widgets.js","names":["KTWidgets","init","toggle","charts","formEl","btn","widget5","document","querySelector","picker","$","start","moment","end","daterangepicker","direction","KTUtil","isRTL","startDate","endDate","opens","applyClass","cancelClass","ranges","Today","Yesterday","subtract","startOf","endOf","cb","label","title","range","format","html","initDaterangepicker","addEventListener","window","location","href","this","getAttribute","querySelectorAll","slice","call","map","element","height","parseInt","css","color","labelColor","getCssVariableValue","baseColor","lightColor","ApexCharts","series","name","data","chart","fontFamily","type","toolbar","show","zoom","enabled","sparkline","plotOptions","legend","dataLabels","fill","opacity","stroke","curve","width","colors","xaxis","categories","axisBorder","axisTicks","labels","style","fontSize","crosshairs","position","dashArray","tooltip","formatter","undefined","offsetY","yaxis","min","max","states","normal","filter","value","hover","active","allowMultipleDataPointsSelection","y","val","markers","strokeColor","strokeWidth","render","initStatisticsWidget4","getElementById","self","rendered","initChart","borderColor","options","bar","horizontal","columnWidth","borderRadius","grid","strokeDashArray","lines","KTThemeMode","on","destroy","initChartsWidget1","initChartsWidget2","initChartsWidget3","baseLightColor","secondaryColor","secondaryLightColor","initChartsWidget4","stacked","initChartsWidget5","padding","top","right","bottom","left","initChartsWidget6","color1","color1Light","color2","color2Light","color3","initChartsWidget7","x","offsetX","initChartsWidget8","colorDarken","dropShadow","enabledOnSeries","blur","marker","initMixedWidget2","initMixedWidget3","radialBar","hollow","margin","size","showOn","fontWeight","track","background","lineCap","initMixedWidget4","fill1","gradient","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","colorStops","initMixedWidget5","initMixedWidget6","initMixedWidget7","initMixedWidget10","initMixedWidget12","initMixedWidget13","initMixedWidget14","startAngle","endAngle","initMixedWidget16","initMixedWidget17","fillColor","getMode","initMixedWidget18","setTimeout","initMixedWidget19","Quill","modules","container","placeholder","theme","e","preventDefault","setAttribute","removeAttribute","classList","remove","add","scrollTo","FullCalendar","todayDate","YM","YESTERDAY","clone","TODAY","TOMORROW","calendarEl","Calendar","headerToolbar","center","contentHeight","aspectRatio","nowIndicator","now","views","dayGridMonth","buttonText","timeGridWeek","timeGridDay","initialView","initialDate","editable","dayMaxEvents","navLinks","events","description","className","id","url","initCalendarWidget1","module","exports","onDOMContentLoaded"],"sources":["widgets.js"],"mappings":"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","sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTWidgets = function () {\n    // Statistics widgets\n    var initStatisticsWidget3 = function() {\n        var charts = document.querySelectorAll('.statistics-widget-3-chart');\n\n        [].slice.call(charts).map(function(element) {\n            var height = parseInt(KTUtil.css(element, 'height'));\n\n            if ( !element ) {\n                return;\n            }\n\n            var color = element.getAttribute('data-kt-chart-color');\n\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n            var lightColor = KTUtil.getCssVariableValue('--bs-' + color + '-light');\n\n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [30, 45, 32, 70, 40]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'area',\n                    height: height,\n                    toolbar: {\n                        show: false\n                    },\n                    zoom: {\n                        enabled: false\n                    },\n                    sparkline: {\n                        enabled: true\n                    }\n                },\n                plotOptions: {},\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                fill: {\n                    type: 'solid',\n                    opacity: 0.3\n                },\n                stroke: {\n                    curve: 'smooth',\n                    show: true,\n                    width: 3,\n                    colors: [baseColor]\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    },\n                    crosshairs: {\n                        show: false,\n                        position: 'front',\n                        stroke: {\n                            color: '#E4E6EF',\n                            width: 1,\n                            dashArray: 3\n                        }\n                    },\n                    tooltip: {\n                        enabled: true,\n                        formatter: undefined,\n                        offsetY: 0,\n                        style: {\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    min: 0,\n                    max: 80,\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function(val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    }\n                },\n                colors: [baseColor],\n                markers: {\n                    colors: [baseColor],\n                    strokeColor: [lightColor],\n                    strokeWidth: 3\n                }\n            };\n\n            var chart = new ApexCharts(element, options);\n            chart.render();\n        });        \n    }\n\n    var initStatisticsWidget4 = function() {\n        var charts = document.querySelectorAll('.statistics-widget-4-chart');\n\n        [].slice.call(charts).map(function(element) {\n            var height = parseInt(KTUtil.css(element, 'height'));\n\n            if ( !element ) {\n                return;\n            }\n\n            var color = element.getAttribute('data-kt-chart-color');\n\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n            var lightColor = KTUtil.getCssVariableValue('--bs-' + color + '-light' );\n\n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [40, 40, 30, 30, 35, 35, 50]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'area',\n                    height: height,\n                    toolbar: {\n                        show: false\n                    },\n                    zoom: {\n                        enabled: false\n                    },\n                    sparkline: {\n                        enabled: true\n                    }\n                },\n                plotOptions: {},\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                fill: {\n                    type: 'solid',\n                    opacity: 0.3\n                },\n                stroke: {\n                    curve: 'smooth',\n                    show: true,\n                    width: 3,\n                    colors: [baseColor]\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    },\n                    crosshairs: {\n                        show: false,\n                        position: 'front',\n                        stroke: {\n                            color: '#E4E6EF',\n                            width: 1,\n                            dashArray: 3\n                        }\n                    },\n                    tooltip: {\n                        enabled: true,\n                        formatter: undefined,\n                        offsetY: 0,\n                        style: {\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    min: 0,\n                    max: 60,\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function(val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    }\n                },\n                colors: [baseColor],\n                markers: {\n                    colors: [baseColor],\n                    strokeColor: [lightColor],\n                    strokeWidth: 3\n                }\n            };\n\n            var chart = new ApexCharts(element, options);\n            chart.render();\n        });        \n    }\n\n    // Charts widgets\n    var initChartsWidget1 = function() {\n        var element = document.getElementById(\"kt_charts_widget_1_chart\");\n\n        if ( !element ) {\n            return;\n        }\n\n        var chart = {\n            self: null,\n            rendered: false\n        };\n\n        var initChart = function() {\n            var height = parseInt(KTUtil.css(element, 'height'));\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n            var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\n            var baseColor = KTUtil.getCssVariableValue('--bs-primary');\n            var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');        \n\n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [44, 55, 57, 56, 61, 58]\n                }, {\n                    name: 'Revenue',\n                    data: [76, 85, 101, 98, 87, 105]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'bar',\n                    height: height,\n                    toolbar: {\n                        show: false\n                    }\n                },\n                plotOptions: {\n                    bar: {\n                        horizontal: false,\n                        columnWidth: ['30%'],\n                        borderRadius: [6]\n                    },\n                },\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                stroke: {\n                    show: true,\n                    width: 2,\n                    colors: ['transparent']\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    labels: {\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                fill: {\n                    opacity: 1\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    }\n                },\n                colors: [baseColor, secondaryColor],\n                grid: {\n                    borderColor: borderColor,\n                    strokeDashArray: 4,\n                    yaxis: {\n                        lines: {\n                            show: true\n                        }\n                    }\n                }\n            };\n\n            chart.self = new ApexCharts(element, options);\n            chart.self.render();   \n            chart.rendered = true;\n        } \n\n        // Init chart\n        initChart();\n\n        // Update chart on theme mode change\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \n            if (chart.rendered) {\n                chart.self.destroy();\n            }\n\n            initChart();\n        });              \n    }\n\n    var initChartsWidget2 = function() {\n        var element = document.getElementById(\"kt_charts_widget_2_chart\");\n\n        if ( !element ) {\n            return;\n        }\n\n        var chart = {\n            self: null,\n            rendered: false\n        };\n\n        var initChart = function() {\n            var height = parseInt(KTUtil.css(element, 'height'));\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n            var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\n            var baseColor = KTUtil.getCssVariableValue('--bs-warning');\n            var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');\n\n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [44, 55, 57, 56, 61, 58]\n                }, {\n                    name: 'Revenue',\n                    data: [76, 85, 101, 98, 87, 105]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'bar',\n                    height: height,\n                    toolbar: {\n                        show: false\n                    }\n                },\n                plotOptions: {\n                    bar: {\n                        horizontal: false,\n                        columnWidth: ['30%'],\n                        borderRadius: 4\n                    },\n                },\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                stroke: {\n                    show: true,\n                    width: 2,\n                    colors: ['transparent']\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    labels: {\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                fill: {\n                    opacity: 1\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    }\n                },\n                colors: [baseColor, secondaryColor],\n                grid: {\n                    borderColor: borderColor,\n                    strokeDashArray: 4,\n                    yaxis: {\n                        lines: {\n                            show: true\n                        }\n                    }\n                }\n            };\n\n            chart.self = new ApexCharts(element, options);\n            chart.self.render();   \n            chart.rendered = true;\n        }\n\n        // Init chart\n        initChart();\n\n        // Update chart on theme mode change\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \n            if (chart.rendered) {\n                chart.self.destroy();\n            }\n\n            initChart();\n        });\n    }\n\n    var initChartsWidget3 = function() {\n        var element = document.getElementById(\"kt_charts_widget_3_chart\");\n\n        if ( !element ) {\n            return;\n        }\n\n        var chart = {\n            self: null,\n            rendered: false\n        };\n\n        var initChart = function() {\n            var height = parseInt(KTUtil.css(element, 'height'));\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n            var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\n            var baseColor = KTUtil.getCssVariableValue('--bs-info');\n            var lightColor = KTUtil.getCssVariableValue('--bs-info-light');              \n\n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [30, 40, 40, 90, 90, 70, 70]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'area',\n                    height: 350,\n                    toolbar: {\n                        show: false\n                    }\n                },\n                plotOptions: {\n\n                },\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                fill: {\n                    type: 'solid',\n                    opacity: 1\n                },\n                stroke: {\n                    curve: 'smooth',\n                    show: true,\n                    width: 3,\n                    colors: [baseColor]\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    },\n                    crosshairs: {\n                        position: 'front',\n                        stroke: {\n                            color: baseColor,\n                            width: 1,\n                            dashArray: 3\n                        }\n                    },\n                    tooltip: {\n                        enabled: true,\n                        formatter: undefined,\n                        offsetY: 0,\n                        style: {\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    labels: {\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    }\n                },\n                colors: [lightColor],\n                grid: {\n                    borderColor: borderColor,\n                    strokeDashArray: 4,\n                    yaxis: {\n                        lines: {\n                            show: true\n                        }\n                    }\n                },\n                markers: {\n                    strokeColor: baseColor,\n                    strokeWidth: 3\n                }\n            };\n\n            chart.self = new ApexCharts(element, options);\n            chart.self.render();   \n            chart.rendered = true;\n        } \n        \n        // Init chart\n        initChart();\n\n        // Update chart on theme mode change\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \n            if (chart.rendered) {\n                chart.self.destroy();\n            }\n\n            initChart();\n        });\n    }\n\n    var initChartsWidget4 = function() {\n        var element = document.getElementById(\"kt_charts_widget_4_chart\");\n\n        if ( !element ) {\n            return;\n        }\n\n        var chart = {\n            self: null,\n            rendered: false\n        };\n\n        var initChart = function() {\n            var height = parseInt(KTUtil.css(element, 'height'));\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n            var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\n\n            var baseColor = KTUtil.getCssVariableValue('--bs-success');\n            var baseLightColor = KTUtil.getCssVariableValue('--bs-success-light');\n            var secondaryColor = KTUtil.getCssVariableValue('--bs-warning');\n            var secondaryLightColor = KTUtil.getCssVariableValue('--bs-warning-light');        \n\n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [60, 50, 80, 40, 100, 60]\n                }, {\n                    name: 'Revenue',\n                    data: [70, 60, 110, 40, 50, 70]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'area',\n                    height: 350,\n                    toolbar: {\n                        show: false\n                    }\n                },\n                plotOptions: {},\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                fill: {\n                    type: 'solid',\n                    opacity: 1\n                },\n                stroke: {\n                    curve: 'smooth'\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    },\n                    crosshairs: {\n                        position: 'front',\n                        stroke: {\n                            color: labelColor,\n                            width: 1,\n                            dashArray: 3\n                        }\n                    },\n                    tooltip: {\n                        enabled: true,\n                        formatter: undefined,\n                        offsetY: 0,\n                        style: {\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    labels: {\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    }\n                },\n                colors: [baseColor, secondaryColor],\n                grid: {\n                    borderColor: borderColor,\n                    strokeDashArray: 4,\n                    yaxis: {\n                        lines: {\n                            show: true\n                        }\n                    }\n                },\n                markers: {\n                    colors: [baseLightColor, secondaryLightColor],\n                    strokeColor: [baseLightColor, secondaryLightColor],\n                    strokeWidth: 3\n                }\n            };\n\n            chart.self = new ApexCharts(element, options);\n            chart.self.render();   \n            chart.rendered = true;\n        } \n        \n        // Init chart\n        initChart();\n\n        // Update chart on theme mode change\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \n            if (chart.rendered) {\n                chart.self.destroy();\n            }\n\n            initChart();\n        }); \n    }\n\n    var initChartsWidget5 = function() {\n        var element = document.getElementById(\"kt_charts_widget_5_chart\");\n\n        if ( !element ) {\n            return;\n        }\n\n        var chart = {\n            self: null,\n            rendered: false\n        };\n\n        var initChart = function() {\n            var height = parseInt(KTUtil.css(element, 'height'));\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n            var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\n\n            var baseColor = KTUtil.getCssVariableValue('--bs-primary');\n            var secondaryColor = KTUtil.getCssVariableValue('--bs-info'); \n\n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [40, 50, 65, 70, 50, 30]\n                }, {\n                    name: 'Revenue',\n                    data: [-30, -40, -55, -60, -40, -20]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'bar',\n                    stacked: true,\n                    height: 350,\n                    toolbar: {\n                        show: false\n                    }\n                },\n                plotOptions: {\n                    bar: {\n                        horizontal: false,\n                        columnWidth: ['12%'],\n                        borderRadius: [6, 6]\n                    },\n                },\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                stroke: {\n                    show: true,\n                    width: 2,\n                    colors: ['transparent']\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    min: -80,\n                    max: 80,\n                    labels: {\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                fill: {\n                    opacity: 1\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    }\n                },\n                colors: [baseColor, secondaryColor],\n                grid: {\n                    borderColor: borderColor,\n                    strokeDashArray: 4,\n                    yaxis: {\n                        lines: {\n                            show: true\n                        }\n                    }\n                }\n            };\n\n            chart.self = new ApexCharts(element, options);\n            chart.self.render();   \n            chart.rendered = true;\n        } \n        \n        // Init chart\n        initChart();\n\n        // Update chart on theme mode change\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \n            if (chart.rendered) {\n                chart.self.destroy();\n            }\n\n            initChart();\n        });   \n    }\n\n    var initChartsWidget6 = function() {\n        var element = document.getElementById(\"kt_charts_widget_6_chart\");\n\n        if ( !element ) {\n            return;\n        }\n\n        var chart = {\n            self: null,\n            rendered: false\n        };\n\n        var initChart = function() {\n            var height = parseInt(KTUtil.css(element, 'height'));\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n            var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\n\n            var baseColor = KTUtil.getCssVariableValue('--bs-primary');\n            var baseLightColor = KTUtil.getCssVariableValue('--bs-primary-light');\n            var secondaryColor = KTUtil.getCssVariableValue('--bs-info');              \n\n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    type: 'bar',\n                    stacked: true,\n                    data: [40, 50, 65, 70, 50, 30]\n                }, {\n                    name: 'Revenue',\n                    type: 'bar',\n                    stacked: true,\n                    data: [20, 20, 25, 30, 30, 20]\n                }, {\n                    name: 'Expenses',\n                    type: 'area',\n                    data: [50, 80, 60, 90, 50, 70]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    stacked: true,\n                    height: 350,\n                    toolbar: {\n                        show: false\n                    }\n                },\n                plotOptions: {\n                    bar: {\n                        stacked: true,\n                        horizontal: false,\n                        borderRadius: 4,\n                        columnWidth: ['12%']\n                    },\n                },\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                stroke: {\n                    curve: 'smooth',\n                    show: true,\n                    width: 2,\n                    colors: ['transparent']\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    max: 120,\n                    labels: {\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                fill: {\n                    opacity: 1\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    }\n                },\n                colors: [baseColor, secondaryColor, baseLightColor],\n                grid: {\n                    borderColor: borderColor,\n                    strokeDashArray: 4,\n                    yaxis: {\n                        lines: {\n                            show: true\n                        }\n                    },\n                    padding: {\n                        top: 0,\n                        right: 0,\n                        bottom: 0,\n                        left: 0\n                    }\n                }\n            };\n\n            chart.self = new ApexCharts(element, options);\n            chart.self.render();   \n            chart.rendered = true;\n        } \n        \n        // Init chart\n        initChart();\n\n        // Update chart on theme mode change\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \n            if (chart.rendered) {\n                chart.self.destroy();\n            }\n\n            initChart();\n        });    \n    }\n\n    var initChartsWidget7 = function() {\n        var element = document.getElementById(\"kt_charts_widget_7_chart\");\n\n        if ( !element ) {\n            return;\n        }\n\n        var chart = {\n            self: null,\n            rendered: false\n        };\n\n        var initChart = function() {\n\n            var height = parseInt(KTUtil.css(element, 'height'));\n\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n            var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\n            var strokeColor = KTUtil.getCssVariableValue('--bs-gray-300');\n\n            var color1 = KTUtil.getCssVariableValue('--bs-warning');\n            var color1Light = KTUtil.getCssVariableValue('--bs-warning-light');\n\n            var color2 = KTUtil.getCssVariableValue('--bs-success');\n            var color2Light = KTUtil.getCssVariableValue('--bs-success-light');\n\n            var color3 = KTUtil.getCssVariableValue('--bs-primary');  \n            var color3Light = KTUtil.getCssVariableValue('--bs-primary-light');         \n\n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [30, 30, 50, 50, 35, 35]\n                }, {\n                    name: 'Revenue',\n                    data: [55, 20, 20, 20, 70, 70]\n                }, {\n                    name: 'Expenses',\n                    data: [60, 60, 40, 40, 30, 30]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'area',\n                    height: height,\n                    toolbar: {\n                        show: false\n                    },\n                    zoom: {\n                        enabled: false\n                    },\n                    sparkline: {\n                        enabled: true\n                    }\n                },\n                plotOptions: {},\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                fill: {\n                    type: 'solid',\n                    opacity: 1\n                },\n                stroke: {\n                    curve: 'smooth',\n                    show: true,\n                    width: 2,\n                    colors: [color1, 'transparent', 'transparent']\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    },\n                    crosshairs: {\n                        show: false,\n                        position: 'front',\n                        stroke: {\n                            color: strokeColor,\n                            width: 1,\n                            dashArray: 3\n                        }\n                    },\n                    tooltip: {\n                        enabled: true,\n                        formatter: undefined,\n                        offsetY: 0,\n                        style: {\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    }\n                },\n                colors: [color1, color2, color3],\n                grid: {\n                    borderColor: borderColor,\n                    strokeDashArray: 4,\n                    yaxis: {\n                        lines: {\n                            show: true\n                        }\n                    }\n                },\n                markers: {\n                    colors: [color1Light, color2Light, color3Light],\n                    strokeColor: [color1, color2, color3],\n                    strokeWidth: 3\n                }\n            };\n\n            chart.self = new ApexCharts(element, options);\n            chart.self.render();   \n            chart.rendered = true;\n        } \n        \n        // Init chart\n        initChart();\n\n        // Update chart on theme mode change\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \n            if (chart.rendered) {\n                chart.self.destroy();\n            }\n\n            initChart();\n        });   \n    }\n\n    var initChartsWidget8 = function() {\n        var element = document.getElementById(\"kt_charts_widget_8_chart\");\n\n        if ( !element ) {\n            return;\n        }\n\n        var chart = {\n            self: null,\n            rendered: false\n        };\n\n        var initChart = function() {\n            var height = parseInt(KTUtil.css(element, 'height'));\n\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n            var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\n            var strokeColor = KTUtil.getCssVariableValue('--bs-gray-300');\n\n            var color1 = KTUtil.getCssVariableValue('--bs-warning');\n            var color1Light = KTUtil.getCssVariableValue('--bs-warning-light');\n\n            var color2 = KTUtil.getCssVariableValue('--bs-success');\n            var color2Light = KTUtil.getCssVariableValue('--bs-success-light');\n\n            var color3 = KTUtil.getCssVariableValue('--bs-primary');  \n            var color3Light = KTUtil.getCssVariableValue('--bs-primary-light');  \n    \n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [30, 30, 50, 50, 35, 35]\n                }, {\n                    name: 'Revenue',\n                    data: [55, 20, 20, 20, 70, 70]\n                }, {\n                    name: 'Expenses',\n                    data: [60, 60, 40, 40, 30, 30]\n                },],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'area',\n                    height: height,\n                    toolbar: {\n                        show: false\n                    },\n                    zoom: {\n                        enabled: false\n                    },\n                    sparkline: {\n                        enabled: true\n                    }\n                },\n                plotOptions: {},\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                fill: {\n                    type: 'solid',\n                    opacity: 1\n                },\n                stroke: {\n                    curve: 'smooth',\n                    show: true,\n                    width: 2,\n                    colors: [color1, color2, color3]\n                },\n                xaxis: {\n                    x: 0,\n                    offsetX: 0,\n                    offsetY: 0,\n                    padding: {\n                        left: 0,\n                        right: 0,\n                        top: 0,\n                    },\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    },\n                    crosshairs: {\n                        show: false,\n                        position: 'front',\n                        stroke: {\n                            color: strokeColor,\n                            width: 1,\n                            dashArray: 3\n                        }\n                    },\n                    tooltip: {\n                        enabled: true,\n                        formatter: undefined,\n                        offsetY: 0,\n                        style: {\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    y: 0,\n                    offsetX: 0,\n                    offsetY: 0,\n                    padding: {\n                        left: 0,\n                        right: 0\n                    },\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    }\n                },\n                colors: [color1Light, color2Light, color3Light],\n                grid: {\n                    borderColor: borderColor,\n                    strokeDashArray: 4,\n                    padding: {\n                        top: 0,\n                        bottom: 0,\n                        left: 0,\n                        right: 0\n                    }\n                },\n                markers: {\n                    colors: [color1, color2, color3],\n                    strokeColor: [color1, color2, color3],\n                    strokeWidth: 3\n                }\n            };\n\n            chart.self = new ApexCharts(element, options);\n            chart.self.render();   \n            chart.rendered = true;\n        } \n        \n        // Init chart\n        initChart();\n\n        // Update chart on theme mode change\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \n            if (chart.rendered) {\n                chart.self.destroy();\n            }\n\n            initChart();\n        });  \n    }\n\n    // Mixed widgets\n    var initMixedWidget2 = function() {\n        var charts = document.querySelectorAll('.mixed-widget-2-chart');\n\n        var color;\n        var strokeColor;\n        var height;\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\n        var options;\n        var chart;\n\n        [].slice.call(charts).map(function(element) {\n            height = parseInt(KTUtil.css(element, 'height'));\n            color = KTUtil.getCssVariableValue('--bs-' + element.getAttribute(\"data-kt-color\"));\n            strokeColor = KTUtil.colorDarken(color, 15);\n\n            options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [30, 45, 32, 70, 40, 40, 40]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'area',\n                    height: height,\n                    toolbar: {\n                        show: false\n                    },\n                    zoom: {\n                        enabled: false\n                    },\n                    sparkline: {\n                        enabled: true\n                    },\n                    dropShadow: {\n                        enabled: true,\n                        enabledOnSeries: undefined,\n                        top: 5,\n                        left: 0,\n                        blur: 3,\n                        color: strokeColor,\n                        opacity: 0.5\n                    }\n                },\n                plotOptions: {},\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                fill: {\n                    type: 'solid',\n                    opacity: 0\n                },\n                stroke: {\n                    curve: 'smooth',\n                    show: true,\n                    width: 3,\n                    colors: [strokeColor]\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    },\n                    crosshairs: {\n                        show: false,\n                        position: 'front',\n                        stroke: {\n                            color: borderColor,\n                            width: 1,\n                            dashArray: 3\n                        }\n                    }\n                },\n                yaxis: {\n                    min: 0,\n                    max: 80,\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px',\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    },\n                    marker: {\n                        show: false\n                    }\n                },\n                colors: ['transparent'],\n                markers: {\n                    colors: [color],\n                    strokeColor: [strokeColor],\n                    strokeWidth: 3\n                }\n            };\n\n            chart = new ApexCharts(element, options);\n            chart.render();  \n        });        \n    }\n\n    var initMixedWidget3 = function() {\n        var charts = document.querySelectorAll('.mixed-widget-3-chart');      \n        \n        [].slice.call(charts).map(function(element) {\n            var height = parseInt(KTUtil.css(element, 'height'));\n\n            if ( !element ) {\n                return;\n            }\n\n            var color = element.getAttribute('data-kt-chart-color');\n\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\n            var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n            var lightColor = KTUtil.getCssVariableValue('--bs-' + color + '-light' );\n\n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [30, 25, 45, 30, 55, 55]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'area',\n                    height: height,\n                    toolbar: {\n                        show: false\n                    },\n                    zoom: {\n                        enabled: false\n                    },\n                    sparkline: {\n                        enabled: true\n                    }\n                },\n                plotOptions: {},\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                fill: {\n                    type: 'solid',\n                    opacity: 1\n                },\n                stroke: {\n                    curve: 'smooth',\n                    show: true,\n                    width: 3,\n                    colors: [baseColor]\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    },\n                    crosshairs: {\n                        show: false,\n                        position: 'front',\n                        stroke: {\n                            color: strokeColor,\n                            width: 1,\n                            dashArray: 3\n                        }\n                    },\n                    tooltip: {\n                        enabled: true,\n                        formatter: undefined,\n                        offsetY: 0,\n                        style: {\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    min: 0,\n                    max: 60,\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    }\n                },\n                colors: [lightColor],\n                markers: {\n                    colors: [lightColor],\n                    strokeColor: [baseColor],\n                    strokeWidth: 3\n                }\n            };\n\n            var chart = new ApexCharts(element, options);\n            chart.render();\n        });                         \n    }\n\n    var initMixedWidget4 = function() {\n        var charts = document.querySelectorAll('.mixed-widget-4-chart');\n\n        [].slice.call(charts).map(function(element) {\n            var height = parseInt(KTUtil.css(element, 'height'));\n\n            if ( !element ) {\n                return;\n            }\n\n            var color = element.getAttribute('data-kt-chart-color');\n\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n            var lightColor = KTUtil.getCssVariableValue('--bs-' + color + '-light' );\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-700');\n\n            var options = {\n                series: [74],\n                chart: {\n                    fontFamily: 'inherit',\n                    height: height,\n                    type: 'radialBar',\n                },\n                plotOptions: {\n                    radialBar: {\n                        hollow: {\n                            margin: 0,\n                            size: \"65%\"\n                        },\n                        dataLabels: {\n                            showOn: \"always\",\n                            name: {\n                                show: false,\n                                fontWeight: '700'\n                            },\n                            value: {\n                                color: labelColor,\n                                fontSize: \"30px\",\n                                fontWeight: '700',\n                                offsetY: 12,\n                                show: true,\n                                formatter: function (val) {\n                                    return val + '%';\n                                }\n                            }\n                        },\n                        track: {\n                            background: lightColor,\n                            strokeWidth: '100%'\n                        }\n                    }\n                },\n                colors: [baseColor],\n                stroke: {\n                    lineCap: \"round\",\n                },\n                labels: [\"Progress\"]\n            };\n\n            var chart = new ApexCharts(element, options);\n            chart.render();\n        });        \n    }\n\n    var initMixedWidget5 = function() {\n        var charts = document.querySelectorAll('.mixed-widget-5-chart');\n\n        var initChart = function(chart, element) {\n            var height = parseInt(KTUtil.css(element, 'height'));\n\n            if ( !element ) {\n                return;\n            }\n\n            var color = element.getAttribute('data-kt-chart-color');\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\n            var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n            var lightColor = KTUtil.getCssVariableValue('--bs-' + color + '-light' );\n\n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [30, 30, 60, 25, 25, 40]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'area',\n                    height: height,\n                    toolbar: {\n                        show: false\n                    },\n                    zoom: {\n                        enabled: false\n                    },\n                    sparkline: {\n                        enabled: true\n                    }\n                },\n                plotOptions: {},\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                fill: {\n                    type: 'solid',\n                    opacity: 1\n                },\n                fill1: {\n                    type: 'gradient',\n                    opacity: 1,\n                    gradient: {\n                        type: \"vertical\",\n                        shadeIntensity: 0.5,\n                        gradientToColors: undefined,\n                        inverseColors: true,\n                        opacityFrom: 1,\n                        opacityTo: 0.375,\n                        stops: [25, 50, 100],\n                        colorStops: []\n                    }\n                },\n                stroke: {\n                    curve: 'smooth',\n                    show: true,\n                    width: 3,\n                    colors: [baseColor]\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    },\n                    crosshairs: {\n                        show: false,\n                        position: 'front',\n                        stroke: {\n                            color: strokeColor,\n                            width: 1,\n                            dashArray: 3\n                        }\n                    },\n                    tooltip: {\n                        enabled: true,\n                        formatter: undefined,\n                        offsetY: 0,\n                        style: {\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    min: 0,\n                    max: 65,\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    }\n                },\n                colors: [lightColor],\n                markers: {\n                    colors: [lightColor],\n                    strokeColor: [baseColor],\n                    strokeWidth: 3\n                }\n            };\n\n            chart.self = new ApexCharts(element, options);\n            chart.self.render();   \n            chart.rendered = true;\n        };\n\n        [].slice.call(charts).map(function(element) {\n            var chart = {\n                self: null,\n                rendered: false\n            };\n\n            initChart(chart, element);\n            \n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart, element);\n            });            \n        });        \n    }\n\n    var initMixedWidget6 = function() {\n        var charts = document.querySelectorAll('.mixed-widget-6-chart');\n\n        [].slice.call(charts).map(function(element) {\n            var height = parseInt(KTUtil.css(element, 'height'));\n\n            if ( !element ) {\n                return;\n            }\n\n            var color = element.getAttribute('data-kt-chart-color');\n\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\n            var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n            var lightColor = KTUtil.getCssVariableValue('--bs-' + color + '-light' );\n\n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [30, 25, 45, 30, 55, 55]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'area',\n                    height: height,\n                    toolbar: {\n                        show: false\n                    },\n                    zoom: {\n                        enabled: false\n                    },\n                    sparkline: {\n                        enabled: true\n                    }\n                },\n                plotOptions: {},\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                fill: {\n                    type: 'solid',\n                    opacity: 1\n                },\n                stroke: {\n                    curve: 'smooth',\n                    show: true,\n                    width: 3,\n                    colors: [baseColor]\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    },\n                    crosshairs: {\n                        show: false,\n                        position: 'front',\n                        stroke: {\n                            color: strokeColor,\n                            width: 1,\n                            dashArray: 3\n                        }\n                    },\n                    tooltip: {\n                        enabled: true,\n                        formatter: undefined,\n                        offsetY: 0,\n                        style: {\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    min: 0,\n                    max: 60,\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    }\n                },\n                colors: [lightColor],\n                markers: {\n                    colors: [lightColor],\n                    strokeColor: [baseColor],\n                    strokeWidth: 3\n                }\n            };\n\n            var chart = new ApexCharts(element, options);\n            chart.render();\n        });        \n    }\n\n    var initMixedWidget7 = function() {\n        var charts = document.querySelectorAll('.mixed-widget-7-chart');\n\n        [].slice.call(charts).map(function(element) {\n            var height = parseInt(KTUtil.css(element, 'height'));\n\n            if ( !element ) {\n                return;\n            }\n\n            var color = element.getAttribute('data-kt-chart-color');\n\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\n            var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n            var lightColor = KTUtil.getCssVariableValue('--bs-' + color + '-light');\n\n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [15, 25, 15, 40, 20, 50]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'area',\n                    height: height,\n                    toolbar: {\n                        show: false\n                    },\n                    zoom: {\n                        enabled: false\n                    },\n                    sparkline: {\n                        enabled: true\n                    }\n                },\n                plotOptions: {},\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                fill: {\n                    type: 'solid',\n                    opacity: 1\n                },\n                stroke: {\n                    curve: 'smooth',\n                    show: true,\n                    width: 3,\n                    colors: [baseColor]\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    },\n                    crosshairs: {\n                        show: false,\n                        position: 'front',\n                        stroke: {\n                            color: strokeColor,\n                            width: 1,\n                            dashArray: 3\n                        }\n                    },\n                    tooltip: {\n                        enabled: true,\n                        formatter: undefined,\n                        offsetY: 0,\n                        style: {\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    min: 0,\n                    max: 60,\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    }\n                },\n                colors: [lightColor],\n                markers: {\n                    colors: [lightColor],\n                    strokeColor: [baseColor],\n                    strokeWidth: 3\n                }\n            };\n\n            var chart = new ApexCharts(element, options);\n            chart.render();\n        });        \n    }\n\n    var initMixedWidget10 = function() {\n        var charts = document.querySelectorAll('.mixed-widget-10-chart');\n\n        var color;\n        var height;\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\n        var baseLightColor;\n        var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');\n        var baseColor;\n        var options;\n        var chart;\n\n        [].slice.call(charts).map(function(element) {\n            color = element.getAttribute(\"data-kt-color\");\n            height = parseInt(KTUtil.css(element, 'height'));\n            baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n\n            options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [50, 60, 70, 80, 60, 50, 70, 60]\n                }, {\n                    name: 'Revenue',\n                    data: [50, 60, 70, 80, 60, 50, 70, 60]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'bar',\n                    height: height,\n                    toolbar: {\n                        show: false\n                    }\n                },\n                plotOptions: {\n                    bar: {\n                        horizontal: false,\n                        columnWidth: ['50%'],\n                        borderRadius: 4\n                    },\n                },\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                stroke: {\n                    show: true,\n                    width: 2,\n                    colors: ['transparent']\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    y: 0,\n                    offsetX: 0,\n                    offsetY: 0,\n                    labels: {\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                fill: {\n                    type: 'solid'\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" revenue\"\n                        }\n                    }\n                },\n                colors: [baseColor, secondaryColor],\n                grid: {\n                    padding: {\n                        top: 10\n                    },\n                    borderColor: borderColor,\n                    strokeDashArray: 4,\n                    yaxis: {\n                        lines: {\n                            show: true\n                        }\n                    }\n                }\n            };\n\n            chart = new ApexCharts(element, options);\n            chart.render();      \n        });        \n    }\n\n    var initMixedWidget12 = function() {\n        var charts = document.querySelectorAll('.mixed-widget-12-chart');\n\n        var color;\n        var strokeColor;\n        var height;\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\n        var options;\n        var chart;\n\n        [].slice.call(charts).map(function(element) {            \n            height = parseInt(KTUtil.css(element, 'height'));\n\n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [35, 65, 75, 55, 45, 60, 55]\n                }, {\n                    name: 'Revenue',\n                    data: [40, 70, 80, 60, 50, 65, 60]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'bar',\n                    height: height,\n                    toolbar: {\n                        show: false\n                    },\n                    sparkline: {\n                        enabled: true\n                    },\n                },\n                plotOptions: {\n                    bar: {\n                        horizontal: false,\n                        columnWidth: ['30%'],\n                        borderRadius: 2\n                    }\n                },\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                stroke: {\n                    show: true,\n                    width: 1,\n                    colors: ['transparent']\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    min: 0,\n                    max: 100,\n                    labels: {\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                fill: {\n                    type: ['solid', 'solid'],\n                    opacity: [0.25, 1]\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    },\n                    marker: {\n                        show: false\n                    }\n                },\n                colors: ['#ffffff', '#ffffff'],\n                grid: {\n                    borderColor: borderColor,\n                    strokeDashArray: 4,\n                    yaxis: {\n                        lines: {\n                            show: true\n                        }\n                    },\n                    padding: {\n                        left: 20,\n                        right: 20\n                    }\n                }\n            };\n\n            var chart = new ApexCharts(element, options);\n            chart.render()\n        });        \n    } \n\n    var initMixedWidget13 = function() {\n        var height;\n        var charts = document.querySelectorAll('.mixed-widget-13-chart');\n\n        [].slice.call(charts).map(function(element) {\n            height = parseInt(KTUtil.css(element, 'height'));\n\n            if ( !element ) {\n                return;\n            }\n                   \n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\n            var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');\n\n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [15, 25, 15, 40, 20, 50]\n                }],\n                grid: {\n                    show: false,\n                    padding: {\n                        top: 0,\n                        bottom: 0,\n                        left: 0,\n                        right: 0\n                    }\n                },\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'area',\n                    height: height,\n                    toolbar: {\n                        show: false\n                    },\n                    zoom: {\n                        enabled: false\n                    },\n                    sparkline: {\n                        enabled: true\n                    }\n                },\n                plotOptions: {},\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                fill: {\n                    type: 'gradient',\n                    gradient: {                        \n                        opacityFrom: 0.4,\n                        opacityTo: 0,\n                        stops: [20, 120, 120, 120]\n                    }\n                },\n                stroke: {\n                    curve: 'smooth',\n                    show: true,\n                    width: 3,\n                    colors: ['#FFFFFF']\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    },\n                    crosshairs: {\n                        show: false,\n                        position: 'front',\n                        stroke: {\n                            color: strokeColor,\n                            width: 1,\n                            dashArray: 3\n                        }\n                    },\n                    tooltip: {\n                        enabled: true,\n                        formatter: undefined,\n                        offsetY: 0,\n                        style: {\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    min: 0,\n                    max: 60,\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    }\n                },\n                colors: ['#ffffff'],\n                markers: {\n                    colors: [labelColor],\n                    strokeColor: [strokeColor],\n                    strokeWidth: 3\n                }\n            };\n\n            var chart = new ApexCharts(element, options);\n            chart.render();\n        });        \n    }\n\n    var initMixedWidget14 = function() {   \t\t\n\t\tvar charts = document.querySelectorAll('.mixed-widget-14-chart');  \n        var options;\n        var chart;\n        var height;\n\n        [].slice.call(charts).map(function(element) {\n            height = parseInt(KTUtil.css(element, 'height'));      \n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-800');      \n\n            options = {\n                series: [{\n                    name: 'Inflation',\n                    data: [1, 2.1, 1, 2.1, 4.1, 6.1, 4.1, 4.1, 2.1, 4.1, 2.1, 3.1, 1, 1, 2.1]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    height: height,\n                    type: 'bar',\n                    toolbar: {\n                        show: false\n                    }                             \n                },\n                grid: {\n                    show: false,\n                    padding: {\n                        top: 0,\n                        bottom: 0,\n                        left: 0,\n                        right: 0\n                    }\n                },                \n                colors: ['#ffffff'],         \n                plotOptions: {\n                    bar: {                    \n                        borderRadius: 2.5,\n                        dataLabels: {\n                            position: 'top', // top, center, bottom\n                        },\n                        columnWidth: '20%'                             \n                    }\n                },            \n                dataLabels: {\n                    enabled: false,\n                    formatter: function(val) {\n                        return val + \"%\";\n                    },\n                    offsetY: -20,\n                    style: {\n                        fontSize: '12px',\n                        colors: [\"#304758\"]\n                    }\n                },          \n                xaxis: {\n                    labels: {\n                        show: false,\n                    },\n                    categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Jan\", \"Feb\", \"Mar\"],\n                    position: 'top',\n                    axisBorder: {\n                        show: false\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    crosshairs: {\n                        show: false\n                    },\n                    tooltip: {\n                        enabled: false\n                    }\n                },\n                yaxis: {\n                    show: false,\n                    axisBorder: {\n                        show: false\n                    },\n                    axisTicks: {\n                        show: false,\n                        background: labelColor\n                    },\n                    labels: {\n                        show: false,\n                        formatter: function(val) {\n                            return val + \"%\";\n                        }\n                    }                \n                }\t\t\n            };\n\n            chart = new ApexCharts(element, options);\n            chart.render(); \n        }); \n\t}\n    \n    var initMixedWidget16 = function() {\n        var element = document.getElementById(\"kt_charts_mixed_widget_16_chart\");\n        var height = parseInt(KTUtil.css(element, 'height'));\n\n        if (!element) {\n            return;\n        }\n\n        var options = {\n            labels: [\"Total Members\"],\n            series: [74],\n            chart: {\n                fontFamily: 'inherit',\n                height: height,\n                type: 'radialBar',\n                offsetY: 0\n            },\n            plotOptions: {\n                radialBar: {\n                    startAngle: -90,\n                    endAngle: 90,\n\n                    hollow: {\n                        margin: 0,\n                        size: \"70%\"\n                    },\n                    dataLabels: {\n                        showOn: \"always\",\n                        name: {\n                            show: true,\n                            fontSize: \"13px\",\n                            fontWeight: \"700\",\n                            offsetY: -5,\n                            color: KTUtil.getCssVariableValue('--bs-gray-500')\n                        },\n                        value: {\n                            color: KTUtil.getCssVariableValue('--bs-gray-700'),\n                            fontSize: \"30px\",\n                            fontWeight: \"700\",\n                            offsetY: -40,\n                            show: true\n                        }\n                    },\n                    track: {\n                        background: KTUtil.getCssVariableValue('--bs-primary-light'),\n                        strokeWidth: '100%'\n                    }\n                }\n            },\n            colors: [KTUtil.getCssVariableValue('--bs-primary')],\n            stroke: {\n                lineCap: \"round\",\n            }            \n        };\n\n        var chart = new ApexCharts(element, options);\n        chart.render();\n    }\n\n    var initMixedWidget17 = function() {        \n        var charts = document.querySelectorAll('.mixed-widget-17-chart');\n\n        [].slice.call(charts).map(function(element) {\n            var height = parseInt(KTUtil.css(element, 'height'));\n\n            if (!element) {\n                return;\n            }\n\n            var color = element.getAttribute('data-kt-chart-color');\n\n            var options = {\n                labels: [\"Total Orders\"],\n                series: [75],\n                chart: {\n                    fontFamily: 'inherit',\n                    height: height,\n                    type: 'radialBar',\n                    offsetY: 0\n                },\n                plotOptions: {\n                    radialBar: {\n                        startAngle: -90,\n                        endAngle: 90,\n                        hollow: {\n                            margin: 0,\n                            size: \"55%\"\n                        },\n                        dataLabels: {\n                            showOn: \"always\",\n                            name: {\n                                show: true,\n                                fontSize: \"12px\",\n                                fontWeight: \"700\",\n                                offsetY: -5,\n                                color: KTUtil.getCssVariableValue('--bs-gray-500')\n                            },\n                            value: {\n                                color: KTUtil.getCssVariableValue('--bs-gray-900'),\n                                fontSize: \"24px\",\n                                fontWeight: \"600\",\n                                offsetY: -40,\n                                show: true,\n                                formatter: function (value) {\n                                    return '8,346';\n                                }\n                            }\n                        },\n                        track: {\n                            background: KTUtil.getCssVariableValue('--bs-gray-300'),\n                            strokeWidth: '100%'\n                        }\n                    }\n                },\n                colors: [KTUtil.getCssVariableValue('--bs-' + color)],\n                stroke: {\n                    lineCap: \"round\",\n                }            \n            };\n\n            var chart = new ApexCharts(element, options);\n            chart.render();\n        }); \n    }  \n\n    var initMixedWidget18 = function() {\n        var element = document.getElementById(\"kt_charts_mixed_widget_18_chart\");  \n        var height = parseInt(KTUtil.css(element, 'height'));\n\n        if ( !element ) {\n            return;\n        }\n\n        var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\n        var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\n        var fillColor = KTThemeMode.getMode() === \"dark\" ? KTUtil.getCssVariableValue('--bs-gray-200') : '#D6D6E0';\n\n        var options = {\n            series: [{\n                name: 'Net Profit',\n                data: [30, 25, 45, 30, 55, 55]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                },\n                zoom: {\n                    enabled: false\n                },\n                sparkline: {\n                    enabled: true\n                }\n            },\n            plotOptions: {},\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: 'solid',\n                opacity: 1\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [strokeColor]\n            },\n            xaxis: {\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    show: false,\n                    position: 'front',\n                    stroke: {\n                        color: strokeColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                min: 0,\n                max: 60,\n                labels: {\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \" thousands\"\n                    }\n                }\n            },\n            colors: [fillColor],\n            markers: {\n                colors: [fillColor],\n                strokeColor: [strokeColor],\n                strokeWidth: 3\n            }\n        };\n\n        var chart = new ApexCharts(element, options);\n        chart.render();\n    }\n\n    var initMixedWidget19 = function() {\n        var chart = {\n            self: null,\n            rendered: false\n        };\n\n        function initChart() {\n            var element = document.getElementById(\"kt_charts_mixed_widget_19_chart\");  \n            var height = parseInt(KTUtil.css(element, 'height'));\n\n            if ( !element ) {\n                return;\n            }\n\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\n            var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'info');\n            var fillColor = KTUtil.getCssVariableValue('--bs-info-light')\n\n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [30, 25, 45, 30, 55, 55]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'area',\n                    height: height,\n                    toolbar: {\n                        show: false\n                    },\n                    zoom: {\n                        enabled: false\n                    },\n                    sparkline: {\n                        enabled: true\n                    }\n                },\n                plotOptions: {},\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                fill: {\n                    type: 'solid',\n                    opacity: 1\n                },\n                stroke: {\n                    curve: 'smooth',\n                    show: true,\n                    width: 3,\n                    colors: [strokeColor]\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    },\n                    crosshairs: {\n                        show: false,\n                        position: 'front',\n                        stroke: {\n                            color: strokeColor,\n                            width: 1,\n                            dashArray: 3\n                        }\n                    },\n                    tooltip: {\n                        enabled: true,\n                        formatter: undefined,\n                        offsetY: 0,\n                        style: {\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    min: 0,\n                    max: 60,\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    }\n                },\n                colors: [fillColor],\n                markers: {\n                    colors: [fillColor],\n                    strokeColor: [strokeColor],\n                    strokeWidth: 3\n                }\n            };\n\n            chart.self = new ApexCharts(element, options);\n\n             // Set timeout to properly get the parent elements width\n            setTimeout(function() {\n                chart.self.render();\n                chart.rendered = true;\n            }, 200);\n        }       \n\n        initChart();\n\n        // Update chart on theme mode change\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \n            if (chart.rendered) {\n                chart.self.destroy();\n            }\n\n            initChart();\n        });\n    }\n\n    // Feeds Widgets\n    var initFeedWidget1 = function() {\n        var formEl = document.querySelector(\"#kt_forms_widget_1_form\");\n        var editorId = 'kt_forms_widget_1_editor';\n\n        if ( !formEl ) {\n            return;\n        }\n\n        // init editor\n        var options = {\n            modules: {\n                toolbar: {\n                    container: \"#kt_forms_widget_1_editor_toolbar\"\n                }\n            },\n            placeholder: 'What is on your mind ?',\n            theme: 'snow'\n        };\n\n        if (!formEl) {\n            return;\n        }\n\n        // Init editor\n        var editorObj = new Quill('#' + editorId, options);\n    }\n\n    var initFeedsWidget4 = function() {\n        var btn = document.querySelector('#kt_widget_5_load_more_btn');\n        var widget5 = document.querySelector('#kt_widget_5');        \n\n        if (btn) {\n            btn.addEventListener('click', function(e){\n                e.preventDefault();\n                btn.setAttribute('data-kt-indicator', 'on');\n\n                setTimeout(function() {\n                    btn.removeAttribute('data-kt-indicator');\n                    widget5.classList.remove('d-none');         \n                    btn.classList.add('d-none');         \n                    \n                    KTUtil.scrollTo(widget5, 200);\n                }, 2000);                \n            });\n        }                 \n    }  \n\n    // Calendar\n    var initCalendarWidget1 = function() {\n        if (typeof FullCalendar === 'undefined' || !document.querySelector('#kt_calendar_widget_1')) {\n            return;\n        }\n\n        var todayDate = moment().startOf('day');\n        var YM = todayDate.format('YYYY-MM');\n        var YESTERDAY = todayDate.clone().subtract(1, 'day').format('YYYY-MM-DD');\n        var TODAY = todayDate.format('YYYY-MM-DD');\n        var TOMORROW = todayDate.clone().add(1, 'day').format('YYYY-MM-DD');\n\n        var calendarEl = document.getElementById('kt_calendar_widget_1');\n        var calendar = new FullCalendar.Calendar(calendarEl, {\n            headerToolbar: {\n                left: 'prev,next today',\n                center: 'title',\n                right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\n            },\n\n            height: 800,\n            contentHeight: 780,\n            aspectRatio: 3,  // see: https://fullcalendar.io/docs/aspectRatio\n\n            nowIndicator: true,\n            now: TODAY + 'T09:25:00', // just for demo\n\n            views: {\n                dayGridMonth: { buttonText: 'month' },\n                timeGridWeek: { buttonText: 'week' },\n                timeGridDay: { buttonText: 'day' }\n            },\n\n            initialView: 'dayGridMonth',\n            initialDate: TODAY,\n\n            editable: true,\n            dayMaxEvents: true, // allow \"more\" link when too many events\n            navLinks: true,\n            events: [\n                {\n                    title: 'All Day Event',\n                    start: YM + '-01',\n                    description: 'Toto lorem ipsum dolor sit incid idunt ut',\n                    className: \"fc-event-danger fc-event-solid-warning\"\n                },\n                {\n                    title: 'Reporting',\n                    start: YM + '-14T13:30:00',\n                    description: 'Lorem ipsum dolor incid idunt ut labore',\n                    end: YM + '-14',\n                    className: \"fc-event-success\"\n                },\n                {\n                    title: 'Company Trip',\n                    start: YM + '-02',\n                    description: 'Lorem ipsum dolor sit tempor incid',\n                    end: YM + '-03',\n                    className: \"fc-event-primary\"\n                },\n                {\n                    title: 'ICT Expo 2017 - Product Release',\n                    start: YM + '-03',\n                    description: 'Lorem ipsum dolor sit tempor inci',\n                    end: YM + '-05',\n                    className: \"fc-event-light fc-event-solid-primary\"\n                },\n                {\n                    title: 'Dinner',\n                    start: YM + '-12',\n                    description: 'Lorem ipsum dolor sit amet, conse ctetur',\n                    end: YM + '-10'\n                },\n                {\n                    id: 999,\n                    title: 'Repeating Event',\n                    start: YM + '-09T16:00:00',\n                    description: 'Lorem ipsum dolor sit ncididunt ut labore',\n                    className: \"fc-event-danger\"\n                },\n                {\n                    id: 1000,\n                    title: 'Repeating Event',\n                    description: 'Lorem ipsum dolor sit amet, labore',\n                    start: YM + '-16T16:00:00'\n                },\n                {\n                    title: 'Conference',\n                    start: YESTERDAY,\n                    end: TOMORROW,\n                    description: 'Lorem ipsum dolor eius mod tempor labore',\n                    className: \"fc-event-primary\"\n                },\n                {\n                    title: 'Meeting',\n                    start: TODAY + 'T10:30:00',\n                    end: TODAY + 'T12:30:00',\n                    description: 'Lorem ipsum dolor eiu idunt ut labore'\n                },\n                {\n                    title: 'Lunch',\n                    start: TODAY + 'T12:00:00',\n                    className: \"fc-event-info\",\n                    description: 'Lorem ipsum dolor sit amet, ut labore'\n                },\n                {\n                    title: 'Meeting',\n                    start: TODAY + 'T14:30:00',\n                    className: \"fc-event-warning\",\n                    description: 'Lorem ipsum conse ctetur adipi scing'\n                },\n                {\n                    title: 'Happy Hour',\n                    start: TODAY + 'T17:30:00',\n                    className: \"fc-event-info\",\n                    description: 'Lorem ipsum dolor sit amet, conse ctetur'\n                },\n                {\n                    title: 'Dinner',\n                    start: TOMORROW + 'T05:00:00',\n                    className: \"fc-event-solid-danger fc-event-light\",\n                    description: 'Lorem ipsum dolor sit ctetur adipi scing'\n                },\n                {\n                    title: 'Birthday Party',\n                    start: TOMORROW + 'T07:00:00',\n                    className: \"fc-event-primary\",\n                    description: 'Lorem ipsum dolor sit amet, scing'\n                },\n                {\n                    title: 'Click for Google',\n                    url: 'http://google.com/',\n                    start: YM + '-28',\n                    className: \"fc-event-solid-info fc-event-light\",\n                    description: 'Lorem ipsum dolor sit amet, labore'\n                }\n            ]\n        });\n\n        calendar.render();\n    }\n\n    // Daterangepicker\n    var initDaterangepicker = function () {\n        if (!document.querySelector('#kt_dashboard_daterangepicker')) {\n            return;\n        }\n\n        var picker = $('#kt_dashboard_daterangepicker');\n        var start = moment();\n        var end = moment();\n\n        function cb(start, end, label) {\n            var title = '';\n            var range = '';\n\n            if ((end - start) < 100 || label == 'Today') {\n                title = 'Today:';\n                range = start.format('MMM D');\n            } else if (label == 'Yesterday') {\n                title = 'Yesterday:';\n                range = start.format('MMM D');\n            } else {\n                range = start.format('MMM D') + ' - ' + end.format('MMM D');\n            }\n\n            $('#kt_dashboard_daterangepicker_date').html(range);\n            $('#kt_dashboard_daterangepicker_title').html(title);\n        }\n\n        picker.daterangepicker({\n            direction: KTUtil.isRTL(),\n            startDate: start,\n            endDate: end,\n            opens: 'left',\n            applyClass: 'btn-primary',\n            cancelClass: 'btn-light-primary',\n            ranges: {\n                'Today': [moment(), moment()],\n                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\n                'Last 7 Days': [moment().subtract(6, 'days'), moment()],\n                'Last 30 Days': [moment().subtract(29, 'days'), moment()],\n                'This Month': [moment().startOf('month'), moment().endOf('month')],\n                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\n            }\n        }, cb);\n\n        cb(start, end, '');\n    }    \n\n    // Dark mode toggler\n    var initDarkModeToggle = function() {\n        var toggle = document.querySelector('#kt_user_menu_dark_mode_toggle');\n        \n        if (toggle) {\n            toggle.addEventListener('click', function() {\n                window.location.href = this.getAttribute('data-kt-url');\n            });\n        }\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            // Daterangepicker\n            initDaterangepicker();\n            \n            // Dark Mode\n            initDarkModeToggle();\n\n            // Statistics widgets\n            initStatisticsWidget3();\n            initStatisticsWidget4();            \n\n            // Charts widgets\n            initChartsWidget1();\n            initChartsWidget2();\n            initChartsWidget3();\n            initChartsWidget4();\n            initChartsWidget5();\n            initChartsWidget6();\n            initChartsWidget7();\n            initChartsWidget8();\n\n            // Mixed widgets\n            initMixedWidget2();\n            initMixedWidget3();\n            initMixedWidget4();\n            initMixedWidget5();\n            initMixedWidget6();\n            initMixedWidget7();\n            initMixedWidget10();            \n            initMixedWidget12();\n            initMixedWidget13(); \n            initMixedWidget14();\n            initMixedWidget16();\n            initMixedWidget17();\n            initMixedWidget18();\n            initMixedWidget19();\n\n            // Feeds\n            initFeedWidget1();\n            initFeedsWidget4();\n\n            // Calendar\n            initCalendarWidget1();           \n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = KTWidgets;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTWidgets.init();\n});\n"]}