{"version":3,"file":"add-schedule.js","names":["KTUsersAddSchedule","element","document","getElementById","form","querySelector","modal","bootstrap","Modal","init","$","flatpickr","enableTime","dateFormat","tagifyInput","Tagify","whitelist","maxTags","dropdown","maxItems","classname","enabled","closeOnSelect","validator","FormValidation","formValidation","fields","event_datetime","validators","notEmpty","message","event_name","event_org","event_invitees","plugins","trigger","Trigger","Bootstrap5","rowSelector","eleInvalidClass","eleValidClass","on","revalidateField","addEventListener","e","preventDefault","Swal","fire","text","icon","showCancelButton","buttonsStyling","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","then","result","value","reset","hide","dismiss","submitButton","validate","status","console","log","setAttribute","disabled","setTimeout","removeAttribute","isConfirmed","initAddSchedule","KTUtil","onDOMContentLoaded"],"sources":["apps/user-management/users/view/add-schedule.js"],"mappings":"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","sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTUsersAddSchedule = function () {\n    // Shared variables\n    const element = document.getElementById('kt_modal_add_schedule');\n    const form = element.querySelector('#kt_modal_add_schedule_form');\n    const modal = new bootstrap.Modal(element);\n\n    // Init add schedule modal\n    var initAddSchedule = () => {       \n\n        // Init flatpickr -- for more info: https://flatpickr.js.org/\n        $(\"#kt_modal_add_schedule_datepicker\").flatpickr({\n            enableTime: true,\n            dateFormat: \"Y-m-d H:i\",\n        });\n\n        // Init tagify -- for more info: https://yaireo.github.io/tagify/\n        const tagifyInput = form.querySelector('#kt_modal_add_schedule_tagify');\n        new Tagify(tagifyInput, {\n            whitelist: [\"sean@dellito.com\", \"brian@exchange.com\", \"mikaela@pexcom.com\", \"f.mitcham@kpmg.com.au\", \"olivia@corpmail.com\", \"owen.neil@gmail.com\", \"dam@consilting.com\", \"emma@intenso.com\", \"ana.cf@limtel.com\", \"robert@benko.com\", \"lucy.m@fentech.com\", \"ethan@loop.com.au\"],\n            maxTags: 10,\n            dropdown: {\n                maxItems: 20,           // <- mixumum allowed rendered suggestions\n                classname: \"tagify__inline__suggestions\", // <- custom classname for this dropdown, so it could be targeted\n                enabled: 0,             // <- show suggestions on focus\n                closeOnSelect: false    // <- do not hide the suggestions dropdown once an item has been selected\n            }\n        });\n\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n\t\tvar validator = FormValidation.formValidation(\n\t\t\tform,\n\t\t\t{\n\t\t\t\tfields: {\n\t\t\t\t\t'event_datetime': {\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'Event date & time is required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n                    'event_name': {\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'Event name is required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n                    'event_org': {\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'Event organiser is required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n                    'event_invitees': {\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'Event invitees is required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\t\t\t\t\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\tplugins: {\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap5({\n\t\t\t\t\t\trowSelector: '.fv-row',\n                        eleInvalidClass: '',\n                        eleValidClass: ''\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n        // Revalidate country field. For more info, plase visit the official plugin site: https://select2.org/\n        $(form.querySelector('[name=\"event_invitees\"]')).on('change', function () {\n            // Revalidate the field when an option is chosen\n            validator.revalidateField('event_invitees');\n        });\n\n        // Close button handler\n        const closeButton = element.querySelector('[data-kt-users-modal-action=\"close\"]');\n        closeButton.addEventListener('click', e => {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Are you sure you would like to cancel?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: \"Yes, cancel it!\",\n                cancelButtonText: \"No, return\",\n                customClass: {\n                    confirmButton: \"btn btn-primary\",\n                    cancelButton: \"btn btn-active-light\"\n                }\n            }).then(function (result) {\n                if (result.value) {\n                    form.reset(); // Reset form\t\n                    modal.hide(); // Hide modal\t\t\t\t\n                } else if (result.dismiss === 'cancel') {\n                    Swal.fire({\n                        text: \"Your form has not been cancelled!.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn btn-primary\",\n                        }\n                    });\n                }\n            });\n        });\n\n        // Cancel button handler\n        const cancelButton = element.querySelector('[data-kt-users-modal-action=\"cancel\"]');\n        cancelButton.addEventListener('click', e => {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Are you sure you would like to cancel?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: \"Yes, cancel it!\",\n                cancelButtonText: \"No, return\",\n                customClass: {\n                    confirmButton: \"btn btn-primary\",\n                    cancelButton: \"btn btn-active-light\"\n                }\n            }).then(function (result) {\n                if (result.value) {\n                    form.reset(); // Reset form\t\n                    modal.hide(); // Hide modal\t\t\t\t\n                } else if (result.dismiss === 'cancel') {\n                    Swal.fire({\n                        text: \"Your form has not been cancelled!.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn btn-primary\",\n                        }\n                    });\n                }\n            });\n        });\n\n        // Submit button handler\n        const submitButton = element.querySelector('[data-kt-users-modal-action=\"submit\"]');\n\t\tsubmitButton.addEventListener('click', function (e) {\n\t\t\t// Prevent default button action\n\t\t\te.preventDefault();\n\n\t\t\t// Validate form before submit\n\t\t\tif (validator) {\n\t\t\t\tvalidator.validate().then(function (status) {\n\t\t\t\t\tconsole.log('validated!');\n\n\t\t\t\t\tif (status == 'Valid') {\n\t\t\t\t\t\t// Show loading indication\n\t\t\t\t\t\tsubmitButton.setAttribute('data-kt-indicator', 'on');\n\n\t\t\t\t\t\t// Disable button to avoid multiple click \n\t\t\t\t\t\tsubmitButton.disabled = true;\n\n\t\t\t\t\t\t// Simulate form submission. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t// Remove loading indication\n\t\t\t\t\t\t\tsubmitButton.removeAttribute('data-kt-indicator');\n\n\t\t\t\t\t\t\t// Enable button\n\t\t\t\t\t\t\tsubmitButton.disabled = false;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Show popup confirmation \n\t\t\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\t\t\ttext: \"Form has been successfully submitted!\",\n\t\t\t\t\t\t\t\ticon: \"success\",\n\t\t\t\t\t\t\t\tbuttonsStyling: false,\n\t\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\n\t\t\t\t\t\t\t\tcustomClass: {\n\t\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}).then(function (result) {\n\t\t\t\t\t\t\t\tif (result.isConfirmed) {\n\t\t\t\t\t\t\t\t\tmodal.hide();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t//form.submit(); // Submit form\n\t\t\t\t\t\t}, 2000);   \t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Show popup warning. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n\t\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\t\ttext: \"Sorry, looks like there are some errors detected, please try again.\",\n\t\t\t\t\t\t\ticon: \"error\",\n\t\t\t\t\t\t\tbuttonsStyling: false,\n\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\n\t\t\t\t\t\t\tcustomClass: {\n\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n    }\n\n    return {\n        // Public functions\n        init: function () {\n            initAddSchedule();\n        }\n    };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTUsersAddSchedule.init();\n});"]}