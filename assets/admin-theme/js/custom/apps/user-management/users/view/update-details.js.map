{"version":3,"file":"update-details.js","names":["KTUsersUpdateDetails","element","document","getElementById","form","querySelector","modal","bootstrap","Modal","init","addEventListener","e","preventDefault","Swal","fire","text","icon","showCancelButton","buttonsStyling","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","then","result","value","reset","hide","dismiss","submitButton","setAttribute","disabled","setTimeout","removeAttribute","isConfirmed","initUpdateDetails","KTUtil","onDOMContentLoaded"],"sources":["apps/user-management/users/view/update-details.js"],"mappings":"AAAA,aAGA,IAAIA,qBAAuB,WAEvB,MAAMC,EAAUC,SAASC,eAAe,2BAClCC,EAAOH,EAAQI,cAAc,8BAC7BC,EAAQ,IAAIC,UAAUC,MAAMP,GAiHlC,MAAO,CAEHQ,KAAM,WAhHc,MAGAR,EAAQI,cAAc,wCAC9BK,iBAAiB,SAASC,IAClCA,EAAEC,iBAEFC,KAAKC,KAAK,CACNC,KAAM,yCACNC,KAAM,UACNC,kBAAkB,EAClBC,gBAAgB,EAChBC,kBAAmB,kBACnBC,iBAAkB,aAClBC,YAAa,CACTC,cAAe,kBACfC,aAAc,0BAEnBC,MAAK,SAAUC,GACVA,EAAOC,OACPtB,EAAKuB,QACLrB,EAAMsB,QACoB,WAAnBH,EAAOI,SACdhB,KAAKC,KAAK,CACNC,KAAM,qCACNC,KAAM,QACNE,gBAAgB,EAChBC,kBAAmB,cACnBE,YAAa,CACTC,cAAe,oBAI/B,GAAE,IAIerB,EAAQI,cAAc,yCAC9BK,iBAAiB,SAASC,IACnCA,EAAEC,iBAEFC,KAAKC,KAAK,CACNC,KAAM,yCACNC,KAAM,UACNC,kBAAkB,EAClBC,gBAAgB,EAChBC,kBAAmB,kBACnBC,iBAAkB,aAClBC,YAAa,CACTC,cAAe,kBACfC,aAAc,0BAEnBC,MAAK,SAAUC,GACVA,EAAOC,OACPtB,EAAKuB,QACLrB,EAAMsB,QACoB,WAAnBH,EAAOI,SACdhB,KAAKC,KAAK,CACNC,KAAM,qCACNC,KAAM,QACNE,gBAAgB,EAChBC,kBAAmB,cACnBE,YAAa,CACTC,cAAe,oBAI/B,GAAE,IAIN,MAAMQ,EAAe7B,EAAQI,cAAc,yCAC3CyB,EAAapB,iBAAiB,SAAS,SAAUC,GAE7CA,EAAEC,iBAGFkB,EAAaC,aAAa,oBAAqB,MAG/CD,EAAaE,UAAW,EAGxBC,YAAW,WAEPH,EAAaI,gBAAgB,qBAG7BJ,EAAaE,UAAW,EAGxBnB,KAAKC,KAAK,CACNC,KAAM,wCACNC,KAAM,UACNE,gBAAgB,EAChBC,kBAAmB,cACnBE,YAAa,CACTC,cAAe,qBAEpBE,MAAK,SAAUC,GACVA,EAAOU,aACP7B,EAAMsB,MAEd,GAGJ,GAAG,IACP,GAAE,EAMEQ,EACJ,EAER,CA3H2B,GA8H3BC,OAAOC,oBAAmB,WACtBtC,qBAAqBS,MACzB","sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTUsersUpdateDetails = function () {\n    // Shared variables\n    const element = document.getElementById('kt_modal_update_details');\n    const form = element.querySelector('#kt_modal_update_user_form');\n    const modal = new bootstrap.Modal(element);\n\n    // Init add schedule modal\n    var initUpdateDetails = () => {\n\n        // Close button handler\n        const closeButton = element.querySelector('[data-kt-users-modal-action=\"close\"]');\n        closeButton.addEventListener('click', e => {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Are you sure you would like to cancel?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: \"Yes, cancel it!\",\n                cancelButtonText: \"No, return\",\n                customClass: {\n                    confirmButton: \"btn btn-primary\",\n                    cancelButton: \"btn btn-active-light\"\n                }\n            }).then(function (result) {\n                if (result.value) {\n                    form.reset(); // Reset form\t\n                    modal.hide(); // Hide modal\t\t\t\t\n                } else if (result.dismiss === 'cancel') {\n                    Swal.fire({\n                        text: \"Your form has not been cancelled!.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn btn-primary\",\n                        }\n                    });\n                }\n            });\n        });\n\n        // Cancel button handler\n        const cancelButton = element.querySelector('[data-kt-users-modal-action=\"cancel\"]');\n        cancelButton.addEventListener('click', e => {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Are you sure you would like to cancel?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: \"Yes, cancel it!\",\n                cancelButtonText: \"No, return\",\n                customClass: {\n                    confirmButton: \"btn btn-primary\",\n                    cancelButton: \"btn btn-active-light\"\n                }\n            }).then(function (result) {\n                if (result.value) {\n                    form.reset(); // Reset form\t\n                    modal.hide(); // Hide modal\t\t\t\t\n                } else if (result.dismiss === 'cancel') {\n                    Swal.fire({\n                        text: \"Your form has not been cancelled!.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn btn-primary\",\n                        }\n                    });\n                }\n            });\n        });\n\n        // Submit button handler\n        const submitButton = element.querySelector('[data-kt-users-modal-action=\"submit\"]');\n        submitButton.addEventListener('click', function (e) {\n            // Prevent default button action\n            e.preventDefault();\n\n            // Show loading indication\n            submitButton.setAttribute('data-kt-indicator', 'on');\n\n            // Disable button to avoid multiple click \n            submitButton.disabled = true;\n\n            // Simulate form submission. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n            setTimeout(function () {\n                // Remove loading indication\n                submitButton.removeAttribute('data-kt-indicator');\n\n                // Enable button\n                submitButton.disabled = false;\n\n                // Show popup confirmation \n                Swal.fire({\n                    text: \"Form has been successfully submitted!\",\n                    icon: \"success\",\n                    buttonsStyling: false,\n                    confirmButtonText: \"Ok, got it!\",\n                    customClass: {\n                        confirmButton: \"btn btn-primary\"\n                    }\n                }).then(function (result) {\n                    if (result.isConfirmed) {\n                        modal.hide();\n                    }\n                });\n\n                //form.submit(); // Submit form\n            }, 2000);\n        });\n    }\n\n    return {\n        // Public functions\n        init: function () {\n            initUpdateDetails();\n        }\n    };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTUsersUpdateDetails.init();\n});"]}