{"version":3,"file":"export.js","names":["KTCustomersExport","element","submitButton","cancelButton","closeButton","validator","form","modal","init","document","querySelector","bootstrap","Modal","FormValidation","formValidation","fields","date","validators","notEmpty","message","plugins","trigger","Trigger","Bootstrap5","rowSelector","eleInvalidClass","eleValidClass","addEventListener","e","preventDefault","validate","then","status","console","log","setAttribute","disabled","setTimeout","removeAttribute","Swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","result","isConfirmed","hide","showCancelButton","cancelButtonText","value","reset","dismiss","datepicker","$","flatpickr","altInput","altFormat","dateFormat","mode","initForm","KTUtil","onDOMContentLoaded"],"sources":["apps/customers/list/export.js"],"mappings":"AAAA,aAGA,IAAIA,kBAAoB,WACpB,IAAIC,EACAC,EACAC,EACHC,EACGC,EACAC,EACAC,EA6JJ,MAAO,CAEHC,KAAM,WAEFP,EAAUQ,SAASC,cAAc,8BACjCH,EAAQ,IAAII,UAAUC,MAAMX,GAE5BK,EAAOG,SAASC,cAAc,6BAC9BR,EAAeI,EAAKI,cAAc,+BAClCP,EAAeG,EAAKI,cAAc,+BAC3CN,EAAcH,EAAQS,cAAc,8BAlKrCL,EAAYQ,eAAeC,eAC1BR,EACA,CACCS,OAAQ,CACQC,KAAQ,CACtBC,WAAY,CACXC,SAAU,CACTC,QAAS,6BAKbC,QAAS,CACRC,QAAS,IAAIR,eAAeO,QAAQE,QACpCX,UAAW,IAAIE,eAAeO,QAAQG,WAAW,CAChDC,YAAa,UACKC,gBAAiB,GACjBC,cAAe,QAOrCxB,EAAayB,iBAAiB,SAAS,SAAUC,GAChDA,EAAEC,iBAGExB,GACHA,EAAUyB,WAAWC,MAAK,SAAUC,GACnCC,QAAQC,IAAI,cAEE,SAAVF,GACH9B,EAAaiC,aAAa,oBAAqB,MAG7BjC,EAAakC,UAAW,EAE1CC,YAAW,WACVnC,EAAaoC,gBAAgB,qBAE7BC,KAAKC,KAAK,CACTC,KAAM,gDACNC,KAAM,UACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACZC,cAAe,qBAEdf,MAAK,SAAUgB,GACbA,EAAOC,cACVzC,EAAM0C,OAGqB/C,EAAakC,UAAW,EAErD,GAGD,GAAG,MAEHG,KAAKC,KAAK,CACTC,KAAM,sEACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACZC,cAAe,oBAInB,GAEF,IAEM3C,EAAawB,iBAAiB,SAAS,SAAUC,GAC7CA,EAAEC,iBAEFU,KAAKC,KAAK,CACNC,KAAM,yCACNC,KAAM,UACNQ,kBAAkB,EAClBP,gBAAgB,EAChBC,kBAAmB,kBACnBO,iBAAkB,aAClBN,YAAa,CACTC,cAAe,kBACf3C,aAAc,0BAEnB4B,MAAK,SAAUgB,GACVA,EAAOK,OACP9C,EAAK+C,QACL9C,EAAM0C,QACoB,WAAnBF,EAAOO,SACdf,KAAKC,KAAK,CACNC,KAAM,qCACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,oBAI/B,GACJ,IAEN1C,EAAYuB,iBAAiB,SAAS,SAASC,GAC9CA,EAAEC,iBAEOU,KAAKC,KAAK,CACNC,KAAM,yCACNC,KAAM,UACNQ,kBAAkB,EAClBP,gBAAgB,EAChBC,kBAAmB,kBACnBO,iBAAkB,aAClBN,YAAa,CACTC,cAAe,kBACf3C,aAAc,0BAEnB4B,MAAK,SAAUgB,GACVA,EAAOK,OACP9C,EAAK+C,QACL9C,EAAM0C,QACoB,WAAnBF,EAAOO,SACdf,KAAKC,KAAK,CACNC,KAAM,qCACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,oBAI/B,GACV,IAGiB,WACX,MAAMS,EAAajD,EAAKI,cAAc,eAGtC8C,EAAED,GAAYE,UAAU,CACpBC,UAAU,EACVC,UAAW,SACXC,WAAY,QACZC,KAAM,SAEd,CAeQC,EACJ,EAER,CApLwB,GAuLxBC,OAAOC,oBAAmB,WACtBhE,kBAAkBQ,MACtB","sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTCustomersExport = function () {\n    var element;\n    var submitButton;\n    var cancelButton;\n\tvar closeButton;\n    var validator;\n    var form;\n    var modal;\n\n    // Init form inputs\n    var handleForm = function () {\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n\t\tvalidator = FormValidation.formValidation(\n\t\t\tform,\n\t\t\t{\n\t\t\t\tfields: {\n                    'date': {\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'Date range is required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplugins: {\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap5({\n\t\t\t\t\t\trowSelector: '.fv-row',\n                        eleInvalidClass: '',\n                        eleValidClass: ''\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t// Action buttons\n\t\tsubmitButton.addEventListener('click', function (e) {\n\t\t\te.preventDefault();      \n\n\t\t\t// Validate form before submit\n\t\t\tif (validator) {\n\t\t\t\tvalidator.validate().then(function (status) {\n\t\t\t\t\tconsole.log('validated!');\n\n\t\t\t\t\tif (status == 'Valid') {\n\t\t\t\t\t\tsubmitButton.setAttribute('data-kt-indicator', 'on');\n\n                        // Disable submit button whilst loading\n                        submitButton.disabled = true;\n\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tsubmitButton.removeAttribute('data-kt-indicator');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\t\t\ttext: \"Customer list has been successfully exported!\",\n\t\t\t\t\t\t\t\ticon: \"success\",\n\t\t\t\t\t\t\t\tbuttonsStyling: false,\n\t\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\n\t\t\t\t\t\t\t\tcustomClass: {\n\t\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}).then(function (result) {\n\t\t\t\t\t\t\t\tif (result.isConfirmed) {\n\t\t\t\t\t\t\t\t\tmodal.hide();\n\n                                    // Enable submit button after loading\n                                    submitButton.disabled = false;        \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t//form.submit(); // Submit form\n\t\t\t\t\t\t}, 2000);   \t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\t\ttext: \"Sorry, looks like there are some errors detected, please try again.\",\n\t\t\t\t\t\t\ticon: \"error\",\n\t\t\t\t\t\t\tbuttonsStyling: false,\n\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\n\t\t\t\t\t\t\tcustomClass: {\n\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n        cancelButton.addEventListener('click', function (e) {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Are you sure you would like to cancel?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: \"Yes, cancel it!\",\n                cancelButtonText: \"No, return\",\n                customClass: {\n                    confirmButton: \"btn btn-primary\",\n                    cancelButton: \"btn btn-active-light\"\n                }\n            }).then(function (result) {\n                if (result.value) {\n                    form.reset(); // Reset form\t\n                    modal.hide(); // Hide modal\t\t\n                } else if (result.dismiss === 'cancel') {\n                    Swal.fire({\n                        text: \"Your form has not been cancelled!.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn btn-primary\",\n                        }\n                    });\n                }\n            });\n        });\n\n\t\tcloseButton.addEventListener('click', function(e){\n\t\t\te.preventDefault();\n\n            Swal.fire({\n                text: \"Are you sure you would like to cancel?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: \"Yes, cancel it!\",\n                cancelButtonText: \"No, return\",\n                customClass: {\n                    confirmButton: \"btn btn-primary\",\n                    cancelButton: \"btn btn-active-light\"\n                }\n            }).then(function (result) {\n                if (result.value) {\n                    form.reset(); // Reset form\t\n                    modal.hide(); // Hide modal\t\t\t\n                } else if (result.dismiss === 'cancel') {\n                    Swal.fire({\n                        text: \"Your form has not been cancelled!.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn btn-primary\",\n                        }\n                    });\n                }\n            });\n\t\t});\n    }\n\n    var initForm = function () {\n        const datepicker = form.querySelector(\"[name=date]\");\n        \n        // Handle datepicker range -- For more info on flatpickr plugin, please visit: https://flatpickr.js.org/\n        $(datepicker).flatpickr({\n            altInput: true,\n            altFormat: \"F j, Y\",\n            dateFormat: \"Y-m-d\",\n            mode: \"range\"\n        });\n    }\n\n    return {\n        // Public functions\n        init: function () {\n            // Elements\n            element = document.querySelector('#kt_customers_export_modal');\n            modal = new bootstrap.Modal(element);\n\n            form = document.querySelector('#kt_customers_export_form');\n            submitButton = form.querySelector('#kt_customers_export_submit');\n            cancelButton = form.querySelector('#kt_customers_export_cancel');\n\t\t\tcloseButton = element.querySelector('#kt_customers_export_close');\n\n            handleForm();\n            initForm();\n        }\n    };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTCustomersExport.init();\n});"]}