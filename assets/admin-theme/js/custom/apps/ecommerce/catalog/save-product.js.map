{"version":3,"file":"save-product.js","names":["KTAppEcommerceSaveProduct","initFormRepeater","$","repeater","initEmpty","defaultValues","show","this","slideDown","initConditionsSelect2","hide","deleteElement","slideUp","document","querySelectorAll","forEach","type","hasClass","select2","minimumResultsForSearch","init","slider","value","element","quill","querySelector","Quill","modules","toolbar","header","placeholder","theme","tagify","Tagify","whitelist","dropdown","maxItems","classname","enabled","closeOnSelect","noUiSlider","create","start","connect","range","min","max","on","values","handle","innerHTML","Math","round","Dropzone","url","paramName","maxFiles","maxFilesize","addRemoveLinks","accept","file","done","name","target","getElementById","select","statusClasses","e","classList","remove","add","hideDatepicker","showDatepicker","datepicker","flatpickr","enableTime","dateFormat","parentNode","handleStatus","allConditions","conditionMatch","radio","addEventListener","handleConditions","discountOptions","percentageEl","fixedEl","option","handleDiscount","shippingOption","shippingForm","checked","handleShipping","validator","form","submitButton","FormValidation","formValidation","fields","product_name","validators","notEmpty","message","sku","shelf","price","tax","plugins","trigger","Trigger","bootstrap","Bootstrap5","rowSelector","eleInvalidClass","eleValidClass","preventDefault","validate","then","status","console","log","setAttribute","disabled","setTimeout","removeAttribute","Swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","result","isConfirmed","window","location","getAttribute","html","handleSubmit","KTUtil","onDOMContentLoaded"],"sources":["apps/ecommerce/catalog/save-product.js"],"mappings":"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","sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTAppEcommerceSaveProduct = function () {\n\n    // Private functions\n\n    // Init quill editor\n    const initQuill = () => {\n        // Define all elements for quill editor\n        const elements = [\n            '#kt_ecommerce_add_product_description',\n            '#kt_ecommerce_add_product_meta_description'\n        ];\n\n        // Loop all elements\n        elements.forEach(element => {\n            // Get quill element\n            let quill = document.querySelector(element);\n\n            // Break if element not found\n            if (!quill) {\n                return;\n            }\n\n            // Init quill --- more info: https://quilljs.com/docs/quickstart/\n            quill = new Quill(element, {\n                modules: {\n                    toolbar: [\n                        [{\n                            header: [1, 2, false]\n                        }],\n                        ['bold', 'italic', 'underline'],\n                        ['image', 'code-block']\n                    ]\n                },\n                placeholder: 'Type your text here...',\n                theme: 'snow' // or 'bubble'\n            });\n        });\n    }\n\n    // Init tagify\n    const initTagify = () => {\n        // Define all elements for tagify\n        const elements = [\n            '#kt_ecommerce_add_product_category',\n            '#kt_ecommerce_add_product_tags'\n        ];\n\n        // Loop all elements\n        elements.forEach(element => {\n            // Get tagify element\n            const tagify = document.querySelector(element);\n\n            // Break if element not found\n            if (!tagify) {\n                return;\n            }\n\n            // Init tagify --- more info: https://yaireo.github.io/tagify/\n            new Tagify(tagify, {\n                whitelist: [\"new\", \"trending\", \"sale\", \"discounted\", \"selling fast\", \"last 10\"],\n                dropdown: {\n                    maxItems: 20,           // <- mixumum allowed rendered suggestions\n                    classname: \"tagify__inline__suggestions\", // <- custom classname for this dropdown, so it could be targeted\n                    enabled: 0,             // <- show suggestions on focus\n                    closeOnSelect: false    // <- do not hide the suggestions dropdown once an item has been selected\n                }\n            });\n        });\n    }\n\n    // Init form repeater --- more info: https://github.com/DubFriend/jquery.repeater\n    const initFormRepeater = () => {\n        $('#kt_ecommerce_add_product_options').repeater({\n            initEmpty: false,\n\n            defaultValues: {\n                'text-input': 'foo'\n            },\n\n            show: function () {\n                $(this).slideDown();\n\n                // Init select2 on new repeated items\n                initConditionsSelect2();\n            },\n\n            hide: function (deleteElement) {\n                $(this).slideUp(deleteElement);\n            }\n        });\n    }\n\n    // Init condition select2\n    const initConditionsSelect2 = () => {\n        // Tnit new repeating condition types\n        const allConditionTypes = document.querySelectorAll('[data-kt-ecommerce-catalog-add-product=\"product_option\"]');\n        allConditionTypes.forEach(type => {\n            if ($(type).hasClass(\"select2-hidden-accessible\")) {\n                return;\n            } else {\n                $(type).select2({\n                    minimumResultsForSearch: -1\n                });\n            }\n        });\n    }\n\n\n    // Init noUIslider\n    const initSlider = () => {\n        var slider = document.querySelector(\"#kt_ecommerce_add_product_discount_slider\");\n        var value = document.querySelector(\"#kt_ecommerce_add_product_discount_label\");\n\n        noUiSlider.create(slider, {\n            start: [10],\n            connect: true,\n            range: {\n                \"min\": 1,\n                \"max\": 100\n            }\n        });\n\n        slider.noUiSlider.on(\"update\", function (values, handle) {\n            value.innerHTML = Math.round(values[handle]);\n            if (handle) {\n                value.innerHTML = Math.round(values[handle]);\n            }\n        });\n    }\n\n    // Init DropzoneJS --- more info:\n    const initDropzone = () => {\n        var myDropzone = new Dropzone(\"#kt_ecommerce_add_product_media\", {\n            url: \"https://keenthemes.com/scripts/void.php\", // Set the url for your upload script location\n            paramName: \"file\", // The name that will be used to transfer the file\n            maxFiles: 10,\n            maxFilesize: 10, // MB\n            addRemoveLinks: true,\n            accept: function (file, done) {\n                if (file.name == \"wow.jpg\") {\n                    done(\"Naha, you don't.\");\n                } else {\n                    done();\n                }\n            }\n        });\n    }\n\n    // Handle discount options\n    const handleDiscount = () => {\n        const discountOptions = document.querySelectorAll('input[name=\"discount_option\"]');\n        const percentageEl = document.getElementById('kt_ecommerce_add_product_discount_percentage');\n        const fixedEl = document.getElementById('kt_ecommerce_add_product_discount_fixed');\n\n        discountOptions.forEach(option => {\n            option.addEventListener('change', e => {\n                const value = e.target.value;\n\n                switch (value) {\n                    case '2': {\n                        percentageEl.classList.remove('d-none');\n                        fixedEl.classList.add('d-none');\n                        break;\n                    }\n                    case '3': {\n                        percentageEl.classList.add('d-none');\n                        fixedEl.classList.remove('d-none');\n                        break;\n                    }\n                    default: {\n                        percentageEl.classList.add('d-none');\n                        fixedEl.classList.add('d-none');\n                        break;\n                    }\n                }\n            });\n        });\n    }\n\n    // Shipping option handler\n    const handleShipping = () => {\n        const shippingOption = document.getElementById('kt_ecommerce_add_product_shipping_checkbox');\n        const shippingForm = document.getElementById('kt_ecommerce_add_product_shipping');\n\n        shippingOption.addEventListener('change', e => {\n            const value = e.target.checked;\n\n            if (value) {\n                shippingForm.classList.remove('d-none');\n            } else {\n                shippingForm.classList.add('d-none');\n            }\n        });\n    }\n\n    // Category status handler\n    const handleStatus = () => {\n        const target = document.getElementById('kt_ecommerce_add_product_status');\n        const select = document.getElementById('kt_ecommerce_add_product_status_select');\n        const statusClasses = ['bg-success', 'bg-warning', 'bg-danger'];\n\n        $(select).on('change', function (e) {\n            const value = e.target.value;\n\n            switch (value) {\n                case \"published\": {\n                    target.classList.remove(...statusClasses);\n                    target.classList.add('bg-success');\n                    hideDatepicker();\n                    break;\n                }\n                case \"scheduled\": {\n                    target.classList.remove(...statusClasses);\n                    target.classList.add('bg-warning');\n                    showDatepicker();\n                    break;\n                }\n                case \"inactive\": {\n                    target.classList.remove(...statusClasses);\n                    target.classList.add('bg-danger');\n                    hideDatepicker();\n                    break;\n                }\n                case \"draft\": {\n                    target.classList.remove(...statusClasses);\n                    target.classList.add('bg-primary');\n                    hideDatepicker();\n                    break;\n                }\n                default:\n                    break;\n            }\n        });\n\n\n        // Handle datepicker\n        const datepicker = document.getElementById('kt_ecommerce_add_product_status_datepicker');\n\n        // Init flatpickr --- more info: https://flatpickr.js.org/\n        $('#kt_ecommerce_add_product_status_datepicker').flatpickr({\n            enableTime: true,\n            dateFormat: \"Y-m-d H:i\",\n        });\n\n        const showDatepicker = () => {\n            datepicker.parentNode.classList.remove('d-none');\n        }\n\n        const hideDatepicker = () => {\n            datepicker.parentNode.classList.add('d-none');\n        }\n    }\n\n    // Condition type handler\n    const handleConditions = () => {\n        const allConditions = document.querySelectorAll('[name=\"method\"][type=\"radio\"]');\n        const conditionMatch = document.querySelector('[data-kt-ecommerce-catalog-add-category=\"auto-options\"]');\n        allConditions.forEach(radio => {\n            radio.addEventListener('change', e => {\n                if (e.target.value === '1') {\n                    conditionMatch.classList.remove('d-none');\n                } else {\n                    conditionMatch.classList.add('d-none');\n                }\n            });\n        })\n    }\n\n    // Submit form handler\n    const handleSubmit = () => {\n        // Define variables\n        let validator;\n\n        // Get elements\n        const form = document.getElementById('kt_ecommerce_add_product_form');\n        const submitButton = document.getElementById('kt_ecommerce_add_product_submit');\n\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n        validator = FormValidation.formValidation(\n            form,\n            {\n                fields: {\n                    'product_name': {\n                        validators: {\n                            notEmpty: {\n                                message: 'Product name is required'\n                            }\n                        }\n                    },\n                    'sku': {\n                        validators: {\n                            notEmpty: {\n                                message: 'SKU is required'\n                            }\n                        }\n                    },\n                    'sku': {\n                        validators: {\n                            notEmpty: {\n                                message: 'Product barcode is required'\n                            }\n                        }\n                    },\n                    'shelf': {\n                        validators: {\n                            notEmpty: {\n                                message: 'Shelf quantity is required'\n                            }\n                        }\n                    },\n                    'price': {\n                        validators: {\n                            notEmpty: {\n                                message: 'Product base price is required'\n                            }\n                        }\n                    },\n                    'tax': {\n                        validators: {\n                            notEmpty: {\n                                message: 'Product tax class is required'\n                            }\n                        }\n                    }\n                },\n                plugins: {\n                    trigger: new FormValidation.plugins.Trigger(),\n                    bootstrap: new FormValidation.plugins.Bootstrap5({\n                        rowSelector: '.fv-row',\n                        eleInvalidClass: '',\n                        eleValidClass: ''\n                    })\n                }\n            }\n        );\n\n        // Handle submit button\n        submitButton.addEventListener('click', e => {\n            e.preventDefault();\n\n            // Validate form before submit\n            if (validator) {\n                validator.validate().then(function (status) {\n                    console.log('validated!');\n\n                    if (status == 'Valid') {\n                        submitButton.setAttribute('data-kt-indicator', 'on');\n\n                        // Disable submit button whilst loading\n                        submitButton.disabled = true;\n\n                        setTimeout(function () {\n                            submitButton.removeAttribute('data-kt-indicator');\n\n                            Swal.fire({\n                                text: \"Form has been successfully submitted!\",\n                                icon: \"success\",\n                                buttonsStyling: false,\n                                confirmButtonText: \"Ok, got it!\",\n                                customClass: {\n                                    confirmButton: \"btn btn-primary\"\n                                }\n                            }).then(function (result) {\n                                if (result.isConfirmed) {\n                                    // Enable submit button after loading\n                                    submitButton.disabled = false;\n\n                                    // Redirect to customers list page\n                                    window.location = form.getAttribute(\"data-kt-redirect\");\n                                }\n                            });\n                        }, 2000);\n                    } else {\n                        Swal.fire({\n                            html: \"Sorry, looks like there are some errors detected, please try again. <br/><br/>Please note that there may be errors in the <strong>General</strong> or <strong>Advanced</strong> tabs\",\n                            icon: \"error\",\n                            buttonsStyling: false,\n                            confirmButtonText: \"Ok, got it!\",\n                            customClass: {\n                                confirmButton: \"btn btn-primary\"\n                            }\n                        });\n                    }\n                });\n            }\n        })\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            // Init forms\n            initQuill();\n            initTagify();\n            initSlider();\n            initFormRepeater();\n            initDropzone();\n            initConditionsSelect2();\n\n            // Handle forms\n            handleStatus();\n            handleConditions();\n            handleDiscount();\n            handleShipping();\n            handleSubmit();\n        }\n    };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTAppEcommerceSaveProduct.init();\n});\n"]}