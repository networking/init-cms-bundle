{"version":3,"file":"calendar.js","names":["KTAppCalendar","calendar","eventName","eventDescription","eventLocation","startDatepicker","startFlatpickr","endDatepicker","endFlatpickr","startTimepicker","startTimeFlatpickr","endTimepicker","endTimeFlatpickr","modal","modalTitle","form","validator","addButton","submitButton","cancelButton","closeButton","viewEventName","viewAllDay","viewEventDescription","viewEventLocation","viewStartDate","viewEndDate","viewModal","viewEditButton","viewDeleteButton","data","id","startDate","endDate","allDay","handleNewEvent","innerText","show","datepickerWrappers","querySelectorAll","allDayToggle","querySelector","addEventListener","e","target","checked","forEach","dw","classList","add","setDate","remove","populateForm","preventDefault","validate","then","status","console","log","setAttribute","disabled","setTimeout","removeAttribute","Swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","result","isConfirmed","hide","allDayEvent","selectedDates","length","startDateTime","moment","format","endDateTime","addEvent","uid","title","value","description","location","start","end","render","reset","handleViewEvent","eventNameMod","startDateMod","endDateMod","handleEditButton","getEventById","handleEditEvent","formatArgs","res","startStr","endStr","Date","now","toString","Math","floor","random","init","element","document","getElementById","bootstrap","Modal","viewElement","calendarEl","todayDate","YM","YESTERDAY","TODAY","TOMORROW","startOf","clone","subtract","FullCalendar","Calendar","headerToolbar","left","center","right","initialDate","navLinks","selectable","selectMirror","select","arg","eventClick","event","extendedProps","editable","dayMaxEvents","events","className","datesSet","FormValidation","formValidation","fields","calendar_event_name","validators","notEmpty","message","calendar_event_start_date","calendar_event_end_date","plugins","trigger","Trigger","Bootstrap5","rowSelector","eleInvalidClass","eleValidClass","flatpickr","enableTime","dateFormat","noCalendar","showCancelButton","cancelButtonText","dismiss","resetForm","resetFormValidator","KTUtil","onDOMContentLoaded"],"sources":["apps/calendar/calendar.js"],"mappings":"AAAA,aAGA,IAAIA,cAAgB,WAGhB,IAAIC,EAYAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAxCAC,EAAO,CACPC,GAAI,GACJ7B,UAAW,GACXC,iBAAkB,GAClBC,cAAe,GACf4B,UAAW,GACXC,QAAS,GACTC,QAAQ,GAoOZ,MAmFMC,EAAiB,KAEnBrB,EAAWsB,UAAY,kBAEvBvB,EAAMwB,OAGN,MAAMC,EAAqBvB,EAAKwB,iBAAiB,mCAG3CC,EAAezB,EAAK0B,cAAc,kCACxCD,EAAaE,iBAAiB,SAASC,IAC/BA,EAAEC,OAAOC,QACTP,EAAmBQ,SAAQC,IACvBA,EAAGC,UAAUC,IAAI,SAAS,KAG9BzC,EAAa0C,QAAQpB,EAAKE,WAAW,EAAM,SAC3CM,EAAmBQ,SAAQC,IACvBA,EAAGC,UAAUG,OAAO,SAAS,IAErC,IAGJC,EAAatB,GAGbZ,EAAawB,iBAAiB,SAAS,SAAUC,GAE7CA,EAAEU,iBAGErC,GACAA,EAAUsC,WAAWC,MAAK,SAAUC,GAChCC,QAAQC,IAAI,cAEE,SAAVF,GAEAtC,EAAayC,aAAa,oBAAqB,MAG/CzC,EAAa0C,UAAW,EAGxBC,YAAW,WAEP3C,EAAa4C,gBAAgB,qBAG7BC,KAAKC,KAAK,CACNC,KAAM,+BACNC,KAAM,UACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,qBAEpBf,MAAK,SAAUgB,GACd,GAAIA,EAAOC,YAAa,CACpB3D,EAAM4D,OAGNvD,EAAa0C,UAAW,EAGxB,IAAIc,GAAc,EACdlC,EAAaK,UAAW6B,GAAc,GACM,IAA5ChE,EAAmBiE,cAAcC,SAAgBF,GAAc,GAGnE,IAAIG,EAAgBC,OAAOxE,EAAeqE,cAAc,IAAII,SACxDC,EAAcF,OAAOtE,EAAamE,cAAcnE,EAAamE,cAAcC,OAAS,IAAIG,SAC5F,IAAKL,EAAa,CACd,MAAM1C,EAAY8C,OAAOxE,EAAeqE,cAAc,IAAII,OAAO,cAC3D9C,EAAUD,EAIhB6C,EAAgB7C,EAAY,IAHV8C,OAAOpE,EAAmBiE,cAAc,IAAII,OAAO,YAIrEC,EAAc/C,EAAU,IAHR6C,OAAOlE,EAAiB+D,cAAc,IAAII,OAAO,WAIrE,CAGA9E,EAASgF,SAAS,CACdlD,GAAImD,IACJC,MAAOjF,EAAUkF,MACjBC,YAAalF,EAAiBiF,MAC9BE,SAAUlF,EAAcgF,MACxBG,MAAOV,EACPW,IAAKR,EACL9C,OAAQwC,IAEZzE,EAASwF,SAGT1E,EAAK2E,OACT,CACJ,GAGJ,GAAG,MAGH3B,KAAKC,KAAK,CACNC,KAAM,sEACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,oBAI/B,GAER,GAAE,EA8HAqB,EAAkB,KAIpB,IAAIC,EACAC,EACAC,EALJnE,EAAUU,OAQNP,EAAKI,QACL0D,EAAe,UACfC,EAAef,OAAOhD,EAAKE,WAAW+C,OAAO,gBAC7Ce,EAAahB,OAAOhD,EAAKG,SAAS8C,OAAO,kBAEzCa,EAAe,GACfC,EAAef,OAAOhD,EAAKE,WAAW+C,OAAO,yBAC7Ce,EAAahB,OAAOhD,EAAKG,SAAS8C,OAAO,0BAI7C1D,EAAce,UAAYN,EAAK5B,UAC/BoB,EAAWc,UAAYwD,EACvBrE,EAAqBa,UAAYN,EAAK3B,iBAAmB2B,EAAK3B,iBAAmB,KACjFqB,EAAkBY,UAAYN,EAAK1B,cAAgB0B,EAAK1B,cAAgB,KACxEqB,EAAcW,UAAYyD,EAC1BnE,EAAYU,UAAY0D,CAAU,EAwChCC,EAAmB,KACrBnE,EAAec,iBAAiB,SAASC,IACrCA,EAAEU,iBAEF1B,EAAU8C,OA/LM,MAEpB3D,EAAWsB,UAAY,gBAEvBvB,EAAMwB,OAGN,MAAMC,EAAqBvB,EAAKwB,iBAAiB,mCAG3CC,EAAezB,EAAK0B,cAAc,kCACxCD,EAAaE,iBAAiB,SAASC,IAC/BA,EAAEC,OAAOC,QACTP,EAAmBQ,SAAQC,IACvBA,EAAGC,UAAUC,IAAI,SAAS,KAG9BzC,EAAa0C,QAAQpB,EAAKE,WAAW,EAAM,SAC3CM,EAAmBQ,SAAQC,IACvBA,EAAGC,UAAUG,OAAO,SAAS,IAErC,IAGJC,EAAatB,GAGbZ,EAAawB,iBAAiB,SAAS,SAAUC,GAE7CA,EAAEU,iBAGErC,GACAA,EAAUsC,WAAWC,MAAK,SAAUC,GAChCC,QAAQC,IAAI,cAEE,SAAVF,GAEAtC,EAAayC,aAAa,oBAAqB,MAG/CzC,EAAa0C,UAAW,EAGxBC,YAAW,WAEP3C,EAAa4C,gBAAgB,qBAG7BC,KAAKC,KAAK,CACNC,KAAM,+BACNC,KAAM,UACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,qBAEpBf,MAAK,SAAUgB,GACd,GAAIA,EAAOC,YAAa,CACpB3D,EAAM4D,OAGNvD,EAAa0C,UAAW,EAGxB3D,EAAS+F,aAAalE,EAAKC,IAAIoB,SAG/B,IAAIuB,GAAc,EACdlC,EAAaK,UAAW6B,GAAc,GACM,IAA5ChE,EAAmBiE,cAAcC,SAAgBF,GAAc,GAGnE,IAAIG,EAAgBC,OAAOxE,EAAeqE,cAAc,IAAII,SACxDC,EAAcF,OAAOtE,EAAamE,cAAcnE,EAAamE,cAAcC,OAAS,IAAIG,SAC5F,IAAKL,EAAa,CACd,MAAM1C,EAAY8C,OAAOxE,EAAeqE,cAAc,IAAII,OAAO,cAC3D9C,EAAUD,EAIhB6C,EAAgB7C,EAAY,IAHV8C,OAAOpE,EAAmBiE,cAAc,IAAII,OAAO,YAIrEC,EAAc/C,EAAU,IAHR6C,OAAOlE,EAAiB+D,cAAc,IAAII,OAAO,WAIrE,CAGA9E,EAASgF,SAAS,CACdlD,GAAImD,IACJC,MAAOjF,EAAUkF,MACjBC,YAAalF,EAAiBiF,MAC9BE,SAAUlF,EAAcgF,MACxBG,MAAOV,EACPW,IAAKR,EACL9C,OAAQwC,IAEZzE,EAASwF,SAGT1E,EAAK2E,OACT,CACJ,GAGJ,GAAG,MAGH3B,KAAKC,KAAK,CACNC,KAAM,sEACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,oBAI/B,GAER,GAAE,EA0EE2B,EAAiB,GACnB,EAoGA7C,EAAe,KACjBlD,EAAUkF,MAAQtD,EAAK5B,UAAY4B,EAAK5B,UAAY,GACpDC,EAAiBiF,MAAQtD,EAAK3B,iBAAmB2B,EAAK3B,iBAAmB,GACzEC,EAAcgF,MAAQtD,EAAK1B,cAAgB0B,EAAK1B,cAAgB,GAChEE,EAAe4C,QAAQpB,EAAKE,WAAW,EAAM,SAG7C,MAAMC,EAAUH,EAAKG,QAAUH,EAAKG,QAAU6C,OAAOhD,EAAKE,WAAW+C,SACrEvE,EAAa0C,QAAQjB,GAAS,EAAM,SAEpC,MAAMO,EAAezB,EAAK0B,cAAc,kCAClCH,EAAqBvB,EAAKwB,iBAAiB,mCAC7CT,EAAKI,QACLM,EAAaK,SAAU,EACvBP,EAAmBQ,SAAQC,IACvBA,EAAGC,UAAUC,IAAI,SAAS,MAG9BvC,EAAmBwC,QAAQpB,EAAKE,WAAW,EAAM,aACjDpB,EAAiBsC,QAAQpB,EAAKG,SAAS,EAAM,aAC7CzB,EAAa0C,QAAQpB,EAAKE,WAAW,EAAM,SAC3CQ,EAAaK,SAAU,EACvBP,EAAmBQ,SAAQC,IACvBA,EAAGC,UAAUG,OAAO,SAAS,IAErC,EAIE+C,EAAcC,IAChBrE,EAAKC,GAAKoE,EAAIpE,GACdD,EAAK5B,UAAYiG,EAAIhB,MACrBrD,EAAK3B,iBAAmBgG,EAAId,YAC5BvD,EAAK1B,cAAgB+F,EAAIb,SACzBxD,EAAKE,UAAYmE,EAAIC,SACrBtE,EAAKG,QAAUkE,EAAIE,OACnBvE,EAAKI,OAASiE,EAAIjE,MAAM,EAItBgD,EAAM,IACDoB,KAAKC,MAAMC,WAAaC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAiBH,WAGpE,MAAO,CAEHI,KAAM,WAGF,MAAMC,EAAUC,SAASC,eAAe,sBACxChG,EAAO8F,EAAQpE,cAAc,4BAC7BvC,EAAYa,EAAK0B,cAAc,gCAC/BtC,EAAmBY,EAAK0B,cAAc,uCACtCrC,EAAgBW,EAAK0B,cAAc,oCACnCpC,EAAkBU,EAAK0B,cAAc,sCACrClC,EAAgBQ,EAAK0B,cAAc,oCACnChC,EAAkBM,EAAK0B,cAAc,sCACrC9B,EAAgBI,EAAK0B,cAAc,oCACnCxB,EAAY6F,SAASrE,cAAc,4BACnCvB,EAAeH,EAAK0B,cAAc,8BAClCtB,EAAeJ,EAAK0B,cAAc,8BAClCrB,EAAcyF,EAAQpE,cAAc,6BACpC3B,EAAaC,EAAK0B,cAAc,8BAChC5B,EAAQ,IAAImG,UAAUC,MAAMJ,GAG5B,MAAMK,EAAcJ,SAASC,eAAe,uBAhvB9B,IAEdI,EACAC,EACAC,EACAC,EACAC,EACAC,EA0uBA7F,EAAY,IAAIqF,UAAUC,MAAMC,GAChC7F,EAAgB6F,EAAYzE,cAAc,mCAC1CnB,EAAa4F,EAAYzE,cAAc,gCACvClB,EAAuB2F,EAAYzE,cAAc,0CACjDjB,EAAoB0F,EAAYzE,cAAc,uCAC9ChB,EAAgByF,EAAYzE,cAAc,yCAC1Cf,EAAcwF,EAAYzE,cAAc,uCACxCb,EAAiBsF,EAAYzE,cAAc,6BAC3CZ,EAAmBqF,EAAYzE,cAAc,+BAvvB7C0E,EAAaL,SAASC,eAAe,mBACrCK,EAAYtC,SAAS2C,QAAQ,OAC7BJ,EAAKD,EAAUrC,OAAO,WACtBuC,EAAYF,EAAUM,QAAQC,SAAS,EAAG,OAAO5C,OAAO,cACxDwC,EAAQH,EAAUrC,OAAO,cACzByC,EAAWJ,EAAUM,QAAQzE,IAAI,EAAG,OAAO8B,OAAO,eAGtD9E,EAAW,IAAI2H,aAAaC,SAASV,EAAY,CAE7CW,cAAe,CACXC,KAAM,kBACNC,OAAQ,QACRC,MAAO,yCAEXC,YAAaX,EACbY,UAAU,EACVC,YAAY,EACZC,cAAc,EAGdC,OAAQ,SAAUC,GACdrC,EAAWqC,GACXpG,GACJ,EAGAqG,WAAY,SAAUD,GAClBrC,EAAW,CACPnE,GAAIwG,EAAIE,MAAM1G,GACdoD,MAAOoD,EAAIE,MAAMtD,MACjBE,YAAakD,EAAIE,MAAMC,cAAcrD,YACrCC,SAAUiD,EAAIE,MAAMC,cAAcpD,SAClCc,SAAUmC,EAAIE,MAAMrC,SACpBC,OAAQkC,EAAIE,MAAMpC,OAClBnE,OAAQqG,EAAIE,MAAMvG,SAGtByD,GACJ,EAEAgD,UAAU,EACVC,cAAc,EACdC,OAAQ,CACJ,CACI9G,GAAImD,IACJC,MAAO,gBACPI,MAAO8B,EAAK,MACZ7B,IAAK6B,EAAK,MACVhC,YAAa,4CACbyD,UAAW,yCACXxD,SAAU,qBAEd,CACIvD,GAAImD,IACJC,MAAO,YACPI,MAAO8B,EAAK,eACZhC,YAAa,0CACbG,IAAK6B,EAAK,eACVyB,UAAW,mBACXxD,SAAU,qBAEd,CACIvD,GAAImD,IACJC,MAAO,eACPI,MAAO8B,EAAK,MACZhC,YAAa,qCACbG,IAAK6B,EAAK,MACVyB,UAAW,mBACXxD,SAAU,gBAGd,CACIvD,GAAImD,IACJC,MAAO,kCACPI,MAAO8B,EAAK,MACZhC,YAAa,oCACbG,IAAK6B,EAAK,MACVyB,UAAW,wCACXxD,SAAU,6BAEd,CACIvD,GAAImD,IACJC,MAAO,SACPI,MAAO8B,EAAK,MACZhC,YAAa,2CACbG,IAAK6B,EAAK,MACV/B,SAAU,iBAEd,CACIvD,GAAImD,IACJC,MAAO,kBACPI,MAAO8B,EAAK,eACZ7B,IAAK6B,EAAK,eACVhC,YAAa,4CACbyD,UAAW,kBACXxD,SAAU,gBAEd,CACIvD,GAAImD,IACJC,MAAO,kBACPE,YAAa,qCACbE,MAAO8B,EAAK,eACZ7B,IAAK6B,EAAK,eACV/B,SAAU,gBAEd,CACIvD,GAAImD,IACJC,MAAO,aACPI,MAAO+B,EACP9B,IAAKgC,EACLnC,YAAa,2CACbyD,UAAW,mBACXxD,SAAU,qBAEd,CACIvD,GAAImD,IACJC,MAAO,UACPI,MAAOgC,EAAQ,YACf/B,IAAK+B,EAAQ,YACblC,YAAa,wCACbC,SAAU,sBAEd,CACIvD,GAAImD,IACJC,MAAO,QACPI,MAAOgC,EAAQ,YACf/B,IAAK+B,EAAQ,YACbuB,UAAW,gBACXzD,YAAa,wCACbC,SAAU,aAEd,CACIvD,GAAImD,IACJC,MAAO,UACPI,MAAOgC,EAAQ,YACf/B,IAAK+B,EAAQ,YACbuB,UAAW,mBACXzD,YAAa,uCACbC,SAAU,sBAEd,CACIvD,GAAImD,IACJC,MAAO,aACPI,MAAOgC,EAAQ,YACf/B,IAAK+B,EAAQ,YACbuB,UAAW,gBACXzD,YAAa,2CACbC,SAAU,mBAEd,CACIvD,GAAImD,IACJC,MAAO,SACPI,MAAOiC,EAAW,YAClBhC,IAAKgC,EAAW,YAChBsB,UAAW,uCACXzD,YAAa,2CACbC,SAAU,uBAEd,CACIvD,GAAImD,IACJC,MAAO,iBACPI,MAAOiC,EAAW,YAClBhC,IAAKgC,EAAW,YAChBsB,UAAW,mBACXzD,YAAa,oCACbC,SAAU,mBAEd,CACIvD,GAAImD,IACJC,MAAO,aACPI,MAAO8B,EAAK,MACZ7B,IAAK6B,EAAK,MACVyB,UAAW,qCACXzD,YAAa,qCACbC,SAAU,uBAKlByD,SAAU,WAEV,KAGKtD,SAMTzE,EAAYgI,eAAeC,eACvBlI,EACA,CACImI,OAAQ,CACJC,oBAAuB,CACnBC,WAAY,CACRC,SAAU,CACNC,QAAS,4BAIrBC,0BAA6B,CACzBH,WAAY,CACRC,SAAU,CACNC,QAAS,4BAIrBE,wBAA2B,CACvBJ,WAAY,CACRC,SAAU,CACNC,QAAS,2BAMzBG,QAAS,CACLC,QAAS,IAAIV,eAAeS,QAAQE,QACpC3C,UAAW,IAAIgC,eAAeS,QAAQG,WAAW,CAC7CC,YAAa,UACbC,gBAAiB,GACjBC,cAAe,QAS/BzJ,EAAiB0J,UAAU3J,EAAiB,CACxC4J,YAAY,EACZC,WAAY,UAGhB1J,EAAewJ,UAAUzJ,EAAe,CACpC0J,YAAY,EACZC,WAAY,UAGhBxJ,EAAqBsJ,UAAUvJ,EAAiB,CAC5CwJ,YAAY,EACZE,YAAY,EACZD,WAAY,QAGhBtJ,EAAmBoJ,UAAUrJ,EAAe,CACxCsJ,YAAY,EACZE,YAAY,EACZD,WAAY,QAigBZnE,IA3fJ9E,EAAUyB,iBAAiB,SAASC,IAEhCb,EAAO,CACHC,GAAI,GACJ7B,UAAW,GACXC,iBAAkB,GAClB6B,UAAW,IAAIsE,KACfrE,QAAS,IAAIqE,KACbpE,QAAQ,GAEZC,GAAgB,IAoRpBN,EAAiBa,iBAAiB,SAASC,IACvCA,EAAEU,iBAEFU,KAAKC,KAAK,CACNC,KAAM,oDACNC,KAAM,UACNkG,kBAAkB,EAClBjG,gBAAgB,EAChBC,kBAAmB,kBACnBiG,iBAAkB,aAClBhG,YAAa,CACTC,cAAe,kBACfnD,aAAc,0BAEnBoC,MAAK,SAAUgB,GACVA,EAAOa,OACPnF,EAAS+F,aAAalE,EAAKC,IAAIoB,SAE/BxB,EAAU8C,QACgB,WAAnBF,EAAO+F,SACdvG,KAAKC,KAAK,CACNC,KAAM,+BACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,oBAI/B,GAAE,IAiBNnD,EAAauB,iBAAiB,SAAS,SAAUC,GAC7CA,EAAEU,iBAEFU,KAAKC,KAAK,CACNC,KAAM,yCACNC,KAAM,UACNkG,kBAAkB,EAClBjG,gBAAgB,EAChBC,kBAAmB,kBACnBiG,iBAAkB,aAClBhG,YAAa,CACTC,cAAe,kBACfnD,aAAc,0BAEnBoC,MAAK,SAAUgB,GACVA,EAAOa,OACPrE,EAAK2E,QACL7E,EAAM4D,QACoB,WAAnBF,EAAO+F,SACdvG,KAAKC,KAAK,CACNC,KAAM,qCACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,oBAI/B,GACJ,IAMAlD,EAAYsB,iBAAiB,SAAS,SAAUC,GAC5CA,EAAEU,iBAEFU,KAAKC,KAAK,CACNC,KAAM,yCACNC,KAAM,UACNkG,kBAAkB,EAClBjG,gBAAgB,EAChBC,kBAAmB,kBACnBiG,iBAAkB,aAClBhG,YAAa,CACTC,cAAe,kBACfnD,aAAc,0BAEnBoC,MAAK,SAAUgB,GACVA,EAAOa,OACPrE,EAAK2E,QACL7E,EAAM4D,QACoB,WAAnBF,EAAO+F,SACdvG,KAAKC,KAAK,CACNC,KAAM,qCACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,oBAI/B,GACJ,IAiBuB,CAACuC,IAExBA,EAAQnE,iBAAiB,mBAAmBC,IACpC3B,GAEAA,EAAUuJ,WAAU,EACxB,GACF,EAyFEC,CAAmB3D,EACvB,EAER,CAtzBoB,GAyzBpB4D,OAAOC,oBAAmB,WACtB1K,cAAc4G,MAClB","sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTAppCalendar = function () {\n    // Shared variables\n    // Calendar variables\n    var calendar;\n    var data = {\n        id: '',\n        eventName: '',\n        eventDescription: '',\n        eventLocation: '',\n        startDate: '',\n        endDate: '',\n        allDay: false\n    };\n\n    // Add event variables\n    var eventName;\n    var eventDescription;\n    var eventLocation;\n    var startDatepicker;\n    var startFlatpickr;\n    var endDatepicker;\n    var endFlatpickr;\n    var startTimepicker;\n    var startTimeFlatpickr;\n    var endTimepicker\n    var endTimeFlatpickr;\n    var modal;\n    var modalTitle;\n    var form;\n    var validator;\n    var addButton;\n    var submitButton;\n    var cancelButton;\n    var closeButton;\n\n    // View event variables\n    var viewEventName;\n    var viewAllDay;\n    var viewEventDescription;\n    var viewEventLocation;\n    var viewStartDate;\n    var viewEndDate;\n    var viewModal;\n    var viewEditButton;\n    var viewDeleteButton;\n\n\n    // Private functions\n    var initCalendarApp = function () {\n        // Define variables\n        var calendarEl = document.getElementById('kt_calendar_app');\n        var todayDate = moment().startOf('day');\n        var YM = todayDate.format('YYYY-MM');\n        var YESTERDAY = todayDate.clone().subtract(1, 'day').format('YYYY-MM-DD');\n        var TODAY = todayDate.format('YYYY-MM-DD');\n        var TOMORROW = todayDate.clone().add(1, 'day').format('YYYY-MM-DD');\n\n        // Init calendar --- more info: https://fullcalendar.io/docs/initialize-globals\n        calendar = new FullCalendar.Calendar(calendarEl, {\n            //locale: 'es', // Set local --- more info: https://fullcalendar.io/docs/locale\n            headerToolbar: {\n                left: 'prev,next today',\n                center: 'title',\n                right: 'dayGridMonth,timeGridWeek,timeGridDay'\n            },\n            initialDate: TODAY,\n            navLinks: true, // can click day/week names to navigate views\n            selectable: true,\n            selectMirror: true,\n\n            // Select dates action --- more info: https://fullcalendar.io/docs/select-callback\n            select: function (arg) {\n                formatArgs(arg);\n                handleNewEvent();\n            },\n\n            // Click event --- more info: https://fullcalendar.io/docs/eventClick\n            eventClick: function (arg) {\n                formatArgs({\n                    id: arg.event.id,\n                    title: arg.event.title,\n                    description: arg.event.extendedProps.description,\n                    location: arg.event.extendedProps.location,\n                    startStr: arg.event.startStr,\n                    endStr: arg.event.endStr,\n                    allDay: arg.event.allDay\n                });\n                \n                handleViewEvent();\n            },\n\n            editable: true,\n            dayMaxEvents: true, // allow \"more\" link when too many events\n            events: [\n                {\n                    id: uid(),\n                    title: 'All Day Event',\n                    start: YM + '-01',\n                    end: YM + '-02',\n                    description: 'Toto lorem ipsum dolor sit incid idunt ut',\n                    className: \"fc-event-danger fc-event-solid-warning\",\n                    location: 'Federation Square'\n                },\n                {\n                    id: uid(),\n                    title: 'Reporting',\n                    start: YM + '-14T13:30:00',\n                    description: 'Lorem ipsum dolor incid idunt ut labore',\n                    end: YM + '-14T14:30:00',\n                    className: \"fc-event-success\",\n                    location: 'Meeting Room 7.03'\n                },\n                {\n                    id: uid(),\n                    title: 'Company Trip',\n                    start: YM + '-02',\n                    description: 'Lorem ipsum dolor sit tempor incid',\n                    end: YM + '-03',\n                    className: \"fc-event-primary\",\n                    location: 'Seoul, Korea'\n\n                },\n                {\n                    id: uid(),\n                    title: 'ICT Expo 2021 - Product Release',\n                    start: YM + '-03',\n                    description: 'Lorem ipsum dolor sit tempor inci',\n                    end: YM + '-05',\n                    className: \"fc-event-light fc-event-solid-primary\",\n                    location: 'Melbourne Exhibition Hall'\n                },\n                {\n                    id: uid(),\n                    title: 'Dinner',\n                    start: YM + '-12',\n                    description: 'Lorem ipsum dolor sit amet, conse ctetur',\n                    end: YM + '-13',\n                    location: 'Squire\\'s Loft'\n                },\n                {\n                    id: uid(),\n                    title: 'Repeating Event',\n                    start: YM + '-09T16:00:00',\n                    end: YM + '-09T17:00:00',\n                    description: 'Lorem ipsum dolor sit ncididunt ut labore',\n                    className: \"fc-event-danger\",\n                    location: 'General Area'\n                },\n                {\n                    id: uid(),\n                    title: 'Repeating Event',\n                    description: 'Lorem ipsum dolor sit amet, labore',\n                    start: YM + '-16T16:00:00',\n                    end: YM + '-16T17:00:00',\n                    location: 'General Area'\n                },\n                {\n                    id: uid(),\n                    title: 'Conference',\n                    start: YESTERDAY,\n                    end: TOMORROW,\n                    description: 'Lorem ipsum dolor eius mod tempor labore',\n                    className: \"fc-event-primary\",\n                    location: 'Conference Hall A'\n                },\n                {\n                    id: uid(),\n                    title: 'Meeting',\n                    start: TODAY + 'T10:30:00',\n                    end: TODAY + 'T12:30:00',\n                    description: 'Lorem ipsum dolor eiu idunt ut labore',\n                    location: 'Meeting Room 11.06'\n                },\n                {\n                    id: uid(),\n                    title: 'Lunch',\n                    start: TODAY + 'T12:00:00',\n                    end: TODAY + 'T14:00:00',\n                    className: \"fc-event-info\",\n                    description: 'Lorem ipsum dolor sit amet, ut labore',\n                    location: 'Cafeteria'\n                },\n                {\n                    id: uid(),\n                    title: 'Meeting',\n                    start: TODAY + 'T14:30:00',\n                    end: TODAY + 'T15:30:00',\n                    className: \"fc-event-warning\",\n                    description: 'Lorem ipsum conse ctetur adipi scing',\n                    location: 'Meeting Room 11.10'\n                },\n                {\n                    id: uid(),\n                    title: 'Happy Hour',\n                    start: TODAY + 'T17:30:00',\n                    end: TODAY + 'T21:30:00',\n                    className: \"fc-event-info\",\n                    description: 'Lorem ipsum dolor sit amet, conse ctetur',\n                    location: 'The English Pub'\n                },\n                {\n                    id: uid(),\n                    title: 'Dinner',\n                    start: TOMORROW + 'T18:00:00',\n                    end: TOMORROW + 'T21:00:00',\n                    className: \"fc-event-solid-danger fc-event-light\",\n                    description: 'Lorem ipsum dolor sit ctetur adipi scing',\n                    location: 'New York Steakhouse'\n                },\n                {\n                    id: uid(),\n                    title: 'Birthday Party',\n                    start: TOMORROW + 'T12:00:00',\n                    end: TOMORROW + 'T14:00:00',\n                    className: \"fc-event-primary\",\n                    description: 'Lorem ipsum dolor sit amet, scing',\n                    location: 'The English Pub'\n                },\n                {\n                    id: uid(),\n                    title: 'Site visit',\n                    start: YM + '-28',\n                    end: YM + '-29',\n                    className: \"fc-event-solid-info fc-event-light\",\n                    description: 'Lorem ipsum dolor sit amet, labore',\n                    location: '271, Spring Street'\n                }\n            ],\n\n            // Handle changing calendar views --- more info: https://fullcalendar.io/docs/datesSet\n            datesSet: function(){\n                // do some stuff\n            }\n        });\n\n        calendar.render();\n    }\n\n    // Init validator\n    const initValidator = () => {\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n        validator = FormValidation.formValidation(\n            form,\n            {\n                fields: {\n                    'calendar_event_name': {\n                        validators: {\n                            notEmpty: {\n                                message: 'Event name is required'\n                            }\n                        }\n                    },\n                    'calendar_event_start_date': {\n                        validators: {\n                            notEmpty: {\n                                message: 'Start date is required'\n                            }\n                        }\n                    },\n                    'calendar_event_end_date': {\n                        validators: {\n                            notEmpty: {\n                                message: 'End date is required'\n                            }\n                        }\n                    }\n                },\n\n                plugins: {\n                    trigger: new FormValidation.plugins.Trigger(),\n                    bootstrap: new FormValidation.plugins.Bootstrap5({\n                        rowSelector: '.fv-row',\n                        eleInvalidClass: '',\n                        eleValidClass: ''\n                    })\n                }\n            }\n        );\n    }\n\n    // Initialize datepickers --- more info: https://flatpickr.js.org/\n    const initDatepickers = () => {\n        startFlatpickr = flatpickr(startDatepicker, {\n            enableTime: false,\n            dateFormat: \"Y-m-d\",\n        });\n\n        endFlatpickr = flatpickr(endDatepicker, {\n            enableTime: false,\n            dateFormat: \"Y-m-d\",\n        });\n\n        startTimeFlatpickr = flatpickr(startTimepicker, {\n            enableTime: true,\n            noCalendar: true,\n            dateFormat: \"H:i\",\n        });\n\n        endTimeFlatpickr = flatpickr(endTimepicker, {\n            enableTime: true,\n            noCalendar: true,\n            dateFormat: \"H:i\",\n        });\n    }\n\n    // Handle add button\n    const handleAddButton = () => {\n        addButton.addEventListener('click', e => {\n            // Reset form data\n            data = {\n                id: '',\n                eventName: '',\n                eventDescription: '',\n                startDate: new Date(),\n                endDate: new Date(),\n                allDay: false\n            };\n            handleNewEvent();\n        });\n    }\n\n    // Handle add new event\n    const handleNewEvent = () => {\n        // Update modal title\n        modalTitle.innerText = \"Add a New Event\";\n\n        modal.show();\n\n        // Select datepicker wrapper elements\n        const datepickerWrappers = form.querySelectorAll('[data-kt-calendar=\"datepicker\"]');\n\n        // Handle all day toggle\n        const allDayToggle = form.querySelector('#kt_calendar_datepicker_allday');\n        allDayToggle.addEventListener('click', e => {\n            if (e.target.checked) {\n                datepickerWrappers.forEach(dw => {\n                    dw.classList.add('d-none');\n                });\n            } else {\n                endFlatpickr.setDate(data.startDate, true, 'Y-m-d');\n                datepickerWrappers.forEach(dw => {\n                    dw.classList.remove('d-none');\n                });\n            }\n        });\n\n        populateForm(data);\n\n        // Handle submit form\n        submitButton.addEventListener('click', function (e) {\n            // Prevent default button action\n            e.preventDefault();\n\n            // Validate form before submit\n            if (validator) {\n                validator.validate().then(function (status) {\n                    console.log('validated!');\n\n                    if (status == 'Valid') {\n                        // Show loading indication\n                        submitButton.setAttribute('data-kt-indicator', 'on');\n\n                        // Disable submit button whilst loading\n                        submitButton.disabled = true;\n\n                        // Simulate form submission\n                        setTimeout(function () {\n                            // Simulate form submission\n                            submitButton.removeAttribute('data-kt-indicator');\n\n                            // Show popup confirmation \n                            Swal.fire({\n                                text: \"New event added to calendar!\",\n                                icon: \"success\",\n                                buttonsStyling: false,\n                                confirmButtonText: \"Ok, got it!\",\n                                customClass: {\n                                    confirmButton: \"btn btn-primary\"\n                                }\n                            }).then(function (result) {\n                                if (result.isConfirmed) {\n                                    modal.hide();\n\n                                    // Enable submit button after loading\n                                    submitButton.disabled = false;\n\n                                    // Detect if is all day event\n                                    let allDayEvent = false;\n                                    if (allDayToggle.checked) { allDayEvent = true; }\n                                    if (startTimeFlatpickr.selectedDates.length === 0) { allDayEvent = true; }\n\n                                    // Merge date & time\n                                    var startDateTime = moment(startFlatpickr.selectedDates[0]).format();\n                                    var endDateTime = moment(endFlatpickr.selectedDates[endFlatpickr.selectedDates.length - 1]).format();\n                                    if (!allDayEvent) {\n                                        const startDate = moment(startFlatpickr.selectedDates[0]).format('YYYY-MM-DD');\n                                        const endDate = startDate;\n                                        const startTime = moment(startTimeFlatpickr.selectedDates[0]).format('HH:mm:ss');\n                                        const endTime = moment(endTimeFlatpickr.selectedDates[0]).format('HH:mm:ss');\n\n                                        startDateTime = startDate + 'T' + startTime;\n                                        endDateTime = endDate + 'T' + endTime;\n                                    }\n\n                                    // Add new event to calendar\n                                    calendar.addEvent({\n                                        id: uid(),\n                                        title: eventName.value,\n                                        description: eventDescription.value,\n                                        location: eventLocation.value,\n                                        start: startDateTime,\n                                        end: endDateTime,\n                                        allDay: allDayEvent\n                                    });\n                                    calendar.render();\n\n                                    // Reset form for demo purposes only\n                                    form.reset();\n                                }\n                            });\n\n                            //form.submit(); // Submit form\n                        }, 2000);\n                    } else {\n                        // Show popup warning \n                        Swal.fire({\n                            text: \"Sorry, looks like there are some errors detected, please try again.\",\n                            icon: \"error\",\n                            buttonsStyling: false,\n                            confirmButtonText: \"Ok, got it!\",\n                            customClass: {\n                                confirmButton: \"btn btn-primary\"\n                            }\n                        });\n                    }\n                });\n            }\n        });\n    }\n\n    // Handle edit event\n    const handleEditEvent = () => {\n        // Update modal title\n        modalTitle.innerText = \"Edit an Event\";\n\n        modal.show();\n\n        // Select datepicker wrapper elements\n        const datepickerWrappers = form.querySelectorAll('[data-kt-calendar=\"datepicker\"]');\n\n        // Handle all day toggle\n        const allDayToggle = form.querySelector('#kt_calendar_datepicker_allday');\n        allDayToggle.addEventListener('click', e => {\n            if (e.target.checked) {\n                datepickerWrappers.forEach(dw => {\n                    dw.classList.add('d-none');\n                });\n            } else {\n                endFlatpickr.setDate(data.startDate, true, 'Y-m-d');\n                datepickerWrappers.forEach(dw => {\n                    dw.classList.remove('d-none');\n                });\n            }\n        });\n\n        populateForm(data);\n\n        // Handle submit form\n        submitButton.addEventListener('click', function (e) {\n            // Prevent default button action\n            e.preventDefault();\n\n            // Validate form before submit\n            if (validator) {\n                validator.validate().then(function (status) {\n                    console.log('validated!');\n\n                    if (status == 'Valid') {\n                        // Show loading indication\n                        submitButton.setAttribute('data-kt-indicator', 'on');\n\n                        // Disable submit button whilst loading\n                        submitButton.disabled = true;\n\n                        // Simulate form submission\n                        setTimeout(function () {\n                            // Simulate form submission\n                            submitButton.removeAttribute('data-kt-indicator');\n\n                            // Show popup confirmation \n                            Swal.fire({\n                                text: \"New event added to calendar!\",\n                                icon: \"success\",\n                                buttonsStyling: false,\n                                confirmButtonText: \"Ok, got it!\",\n                                customClass: {\n                                    confirmButton: \"btn btn-primary\"\n                                }\n                            }).then(function (result) {\n                                if (result.isConfirmed) {\n                                    modal.hide();\n\n                                    // Enable submit button after loading\n                                    submitButton.disabled = false;\n\n                                    // Remove old event\n                                    calendar.getEventById(data.id).remove();\n\n                                    // Detect if is all day event\n                                    let allDayEvent = false;\n                                    if (allDayToggle.checked) { allDayEvent = true; }\n                                    if (startTimeFlatpickr.selectedDates.length === 0) { allDayEvent = true; }\n\n                                    // Merge date & time\n                                    var startDateTime = moment(startFlatpickr.selectedDates[0]).format();\n                                    var endDateTime = moment(endFlatpickr.selectedDates[endFlatpickr.selectedDates.length - 1]).format();\n                                    if (!allDayEvent) {\n                                        const startDate = moment(startFlatpickr.selectedDates[0]).format('YYYY-MM-DD');\n                                        const endDate = startDate;\n                                        const startTime = moment(startTimeFlatpickr.selectedDates[0]).format('HH:mm:ss');\n                                        const endTime = moment(endTimeFlatpickr.selectedDates[0]).format('HH:mm:ss');\n\n                                        startDateTime = startDate + 'T' + startTime;\n                                        endDateTime = endDate + 'T' + endTime;\n                                    }\n\n                                    // Add new event to calendar\n                                    calendar.addEvent({\n                                        id: uid(),\n                                        title: eventName.value,\n                                        description: eventDescription.value,\n                                        location: eventLocation.value,\n                                        start: startDateTime,\n                                        end: endDateTime,\n                                        allDay: allDayEvent\n                                    });\n                                    calendar.render();\n\n                                    // Reset form for demo purposes only\n                                    form.reset();\n                                }\n                            });\n\n                            //form.submit(); // Submit form\n                        }, 2000);\n                    } else {\n                        // Show popup warning \n                        Swal.fire({\n                            text: \"Sorry, looks like there are some errors detected, please try again.\",\n                            icon: \"error\",\n                            buttonsStyling: false,\n                            confirmButtonText: \"Ok, got it!\",\n                            customClass: {\n                                confirmButton: \"btn btn-primary\"\n                            }\n                        });\n                    }\n                });\n            }\n        });\n    }\n\n    // Handle view event\n    const handleViewEvent = () => {\n        viewModal.show();\n\n        // Detect all day event\n        var eventNameMod;\n        var startDateMod;\n        var endDateMod;\n\n        // Generate labels\n        if (data.allDay) {\n            eventNameMod = 'All Day';\n            startDateMod = moment(data.startDate).format('Do MMM, YYYY');\n            endDateMod = moment(data.endDate).format('Do MMM, YYYY');\n        } else {\n            eventNameMod = '';\n            startDateMod = moment(data.startDate).format('Do MMM, YYYY - h:mm a');\n            endDateMod = moment(data.endDate).format('Do MMM, YYYY - h:mm a');\n        }\n\n        // Populate view data\n        viewEventName.innerText = data.eventName;\n        viewAllDay.innerText = eventNameMod;\n        viewEventDescription.innerText = data.eventDescription ? data.eventDescription : '--';\n        viewEventLocation.innerText = data.eventLocation ? data.eventLocation : '--';\n        viewStartDate.innerText = startDateMod;\n        viewEndDate.innerText = endDateMod;\n    }\n\n    // Handle delete event\n    const handleDeleteEvent = () => {\n        viewDeleteButton.addEventListener('click', e => {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Are you sure you would like to delete this event?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: \"Yes, delete it!\",\n                cancelButtonText: \"No, return\",\n                customClass: {\n                    confirmButton: \"btn btn-primary\",\n                    cancelButton: \"btn btn-active-light\"\n                }\n            }).then(function (result) {\n                if (result.value) {\n                    calendar.getEventById(data.id).remove();\n\n                    viewModal.hide(); // Hide modal\t\t\t\t\n                } else if (result.dismiss === 'cancel') {\n                    Swal.fire({\n                        text: \"Your event was not deleted!.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn btn-primary\",\n                        }\n                    });\n                }\n            });\n        });\n    }\n\n    // Handle edit button\n    const handleEditButton = () => {\n        viewEditButton.addEventListener('click', e => {\n            e.preventDefault();\n\n            viewModal.hide();\n            handleEditEvent();\n        });\n    }\n\n    // Handle cancel button\n    const handleCancelButton = () => {\n        // Edit event modal cancel button\n        cancelButton.addEventListener('click', function (e) {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Are you sure you would like to cancel?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: \"Yes, cancel it!\",\n                cancelButtonText: \"No, return\",\n                customClass: {\n                    confirmButton: \"btn btn-primary\",\n                    cancelButton: \"btn btn-active-light\"\n                }\n            }).then(function (result) {\n                if (result.value) {\n                    form.reset(); // Reset form\t\n                    modal.hide(); // Hide modal\t\t\t\t\n                } else if (result.dismiss === 'cancel') {\n                    Swal.fire({\n                        text: \"Your form has not been cancelled!.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn btn-primary\",\n                        }\n                    });\n                }\n            });\n        });\n    }\n\n    // Handle close button\n    const handleCloseButton = () => {\n        // Edit event modal close button\n        closeButton.addEventListener('click', function (e) {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Are you sure you would like to cancel?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: \"Yes, cancel it!\",\n                cancelButtonText: \"No, return\",\n                customClass: {\n                    confirmButton: \"btn btn-primary\",\n                    cancelButton: \"btn btn-active-light\"\n                }\n            }).then(function (result) {\n                if (result.value) {\n                    form.reset(); // Reset form\t\n                    modal.hide(); // Hide modal\t\t\t\t\n                } else if (result.dismiss === 'cancel') {\n                    Swal.fire({\n                        text: \"Your form has not been cancelled!.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn btn-primary\",\n                        }\n                    });\n                }\n            });\n        });\n    }\n\n    // Handle view button\n    const handleViewButton = () => {\n        const viewButton = document.querySelector('#kt_calendar_event_view_button');\n        viewButton.addEventListener('click', e => {\n            e.preventDefault();\n\n            hidePopovers();\n            handleViewEvent();\n        });\n    }\n\n    // Helper functions\n\n    // Reset form validator on modal close\n    const resetFormValidator = (element) => {\n        // Target modal hidden event --- For more info: https://getbootstrap.com/docs/5.0/components/modal/#events\n        element.addEventListener('hidden.bs.modal', e => {\n            if (validator) {\n                // Reset form validator. For more info: https://formvalidation.io/guide/api/reset-form\n                validator.resetForm(true);\n            }\n        });\n    }\n\n    // Populate form \n    const populateForm = () => {\n        eventName.value = data.eventName ? data.eventName : '';\n        eventDescription.value = data.eventDescription ? data.eventDescription : '';\n        eventLocation.value = data.eventLocation ? data.eventLocation : '';\n        startFlatpickr.setDate(data.startDate, true, 'Y-m-d');\n\n        // Handle null end dates\n        const endDate = data.endDate ? data.endDate : moment(data.startDate).format();\n        endFlatpickr.setDate(endDate, true, 'Y-m-d');\n\n        const allDayToggle = form.querySelector('#kt_calendar_datepicker_allday');\n        const datepickerWrappers = form.querySelectorAll('[data-kt-calendar=\"datepicker\"]');\n        if (data.allDay) {\n            allDayToggle.checked = true;\n            datepickerWrappers.forEach(dw => {\n                dw.classList.add('d-none');\n            });\n        } else {\n            startTimeFlatpickr.setDate(data.startDate, true, 'Y-m-d H:i');\n            endTimeFlatpickr.setDate(data.endDate, true, 'Y-m-d H:i');\n            endFlatpickr.setDate(data.startDate, true, 'Y-m-d');\n            allDayToggle.checked = false;\n            datepickerWrappers.forEach(dw => {\n                dw.classList.remove('d-none');\n            });\n        }\n    }\n\n    // Format FullCalendar reponses\n    const formatArgs = (res) => {\n        data.id = res.id;\n        data.eventName = res.title;\n        data.eventDescription = res.description;\n        data.eventLocation = res.location;\n        data.startDate = res.startStr;\n        data.endDate = res.endStr;\n        data.allDay = res.allDay;\n    }\n\n    // Generate unique IDs for events\n    const uid = () => {\n        return Date.now().toString() + Math.floor(Math.random() * 1000).toString();\n    }\n\n    return {\n        // Public Functions\n        init: function () {\n            // Define variables\n            // Add event modal\n            const element = document.getElementById('kt_modal_add_event');\n            form = element.querySelector('#kt_modal_add_event_form');\n            eventName = form.querySelector('[name=\"calendar_event_name\"]');\n            eventDescription = form.querySelector('[name=\"calendar_event_description\"]');\n            eventLocation = form.querySelector('[name=\"calendar_event_location\"]');\n            startDatepicker = form.querySelector('#kt_calendar_datepicker_start_date');\n            endDatepicker = form.querySelector('#kt_calendar_datepicker_end_date');\n            startTimepicker = form.querySelector('#kt_calendar_datepicker_start_time');\n            endTimepicker = form.querySelector('#kt_calendar_datepicker_end_time');\n            addButton = document.querySelector('[data-kt-calendar=\"add\"]');\n            submitButton = form.querySelector('#kt_modal_add_event_submit');\n            cancelButton = form.querySelector('#kt_modal_add_event_cancel');\n            closeButton = element.querySelector('#kt_modal_add_event_close');\n            modalTitle = form.querySelector('[data-kt-calendar=\"title\"]');\n            modal = new bootstrap.Modal(element);\n\n            // View event modal\n            const viewElement = document.getElementById('kt_modal_view_event');\n            viewModal = new bootstrap.Modal(viewElement);\n            viewEventName = viewElement.querySelector('[data-kt-calendar=\"event_name\"]');\n            viewAllDay = viewElement.querySelector('[data-kt-calendar=\"all_day\"]');\n            viewEventDescription = viewElement.querySelector('[data-kt-calendar=\"event_description\"]');\n            viewEventLocation = viewElement.querySelector('[data-kt-calendar=\"event_location\"]');\n            viewStartDate = viewElement.querySelector('[data-kt-calendar=\"event_start_date\"]');\n            viewEndDate = viewElement.querySelector('[data-kt-calendar=\"event_end_date\"]');\n            viewEditButton = viewElement.querySelector('#kt_modal_view_event_edit');\n            viewDeleteButton = viewElement.querySelector('#kt_modal_view_event_delete');\n\n            initCalendarApp();\n            initValidator();\n            initDatepickers();\n            handleEditButton();\n            handleAddButton();\n            handleDeleteEvent();\n            handleCancelButton();\n            handleCloseButton();\n            resetFormValidator(element);\n        }\n    };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTAppCalendar.init();\n});\n"]}