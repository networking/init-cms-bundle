{"version":3,"file":"advanced.js","names":["KTSubscriptionsAdvanced","table","datatable","initCustomFieldRowIndex","querySelectorAll","forEach","tr","index","fieldNameInput","querySelector","fieldValueInput","fieldNameLabel","getAttribute","fieldValueLabel","setAttribute","init","document","getElementById","addButton","fieldName","innerHTML","fieldValue","deleteButton","rowNode","$","DataTable","info","order","ordering","paging","lengthChange","addEventListener","e","preventDefault","row","add","draw","node","find","eq","addClass","initCustomFieldsDatatable","KTUtil","on","parent","target","closest","Swal","fire","text","icon","showCancelButton","buttonsStyling","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","then","result","value","remove","dismiss","onDOMContentLoaded"],"sources":["apps/subscriptions/add/advanced.js"],"mappings":"AAAA,aAEA,IAAIA,wBAA0B,WAE1B,IAAIC,EACAC,EA0CAC,EAA0B,WACRF,EAAMG,iBAAiB,YAE/BC,SAAQ,CAACC,EAAIC,KAEnB,MAAMC,EAAiBF,EAAGG,cAAc,wBAClCC,EAAkBJ,EAAGG,cAAc,yBACnCE,EAAiBH,EAAeI,aAAa,MAC7CC,EAAkBH,EAAgBE,aAAa,MAErDJ,EAAeM,aAAa,OAAQH,EAAiB,IAAMJ,GAC3DG,EAAgBI,aAAa,OAAQD,EAAkB,IAAMN,EAAM,GAE3E,EAmDA,MAAO,CACHQ,KAAM,WACFd,EAAQe,SAASC,eAAe,+BA1GR,WAE5B,MAAMC,EAAYF,SAASC,eAAe,mCAGpCE,EAAYlB,EAAMQ,cAAc,2BAA2BW,UAC3DC,EAAapB,EAAMQ,cAAc,4BAA4BW,UAC7DE,EAAerB,EAAMQ,cAAc,0BAA0BW,UAYnE,IAAIG,EATJrB,EAAYsB,EAAEvB,GAAOwB,UAAU,CAC3BC,MAAQ,EACRC,MAAS,GACTC,UAAY,EACZC,QAAU,EACVC,cAAgB,IAOpBZ,EAAUa,iBAAiB,SAAS,SAAUC,GAC1CA,EAAEC,iBAEFV,EAAUrB,EAAUgC,IAAIC,IAAI,CACxBhB,EACAE,EACAC,IACDc,OAAOC,OAGVb,EAAED,GAASe,KAAK,MAAMC,GAAG,GAAGC,SAAS,YAGrCrC,GACJ,GACJ,CAuEQsC,GACAtC,IApDJuC,OAAOC,GAAG1C,EAAO,kCAAmC,SAAS,SAAS+B,GAClEA,EAAEC,iBAGF,MAAMW,EAASZ,EAAEa,OAAOC,QAAQ,MAGhCC,KAAKC,KAAK,CACNC,KAAM,+CACNC,KAAM,UACNC,kBAAkB,EAClBC,gBAAgB,EAChBC,kBAAmB,eACnBC,iBAAkB,aAClBC,YAAa,CACTC,cAAe,yBACfC,aAAc,0CAEnBC,MAAK,SAAUC,GACVA,EAAOC,MACPb,KAAKC,KAAK,CACNC,KAAM,wBACNC,KAAM,UACNE,gBAAgB,EAChBC,kBAAmB,cACnBE,YAAa,CACTC,cAAe,6BAEpBE,MAAK,WAEJxD,EAAUgC,IAAIV,EAAEoB,IAASiB,SAASzB,MACtC,IAC0B,WAAnBuB,EAAOG,SACdf,KAAKC,KAAK,CACNC,KAAM,sBACNC,KAAM,QACNE,gBAAgB,EAChBC,kBAAmB,cACnBE,YAAa,CACTC,cAAe,4BAI/B,GACJ,GAUA,EAER,CAtH8B,GAyH9Bd,OAAOqB,oBAAmB,WACtB/D,wBAAwBe,MAC5B","sourcesContent":["\"use strict\";\n\nvar KTSubscriptionsAdvanced = function () {\n    // Shared variables\n    var table;\n    var datatable;\n\n    var initCustomFieldsDatatable = function () {\n        // Define variables\n        const addButton = document.getElementById('kt_create_new_custom_fields_add');\n\n        // Duplicate input fields\n        const fieldName = table.querySelector('tbody tr td:first-child').innerHTML;\n        const fieldValue = table.querySelector('tbody tr td:nth-child(2)').innerHTML;\n        const deleteButton = table.querySelector('tbody tr td:last-child').innerHTML;\n\n        // Init datatable --- more info on datatables: https://datatables.net/manual/\n        datatable = $(table).DataTable({\n            \"info\": false,\n            'order': [],\n            'ordering': false,\n            'paging': false,\n            \"lengthChange\": false\n        });\n\n        // Define datatable row node\n        var rowNode;\n\n        // Handle add button\n        addButton.addEventListener('click', function (e) {\n            e.preventDefault();\n\n            rowNode = datatable.row.add([\n                fieldName,\n                fieldValue,\n                deleteButton\n            ]).draw().node();\n\n            // Add custom class to last column -- more info: https://datatables.net/forums/discussion/22341/row-add-cell-class\n            $(rowNode).find('td').eq(2).addClass('text-end');\n\n            // Re-calculate index\n            initCustomFieldRowIndex();\n        });\n    }\n\n    // Handle row index count\n    var initCustomFieldRowIndex = function() {\n        const tableRows = table.querySelectorAll('tbody tr');\n\n        tableRows.forEach((tr, index) => {\n            // add index number to input names & id\n            const fieldNameInput = tr.querySelector('td:first-child input');\n            const fieldValueInput = tr.querySelector('td:nth-child(2) input');\n            const fieldNameLabel = fieldNameInput.getAttribute('id');\n            const fieldValueLabel = fieldValueInput.getAttribute('id');\n\n            fieldNameInput.setAttribute('name', fieldNameLabel + '-' + index);\n            fieldValueInput.setAttribute('name', fieldValueLabel + '-' + index);\n        });\n    }\n\n    // Delete product\n    var deleteCustomField = function() {\n        KTUtil.on(table, '[data-kt-action=\"field_remove\"]', 'click', function(e) {\n            e.preventDefault();\n\n            // Select parent row\n            const parent = e.target.closest('tr');\n\n            // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/\n            Swal.fire({\n                text: \"Are you sure you want to delete this field ?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: \"Yes, delete!\",\n                cancelButtonText: \"No, cancel\",\n                customClass: {\n                    confirmButton: \"btn fw-bold btn-danger\",\n                    cancelButton: \"btn fw-bold btn-active-light-primary\"\n                }\n            }).then(function (result) {\n                if (result.value) {\n                    Swal.fire({\n                        text: \"You have deleted it!.\",\n                        icon: \"success\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn fw-bold btn-primary\",\n                        }\n                    }).then(function () {\n                        // Remove current row\n                        datatable.row($(parent)).remove().draw();\n                    });\n                } else if (result.dismiss === 'cancel') {\n                    Swal.fire({\n                        text: \"It was not deleted.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn fw-bold btn-primary\",\n                        }\n                    })\n                }\n            });\n        });\n    }\n\n    return {\n        init: function () {\n            table = document.getElementById('kt_create_new_custom_fields');\n\n            initCustomFieldsDatatable();\n            initCustomFieldRowIndex();            \n            deleteCustomField();\n        }\n    }\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTSubscriptionsAdvanced.init();\n});"]}