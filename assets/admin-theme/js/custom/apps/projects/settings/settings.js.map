{"version":3,"file":"settings.js","names":["KTProjectSettings","init","validation","$","flatpickr","_form","document","getElementById","submitButton","querySelector","FormValidation","formValidation","fields","name","validators","notEmpty","message","type","description","date","plugins","trigger","Trigger","SubmitButton","bootstrap","Bootstrap5","rowSelector","addEventListener","e","preventDefault","validate","then","status","swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","handleForm","KTUtil","onDOMContentLoaded"],"sources":["apps/projects/settings/settings.js"],"mappings":"AAAA,aAGA,IAAIA,kBAyFO,CACHC,KAAM,YAvFO,WAKb,IAAIC,EAHJC,EAAE,oBAAoBC,YAItB,IAAIC,EAAQC,SAASC,eAAe,4BAChCC,EAAeH,EAAMI,cAAc,+BAGvCP,EAAaQ,eAAeC,eACxBN,EACA,CACIO,OAAQ,CACJC,KAAM,CACFC,WAAY,CACRC,SAAU,CACNC,QAAS,8BAIrBC,KAAM,CACFH,WAAY,CACRC,SAAU,CACNC,QAAS,8BAIrBE,YAAa,CACTJ,WAAY,CACRC,SAAU,CACNC,QAAS,qCAIrBG,KAAM,CACFL,WAAY,CACRC,SAAU,CACNC,QAAS,2BAKzBI,QAAS,CACLC,QAAS,IAAIX,eAAeU,QAAQE,QACpCd,aAAc,IAAIE,eAAeU,QAAQG,aAEzCC,UAAW,IAAId,eAAeU,QAAQK,WAAW,CAC7CC,YAAa,eAM7BlB,EAAamB,iBAAiB,SAAS,SAAUC,GAC7CA,EAAEC,iBAEF3B,EAAW4B,WAAWC,MAAK,SAAUC,GACnB,SAAVA,EAEAC,KAAKC,KAAK,CACNC,KAAM,kDACNC,KAAM,UACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,mCAKvBP,KAAKC,KAAK,CACNC,KAAM,sEACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,kCAI/B,GACJ,GACJ,CAKQC,EACJ,GAMRC,OAAOC,oBAAmB,WACtB3C,kBAAkBC,MACtB","sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTProjectSettings = function () {\n\n    // Private functions\n    var handleForm = function () {\n        // Init Datepicker --- For more info, please check Flatpickr's official documentation: https://flatpickr.js.org/\n        $(\"#kt_datepicker_1\").flatpickr();\n\n        // Form validation\n        var validation;\n        var _form = document.getElementById('kt_project_settings_form');\n        var submitButton = _form.querySelector('#kt_project_settings_submit');\n\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n        validation = FormValidation.formValidation(\n            _form,\n            {\n                fields: {\n                    name: {\n                        validators: {\n                            notEmpty: {\n                                message: 'Project name is required'\n                            }\n                        }\n                    },\n                    type: {\n                        validators: {\n                            notEmpty: {\n                                message: 'Project type is required'\n                            }\n                        }\n                    },\n                    description: {\n                        validators: {\n                            notEmpty: {\n                                message: 'Project Description is required'\n                            }\n                        }\n                    },\n                    date: {\n                        validators: {\n                            notEmpty: {\n                                message: 'Due Date is required'\n                            }\n                        }\n                    },\n                },\n                plugins: {\n                    trigger: new FormValidation.plugins.Trigger(),\n                    submitButton: new FormValidation.plugins.SubmitButton(),\n                    //defaultSubmit: new FormValidation.plugins.DefaultSubmit(), // Uncomment this line to enable normal button submit after form validation\n                    bootstrap: new FormValidation.plugins.Bootstrap5({\n                        rowSelector: '.fv-row'\n                    })\n                }\n            }\n        );\n\n        submitButton.addEventListener('click', function (e) {\n            e.preventDefault();\n\n            validation.validate().then(function (status) {\n                if (status == 'Valid') {\n\n                    swal.fire({\n                        text: \"Thank you! You've updated your project settings\",\n                        icon: \"success\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn fw-bold btn-light-primary\"\n                        }\n                    });\n\n                } else {\n                    swal.fire({\n                        text: \"Sorry, looks like there are some errors detected, please try again.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn fw-bold btn-light-primary\"\n                        }\n                    });\n                }\n            });\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            handleForm();\n        }\n    }\n}();\n\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTProjectSettings.init();\n});\n"]}