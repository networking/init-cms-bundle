{"version":3,"file":"project.js","names":["KTProjectOverview","primary","KTUtil","getCssVariableValue","lightPrimary","success","lightSuccess","gray200","gray500","init","element","height","document","getElementById","ctx","getContext","Chart","type","data","datasets","backgroundColor","labels","options","chart","fontFamily","cutoutPercentage","responsive","maintainAspectRatio","cutout","title","display","animation","animateScale","animateRotate","tooltips","enabled","intersect","mode","bodySpacing","yPadding","xPadding","caretPadding","displayColors","titleFontColor","cornerRadius","footerSpacing","titleSpacing","plugins","legend","initChart","parseInt","css","ApexCharts","series","name","toolbar","show","plotOptions","dataLabels","fill","opacity","stroke","curve","width","colors","xaxis","categories","axisBorder","axisTicks","style","fontSize","crosshairs","position","color","dashArray","tooltip","formatter","undefined","offsetY","yaxis","states","normal","filter","value","hover","active","allowMultipleDataPointsSelection","y","val","grid","borderColor","strokeDashArray","lines","markers","strokeColor","strokeWidth","render","table","querySelector","querySelectorAll","forEach","row","dateRow","realDate","moment","innerHTML","format","setAttribute","datatable","$","DataTable","info","order","filterOrders","filterYear","minDate","maxDate","addEventListener","e","column","search","target","draw","startOf","endOf","subtract","add","fn","dataTable","ext","push","settings","dataIndex","min","max","date","parseFloat","isNaN","initTable","onDOMContentLoaded"],"sources":["apps/projects/project/project.js"],"mappings":"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","sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTProjectOverview = function () {\n    // Colors\n    var primary = KTUtil.getCssVariableValue('--bs-primary');\n    var lightPrimary = KTUtil.getCssVariableValue('--bs-primary-light');\n    var success = KTUtil.getCssVariableValue('--bs-success');\n    var lightSuccess = KTUtil.getCssVariableValue('--bs-success-light');\n    var gray200 = KTUtil.getCssVariableValue('--bs-gray-200');\n    var gray500 = KTUtil.getCssVariableValue('--bs-gray-500');\n\n    // Private functions\n    var initChart = function () {        \n        // init chart\n        var element = document.getElementById(\"project_overview_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        var config = {\n            type: 'doughnut',\n            data: {\n                datasets: [{\n                    data: [30, 45, 25],\n                    backgroundColor: ['#00A3FF', '#50CD89', '#E4E6EF']\n                }],\n                labels: ['Active', 'Completed', 'Yet to start']\n            },\n            options: {\n                chart: {\n                    fontFamily: 'inherit'\n                },\n                cutoutPercentage: 75,\n                responsive: true,\n                maintainAspectRatio: false,\n                cutout: '75%',\n                title: {\n                    display: false\n                },\n                animation: {\n                    animateScale: true,\n                    animateRotate: true\n                },\n                tooltips: {\n                    enabled: true,\n                    intersect: false,\n                    mode: 'nearest',\n                    bodySpacing: 5,\n                    yPadding: 10,\n                    xPadding: 10,\n                    caretPadding: 0,\n                    displayColors: false,\n                    backgroundColor: '#20D489',\n                    titleFontColor: '#ffffff',\n                    cornerRadius: 4,\n                    footerSpacing: 0,\n                    titleSpacing: 0\n                },\n                plugins: {\n                    legend: {\n                        display: false\n                    }\n                }\n            }\n        };\n\n        var ctx = element.getContext('2d');\n        var myDoughnut = new Chart(ctx, config);\n    }\n\n    var initGraph = function () {\n        var element = document.getElementById(\"kt_project_overview_graph\");\n        var height = parseInt(KTUtil.css(element, 'height'));\n\n        if (!element) {\n            return;\n        }\n\n        var options = {\n            series: [{\n                name: 'Incomplete',\n                data: [70, 70, 80, 80, 75, 75, 75]\n            }, {\n                name: 'Complete',\n                data: [55, 55, 60, 60, 55, 55, 60]\n            }],\n            chart: {\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {\n\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: 'solid',\n                opacity: 1\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [primary, success]\n            },\n            xaxis: {\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    style: {\n                        colors: gray500,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: primary,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: gray500,\n                        fontSize: '12px',\n                    }\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px',\n                },\n                y: {\n                    formatter: function (val) {\n                        return val + \" tasks\"\n                    }\n                }\n            },\n            colors: [lightPrimary, lightSuccess],\n            grid: {\n                borderColor: gray200,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                //size: 5,\n                colors: [lightPrimary, lightSuccess],\n                strokeColor: [primary, success],\n                strokeWidth: 3\n            }\n        };\n\n        var chart = new ApexCharts(element, options);\n        chart.render();\n    }\n\n    var initTable = function () {\n        var table = document.querySelector('#kt_profile_overview_table');\n\n        if (!table) {\n            return;\n        }\n\n        // Set date data order\n        const tableRows = table.querySelectorAll('tbody tr');\n\n        tableRows.forEach(row => {\n            const dateRow = row.querySelectorAll('td');\n            const realDate = moment(dateRow[1].innerHTML, \"MMM D, YYYY\").format();\n            dateRow[1].setAttribute('data-order', realDate);\n        });\n\n        // Init datatable --- more info on datatables: https://datatables.net/manual/\n        const datatable = $(table).DataTable({\n            \"info\": false,\n            'order': []\n        });\n\n        // Filter dropdown elements\n        const filterOrders = document.getElementById('kt_filter_orders');\n        const filterYear = document.getElementById('kt_filter_year');\n\n        // Filter by order status --- official docs reference: https://datatables.net/reference/api/search()\n        filterOrders.addEventListener('change', function (e) {\n            datatable.column(3).search(e.target.value).draw();\n        });\n\n        // Filter by date --- official docs reference: https://momentjs.com/docs/\n        var minDate;\n        var maxDate;\n\n        filterYear.addEventListener('change', function (e) {\n            const value = e.target.value;\n            switch (value) {\n                case 'thisyear': {\n                    minDate = moment().startOf('year').format();\n                    maxDate = moment().endOf('year').format();\n                    datatable.draw();\n                    break;\n                }\n                case 'thismonth': {\n                    minDate = moment().startOf('month').format();\n                    maxDate = moment().endOf('month').format();\n                    datatable.draw();\n                    break;\n                }\n                case 'lastmonth': {\n                    minDate = moment().subtract(1, 'months').startOf('month').format();\n                    maxDate = moment().subtract(1, 'months').endOf('month').format();\n                    datatable.draw();\n                    break;\n                }\n                case 'last90days': {\n                    minDate = moment().subtract(30, 'days').format();\n                    maxDate = moment().format();\n                    datatable.draw();\n                    break;\n                }\n                default: {\n                    minDate = moment().subtract(100, 'years').startOf('month').format();\n                    maxDate = moment().add(1, 'months').endOf('month').format();\n                    datatable.draw();\n                    break;\n                }\n            }\n        });\n\n        // Date range filter --- offical docs reference: https://datatables.net/examples/plug-ins/range_filtering.html\n        $.fn.dataTable.ext.search.push(\n            function (settings, data, dataIndex) {\n                var min = minDate;\n                var max = maxDate;\n                var date = parseFloat(moment(data[1]).format()) || 0; // use data for the age column\n\n                if ((isNaN(min) && isNaN(max)) ||\n                    (isNaN(min) && date <= max) ||\n                    (min <= date && isNaN(max)) ||\n                    (min <= date && date <= max)) {\n                    return true;\n                }\n                return false;\n            }\n        );\n\n        // Search --- official docs reference: https://datatables.net/reference/api/search()\n        var filterSearch = document.getElementById('kt_filter_search');\n        filterSearch.addEventListener('keyup', function (e) {\n            datatable.search(e.target.value).draw();\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n            initGraph();\n            initTable();\n        }\n    }\n}();\n\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTProjectOverview.init();\n});"]}