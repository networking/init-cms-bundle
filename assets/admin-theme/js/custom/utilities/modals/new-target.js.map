{"version":3,"file":"new-target.js","names":["KTModalNewTarget","submitButton","cancelButton","validator","form","modal","modalEl","init","document","querySelector","bootstrap","Modal","getElementById","Tagify","whitelist","maxTags","dropdown","maxItems","enabled","closeOnSelect","on","revalidateField","$","flatpickr","enableTime","dateFormat","FormValidation","formValidation","fields","target_title","validators","notEmpty","message","target_assign","target_due_date","target_tags","plugins","trigger","Trigger","Bootstrap5","rowSelector","eleInvalidClass","eleValidClass","addEventListener","e","preventDefault","validate","then","status","console","log","setAttribute","disabled","setTimeout","removeAttribute","Swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","result","isConfirmed","hide","showCancelButton","cancelButtonText","value","reset","dismiss","KTUtil","onDOMContentLoaded"],"sources":["utilities/modals/new-target.js"],"mappings":"AAAA,aAGA,IAAIA,iBAAmB,WACtB,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAgLJ,MAAO,CAENC,KAAM,YAELD,EAAUE,SAASC,cAAc,2BAMjCJ,EAAQ,IAAIK,UAAUC,MAAML,GAE5BF,EAAOI,SAASC,cAAc,6BAC9BR,EAAeO,SAASI,eAAe,8BACvCV,EAAeM,SAASI,eAAe,8BAzL7B,IAAIC,OAAOT,EAAKK,cAAc,iBAAkB,CAC1DK,UAAW,CAAC,YAAa,SAAU,OAAQ,SAAU,OACrDC,QAAS,EACTC,SAAU,CACTC,SAAU,GACVC,QAAS,EACTC,eAAe,KAGZC,GAAG,UAAU,WAERjB,EAAUkB,gBAAgB,OACpC,IAGcC,EAAElB,EAAKK,cAAc,sBAC3Bc,UAAU,CACjBC,YAAY,EACZC,WAAY,gBAIPH,EAAElB,EAAKK,cAAc,yBAAyBW,GAAG,UAAU,WAEvDjB,EAAUkB,gBAAgB,cAC9B,IAQNlB,EAAYuB,eAAeC,eAC1BvB,EACA,CACCwB,OAAQ,CACPC,aAAc,CACbC,WAAY,CACXC,SAAU,CACTC,QAAS,8BAIZC,cAAe,CACdH,WAAY,CACXC,SAAU,CACTC,QAAS,+BAIZE,gBAAiB,CAChBJ,WAAY,CACXC,SAAU,CACTC,QAAS,iCAIZG,YAAa,CACZL,WAAY,CACXC,SAAU,CACTC,QAAS,8BAIZ,0BAA2B,CACRF,WAAY,CACRC,SAAU,CACNC,QAAS,sDAKrCI,QAAS,CACRC,QAAS,IAAIX,eAAeU,QAAQE,QACpC5B,UAAW,IAAIgB,eAAeU,QAAQG,WAAW,CAChDC,YAAa,UACKC,gBAAiB,GACjBC,cAAe,QAOrCzC,EAAa0C,iBAAiB,SAAS,SAAUC,GAChDA,EAAEC,iBAGE1C,GACHA,EAAU2C,WAAWC,MAAK,SAAUC,GACnCC,QAAQC,IAAI,cAEE,SAAVF,GACH/C,EAAakD,aAAa,oBAAqB,MAG/ClD,EAAamD,UAAW,EAExBC,YAAW,WACVpD,EAAaqD,gBAAgB,qBAG7BrD,EAAamD,UAAW,EAGxBG,KAAKC,KAAK,CACTC,KAAM,wCACNC,KAAM,UACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACZC,cAAe,qBAEdf,MAAK,SAAUgB,GACbA,EAAOC,aACV3D,EAAM4D,MAER,GAGD,GAAG,MAGHV,KAAKC,KAAK,CACTC,KAAM,sEACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACZC,cAAe,oBAInB,GAEF,IAEA5D,EAAayC,iBAAiB,SAAS,SAAUC,GAChDA,EAAEC,iBAEFU,KAAKC,KAAK,CACTC,KAAM,yCACNC,KAAM,UACNQ,kBAAkB,EAClBP,gBAAgB,EAChBC,kBAAmB,kBACnBO,iBAAkB,aAClBN,YAAa,CACZC,cAAe,kBACf5D,aAAc,0BAEb6C,MAAK,SAAUgB,GACbA,EAAOK,OACVhE,EAAKiE,QACLhE,EAAM4D,QACuB,WAAnBF,EAAOO,SACjBf,KAAKC,KAAK,CACTC,KAAM,qCACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACZC,cAAe,oBAInB,GACD,IAqBA,EAEF,CA1MuB,GA6MvBS,OAAOC,oBAAmB,WACzBxE,iBAAiBO,MAClB","sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTModalNewTarget = function () {\n\tvar submitButton;\n\tvar cancelButton;\n\tvar validator;\n\tvar form;\n\tvar modal;\n\tvar modalEl;\n\n\t// Init form inputs\n\tvar initForm = function() {\n\t\t// Tags. For more info, please visit the official plugin site: https://yaireo.github.io/tagify/\n\t\tvar tags = new Tagify(form.querySelector('[name=\"tags\"]'), {\n\t\t\twhitelist: [\"Important\", \"Urgent\", \"High\", \"Medium\", \"Low\"],\n\t\t\tmaxTags: 5,\n\t\t\tdropdown: {\n\t\t\t\tmaxItems: 10,           // <- mixumum allowed rendered suggestions\n\t\t\t\tenabled: 0,             // <- show suggestions on focus\n\t\t\t\tcloseOnSelect: false    // <- do not hide the suggestions dropdown once an item has been selected\n\t\t\t}\n\t\t});\n\t\ttags.on(\"change\", function(){\n\t\t\t// Revalidate the field when an option is chosen\n            validator.revalidateField('tags');\n\t\t});\n\n\t\t// Due date. For more info, please visit the official plugin site: https://flatpickr.js.org/\n\t\tvar dueDate = $(form.querySelector('[name=\"due_date\"]'));\n\t\tdueDate.flatpickr({\n\t\t\tenableTime: true,\n\t\t\tdateFormat: \"d, M Y, H:i\",\n\t\t});\n\n\t\t// Team assign. For more info, plase visit the official plugin site: https://select2.org/\n        $(form.querySelector('[name=\"team_assign\"]')).on('change', function() {\n            // Revalidate the field when an option is chosen\n            validator.revalidateField('team_assign');\n        });\n\t}\n\n\t// Handle form validation and submittion\n\tvar handleForm = function() {\n\t\t// Stepper custom navigation\n\n\t\t// Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n\t\tvalidator = FormValidation.formValidation(\n\t\t\tform,\n\t\t\t{\n\t\t\t\tfields: {\n\t\t\t\t\ttarget_title: {\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'Target title is required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ttarget_assign: {\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'Target assign is required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ttarget_due_date: {\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'Target due date is required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ttarget_tags: {\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'Target tags are required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'targets_notifications[]': {\n                        validators: {\n                            notEmpty: {\n                                message: 'Please select at least one communication method'\n                            }\n                        }\n                    },\n\t\t\t\t},\n\t\t\t\tplugins: {\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap5({\n\t\t\t\t\t\trowSelector: '.fv-row',\n                        eleInvalidClass: '',\n                        eleValidClass: ''\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t// Action buttons\n\t\tsubmitButton.addEventListener('click', function (e) {\n\t\t\te.preventDefault();\n\n\t\t\t// Validate form before submit\n\t\t\tif (validator) {\n\t\t\t\tvalidator.validate().then(function (status) {\n\t\t\t\t\tconsole.log('validated!');\n\n\t\t\t\t\tif (status == 'Valid') {\n\t\t\t\t\t\tsubmitButton.setAttribute('data-kt-indicator', 'on');\n\n\t\t\t\t\t\t// Disable button to avoid multiple click \n\t\t\t\t\t\tsubmitButton.disabled = true;\n\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tsubmitButton.removeAttribute('data-kt-indicator');\n\n\t\t\t\t\t\t\t// Enable button\n\t\t\t\t\t\t\tsubmitButton.disabled = false;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Show success message. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n\t\t\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\t\t\ttext: \"Form has been successfully submitted!\",\n\t\t\t\t\t\t\t\ticon: \"success\",\n\t\t\t\t\t\t\t\tbuttonsStyling: false,\n\t\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\n\t\t\t\t\t\t\t\tcustomClass: {\n\t\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}).then(function (result) {\n\t\t\t\t\t\t\t\tif (result.isConfirmed) {\n\t\t\t\t\t\t\t\t\tmodal.hide();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t//form.submit(); // Submit form\n\t\t\t\t\t\t}, 2000);   \t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Show error message.\n\t\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\t\ttext: \"Sorry, looks like there are some errors detected, please try again.\",\n\t\t\t\t\t\t\ticon: \"error\",\n\t\t\t\t\t\t\tbuttonsStyling: false,\n\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\n\t\t\t\t\t\t\tcustomClass: {\n\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tcancelButton.addEventListener('click', function (e) {\n\t\t\te.preventDefault();\n\n\t\t\tSwal.fire({\n\t\t\t\ttext: \"Are you sure you would like to cancel?\",\n\t\t\t\ticon: \"warning\",\n\t\t\t\tshowCancelButton: true,\n\t\t\t\tbuttonsStyling: false,\n\t\t\t\tconfirmButtonText: \"Yes, cancel it!\",\n\t\t\t\tcancelButtonText: \"No, return\",\n\t\t\t\tcustomClass: {\n\t\t\t\t\tconfirmButton: \"btn btn-primary\",\n\t\t\t\t\tcancelButton: \"btn btn-active-light\"\n\t\t\t\t}\n\t\t\t}).then(function (result) {\n\t\t\t\tif (result.value) {\n\t\t\t\t\tform.reset(); // Reset form\t\n\t\t\t\t\tmodal.hide(); // Hide modal\t\t\t\t\n\t\t\t\t} else if (result.dismiss === 'cancel') {\n\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\ttext: \"Your form has not been cancelled!.\",\n\t\t\t\t\t\ticon: \"error\",\n\t\t\t\t\t\tbuttonsStyling: false,\n\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\n\t\t\t\t\t\tcustomClass: {\n\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\",\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\treturn {\n\t\t// Public functions\n\t\tinit: function () {\n\t\t\t// Elements\n\t\t\tmodalEl = document.querySelector('#kt_modal_new_target');\n\n\t\t\tif (!modalEl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmodal = new bootstrap.Modal(modalEl);\n\n\t\t\tform = document.querySelector('#kt_modal_new_target_form');\n\t\t\tsubmitButton = document.getElementById('kt_modal_new_target_submit');\n\t\t\tcancelButton = document.getElementById('kt_modal_new_target_cancel');\n\n\t\t\tinitForm();\n\t\t\thandleForm();\n\t\t}\n\t};\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n\tKTModalNewTarget.init();\n});"]}