{"version":3,"file":"testimonials-1.js","names":["KTChartMap","init","document","getElementById","root","am5","Root","new","setThemes","am5themes_Animated","chart","container","children","push","am5map","MapChart","panX","projection","geoNaturalEarth1","polygonSeries","series","MapPolygonSeries","geoJSON","am5geodata_continentsLow","exclude","mapPolygons","template","setAll","tooltipText","interactive","templateField","states","create","fill","color","colors","ColorSet","data","id","settings","next","fillPattern","LinePattern","rotation","strokeWidth","RectanglePattern","checkered","CirclePattern","initChart","KTThemeMode","on","rendered","self","destroy","initChartMap","module","exports","KTUtil","onDOMContentLoaded"],"sources":["pages/testimonials/testimonials-1.js"],"mappings":"AAAA,aAGA,IAAIA,WAqHO,CACHC,KAAM,YApHS,WAGf,GAFcC,SAASC,eAAe,YAEtC,CAKR,IAAIC,EAAOC,IAAIC,KAAKC,IAAI,YAGxBH,EAAKI,UAAU,CACbC,mBAAmBF,IAAIH,KAGzB,IAAIM,EAAQN,EAAKO,UAAUC,SAASC,KAClCC,OAAOC,SAASR,IAAIH,EAAM,CACxBY,KAAM,UACNC,WAAYH,OAAOI,sBAKnBC,EAAgBT,EAAMU,OAAOP,KAC/BC,OAAOO,iBAAiBd,IAAIH,EAAM,CAChCkB,QAASC,yBACTC,QAAS,CAAC,iBAIdL,EAAcM,YAAYC,SAASC,OAAO,CACxCC,YAAa,SACbC,aAAa,EACbC,cAAe,aAGjBX,EAAcM,YAAYC,SAASK,OAAOC,OAAO,QAAS,CACxDC,KAAM5B,IAAI6B,MAAM,WAGlB,IAAIC,EAAS9B,IAAI+B,SAAS7B,IAAIH,EAAM,CAAC,GAErCe,EAAckB,KAAKV,OAAO,CAAC,CACzBW,GAAI,SACJC,SAAU,CACRN,KAAME,EAAOK,OACbC,YAAapC,IAAIqC,YAAYnC,IAAIH,EAAM,CACrC8B,MAAO7B,IAAI6B,MAAM,UACjBS,SAAU,GACVC,YAAa,MAGhB,CACDN,GAAI,OACJC,SAAU,CACRN,KAAME,EAAOK,OACbC,YAAapC,IAAIwC,iBAAiBtC,IAAIH,EAAM,CAC1C8B,MAAO7B,IAAI6B,MAAM,UACjBY,WAAW,MAGd,CACDR,GAAI,SACJC,SAAU,CACRN,KAAME,EAAOK,OACbC,YAAapC,IAAI0C,cAAcxC,IAAIH,EAAM,CACvC8B,MAAO7B,IAAI6B,MAAM,UACjBY,WAAW,MAGd,CACDR,GAAI,eACJC,SAAU,CACRN,KAAME,EAAOK,OACbC,YAAapC,IAAI0C,cAAcxC,IAAIH,EAAM,CACvC8B,MAAO7B,IAAI6B,MAAM,cAGpB,CACDI,GAAI,eACJC,SAAU,CACRN,KAAME,EAAOK,OACbC,YAAapC,IAAIqC,YAAYnC,IAAIH,EAAM,CACrC8B,MAAO7B,IAAI6B,MAAM,UACjBS,SAAU,GACVC,YAAa,MAGhB,CACDN,GAAI,UACJC,SAAU,CACRN,KAAME,EAAOK,OACbC,YAAapC,IAAIqC,YAAYnC,IAAIH,EAAM,CACrC8B,MAAO7B,IAAI6B,MAAM,gBAOfc,YAGAC,YAAYC,GAAG,uBAAuB,WAC9BxC,EAAMyC,UACNzC,EAAM0C,KAAKC,UAGfL,WACJ,GAxGA,CAyGJ,CAQQM,EACJ,GAKc,oBAAXC,aAAoD,IAAnBA,OAAOC,UAC/CD,OAAOC,QAAUxD,YAIrByD,OAAOC,oBAAmB,WACtB1D,WAAWC,MACf","sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTChartMap = function () {\n    // Charts widgets\n    var initChartMap = function() {\n        var element = document.getElementById(\"chartdiv\");\n\n        if ( !element ) {\n            return;\n        } \n        \n        // Create root and chart\nvar root = am5.Root.new(\"chartdiv\"); \n\n// Set themes\nroot.setThemes([\n  am5themes_Animated.new(root)\n]);\n\nvar chart = root.container.children.push(\n  am5map.MapChart.new(root, {\n    panX: \"rotateX\",\n    projection: am5map.geoNaturalEarth1()\n  })\n);\n\n// Create polygon series\nvar polygonSeries = chart.series.push(\n  am5map.MapPolygonSeries.new(root, {\n    geoJSON: am5geodata_continentsLow,\n    exclude: [\"antarctica\"]\n  })\n);\n\npolygonSeries.mapPolygons.template.setAll({\n  tooltipText: \"{name}\",\n  interactive: true,\n  templateField: \"settings\"\n});\n\npolygonSeries.mapPolygons.template.states.create(\"hover\", {\n  fill: am5.color(0x677935)\n});\n\nvar colors = am5.ColorSet.new(root, {});\n\npolygonSeries.data.setAll([{\n  id: \"europe\",\n  settings: {\n    fill: colors.next(),\n    fillPattern: am5.LinePattern.new(root, {\n      color: am5.color(0xffffff),\n      rotation: 45,\n      strokeWidth: 1\n    })\n  }\n}, {\n  id: \"asia\",\n  settings: {\n    fill: colors.next(),\n    fillPattern: am5.RectanglePattern.new(root, {\n      color: am5.color(0xffffff),\n      checkered: true\n    })\n  }\n}, {\n  id: \"africa\",\n  settings: {\n    fill: colors.next(),\n    fillPattern: am5.CirclePattern.new(root, {\n      color: am5.color(0xffffff),\n      checkered: true\n    })\n  }\n}, {\n  id: \"northAmerica\",\n  settings: {\n    fill: colors.next(),\n    fillPattern: am5.CirclePattern.new(root, {\n      color: am5.color(0xffffff)\n    })\n  }\n}, {\n  id: \"southAmerica\",\n  settings: {\n    fill: colors.next(),\n    fillPattern: am5.LinePattern.new(root, {\n      color: am5.color(0xffffff),\n      rotation: 90,\n      strokeWidth: 2\n    })\n  }\n}, {\n  id: \"oceania\",\n  settings: {\n    fill: colors.next(),\n    fillPattern: am5.LinePattern.new(root, {\n      color: am5.color(0xffffff),\n    })\n  }\n}])\n\n\n        // Init chart\n        initChart();\n\n        // Update chart on theme mode change\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \n            if (chart.rendered) {\n                chart.self.destroy();\n            }\n\n            initChart();\n        });              \n    }   \n     \n \n\n    // Public methods\n    return {\n        init: function () {            \n            // Charts widgets\n            initChartMap();              \n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = KTChartMap;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTChartMap.init();\n});\n"]}